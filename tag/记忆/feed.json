{
    "version": "https://jsonfeed.org/version/1",
    "title": "X_T • All posts by \"记忆\" tag",
    "description": "人生如逆旅，我亦是行人",
    "home_page_url": "http://www.n1h1l157.live",
    "items": [
        {
            "id": "http://www.n1h1l157.live/2023/07/23/SAFE/%E8%BD%AC%E5%82%A8%E5%BE%AE%E4%BF%A1%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/",
            "url": "http://www.n1h1l157.live/2023/07/23/SAFE/%E8%BD%AC%E5%82%A8%E5%BE%AE%E4%BF%A1%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/",
            "title": "微信数据库备份",
            "date_published": "2023-07-22T16:00:00.000Z",
            "content_html": "<p>如果一个人把自己的记忆弄丢了，那人生只是一个单纯的奔向死亡的过程，无论在他人眼中是什么样的存在，终究是一副空壳而已。而无论那记忆是美好，痛苦或是平淡，那都是我们生命中的一部分，无法割舍的深深的烙印。</p>\n<hr>\n<h3 id=\"效果图展示\"><a class=\"markdownIt-Anchor\" href=\"#效果图展示\">#</a> 效果图展示</h3>\n<ol>\n<li>wechat-backup 导出</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-119.png\" width=\"770\" alt=\"Image\">\n<ol start=\"2\">\n<li>wechat-dump 导出</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-130.png\" width=\"550\" alt=\"Image\">\n<ol start=\"3\">\n<li>聊天记录转 pdf</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-133.png\" width=\"660\" alt=\"Image\">\n<hr>\n<h3 id=\"聊天记录转移至模拟器\"><a class=\"markdownIt-Anchor\" href=\"#聊天记录转移至模拟器\">#</a> 聊天记录转移至模拟器</h3>\n<p><strong>手机聊天记录备份至电脑 -&gt; 电脑聊天记录备份至模拟器 -&gt; 雷电模拟器开启 root -&gt; 模拟器下载 ES 文件浏览器并启用 root 工具箱 -&gt; 复制微信数据库等资料到共享文件</strong></p>\n<ol>\n<li>\n<p>手机聊天记录备份至电脑后，将电脑上存储的聊天记录备份至电脑上的安卓模拟器<br>\n<img data-src=\"/N1h1l157/Safe/image-099.png\" width=\"550\" alt=\"Image\"></p>\n</li>\n<li>\n<p>这里我用的是雷电模拟器，在设置里边可以直接开启 root 权限<br>\n<img data-src=\"/N1h1l157/Safe/image-101.jpg\" width=\"550\" alt=\"Image\"></p>\n</li>\n<li>\n<p>模拟器安装 ES 文件浏览器，通过此文件管理工具操作文件<br>\n<img data-src=\"/N1h1l157/Safe/image-102.jpg\" width=\"550\" alt=\"Image\"></p>\n</li>\n<li>\n<p>ES 文件浏览器开启 Root 工具箱<br>\n<img data-src=\"/N1h1l157/Safe/image-103.jpg\" width=\"550\" alt=\"Image\"></p>\n</li>\n<li>\n<p>此时已经有权限可以看到安卓模拟器上的所有文件夹及文件<br>\n<img data-src=\"/N1h1l157/Safe/image-104.jpg\" width=\"550\" alt=\"Image\"></p>\n</li>\n</ol>\n<hr>\n<h3 id=\"收集微信相关数据\"><a class=\"markdownIt-Anchor\" href=\"#收集微信相关数据\">#</a> 收集微信相关数据</h3>\n<p>各文件夹具体作用参考文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmdyZXljb2RlLnRvcC9wb3N0cy9hbmRyb2lkLXdlY2hhdC1iYWsv\">https://blog.greycode.top/posts/android-wechat-bak/</span></p>\n<blockquote>\n<p>收集以下数据：<br>\nauth_info_key_prefs.xml uin 位置：/data/data/com.tencent.mm/shared_prefs/auth_info_key_prefs.xml<br>\nimage2 所有的微信聊天图片：/data/data/com.tencent.mm/MicroMsg/[32 位字母]/image2<br>\nvoice2 所有的微信语音：/sdcard/Android/data/com.tencent.mm/MicroMsg/[32 位字母]/voice2<br>\nvoide 所有的微信视频：/sdcard/Android/data/com.tencent.mm/MicroMsg/[32 位字母]/voide<br>\navatar 所有的微信头像：/data/data/com.tencent.mm/MicroMsg/[32 位字母]/avatar<br>\nDownload 聊天发送的文件存放在这里：/sdcard/Android/data/com.tencent.mm/MicroMsg/Download<br>\nEnMicroMsg.db 微信数据库文件：/data/data/com.tencent.mm/MicroMsg/[32 位字母]/EnMicroMsg.db<br>\nWxFileIndex.db 文件索引：/data/data/com.tencent.mm/MicroMsg/[32 位字母]/WxFileIndex.db<br>\nemoji 表情包：/data/data/com.tencent.mm/MicroMsg/emoji</p>\n</blockquote>\n<ol start=\"6\">\n<li>\n<p>收集数据，以微信本地数据库 EnMicroMsg.db 为例，长按 -&gt; 更多 -&gt; 复制到<br>\n<img data-src=\"/N1h1l157/Safe/image-106.jpg\" width=\"550\" alt=\"Image\"></p>\n</li>\n<li>\n<p>我选择了复制到 Applications 的共享文件，也可以选择 Alarms 及 dianxin<br>\n<img data-src=\"/N1h1l157/Safe/image-107.jpg\" width=\"550\" alt=\"Image\"></p>\n</li>\n<li>\n<p>如果觉得传输速度太慢，可以先压缩，再复制过去解压<br>\n<img data-src=\"/N1h1l157/Safe/image-108.jpg\" width=\"550\" alt=\"Image\"></p>\n</li>\n<li>\n<p>打开模拟器的共享在电脑上的文件夹的位置，判断复制成功<br>\n<img data-src=\"/N1h1l157/Safe/image-109.jpg\" width=\"700\" alt=\"Image\"></p>\n</li>\n<li>\n<p>同样的方法，复制其他需要收集的数据到电脑上的共享文件中<br>\n<img data-src=\"/N1h1l157/Safe/image-111.jpg\" width=\"700\" alt=\"Image\"></p>\n</li>\n</ol>\n<hr>\n<h3 id=\"数据前期处理\"><a class=\"markdownIt-Anchor\" href=\"#数据前期处理\">#</a> 数据前期处理</h3>\n<p>数据库解密参考文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzI1OTI2NDgxL2FydGljbGUvZGV0YWlscy8xMjIzMjYzMTM=\">https://blog.csdn.net/sinat_25926481/article/details/122326313</span><br>\n 音频解码参考文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dyZXljb2RlZS93ZWNoYXQtYmFja3Vw\">https://github.com/greycodee/wechat-backup</span></p>\n<p><strong>获取数据库密码 -&gt; 解密微信数据库 -&gt; 解码音频文件</strong></p>\n<ol start=\"11\">\n<li>获取 uin 值，如图 _auth_uin 所在行的值就是，我的为 - 1639125062</li>\n</ol>\n<blockquote>\n<p>微信数据库密码为 IMEI+UNI 的 md5 加密后的前 7 位<br>\n IMEI+UNI：1234567890ABCDEF-1639125062<br>\n 在线 md5 加密： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZDVqaWFtaS5ibWN4LmNvbS8=\">https://md5jiami.bmcx.com/</span><br>\n 命令行 md5 加密：echo -n “1234567890ABCDEF-1639125062” | md5</p>\n</blockquote>\n<img data-src=\"/N1h1l157/Safe/image-112.png\" width=\"770\" alt=\"Image\">\n<p>如图，显示的前 7 位为我的数据库密码：23a9a94</p>\n<ol start=\"12\">\n<li>通过获取到的数据库密码将 EnMicroMsg.db 导出为一个未加密的数据库，依次输入以下命令解密数据库</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装sqlcipher -&gt; 如果系统是os，请根据参考文章给出的方式安装工具</span></span><br><span class=\"line\">brew install sqlcipher</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">通过 sqlcipher 操作数据库</span></span><br><span class=\"line\">sqlcipher EnMicroMsg.db</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">依次在sqllite命令行输入以下命令</span></span><br><span class=\"line\">PRAGMA key = &#x27;23a9a94&#x27;;</span><br><span class=\"line\">PRAGMA cipher_use_hmac = off;</span><br><span class=\"line\">PRAGMA kdf_iter = 4000;</span><br><span class=\"line\">PRAGMA cipher_page_size = 1024;</span><br><span class=\"line\">PRAGMA cipher_hmac_algorithm = HMAC_SHA1;</span><br><span class=\"line\">PRAGMA cipher_kdf_algorithm = PBKDF2_HMAC_SHA1;</span><br><span class=\"line\">ATTACH DATABASE &#x27;EnMicroMsg_230721.db&#x27; AS EnMicroMsg_230721 KEY &#x27;&#x27;;</span><br><span class=\"line\">SELECT sqlcipher_export(&#x27;EnMicroMsg_230721&#x27;);</span><br><span class=\"line\">DETACH DATABASE EnMicroMsg_230721;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除无用的文件</span></span><br><span class=\"line\">rm -f EnMicroMsg.db-wal EnMicroMsg.db-shm</span><br></pre></td></tr></table></figure>\n<img data-src=\"/N1h1l157/Safe/image-113.png\" width=\"800\" alt=\"Image\">\n<p>如图，将导出为一个未加密的数据库，名为 EnMicroMsg_230721.db</p>\n<ol start=\"13\">\n<li>\n<p>同样的方法，解密微信索引数据库 WxFileIndex.db, 注意导出的数据库名字不可以重复<br>\n<img data-src=\"/N1h1l157/Safe/image-114.png\" width=\"800\" alt=\"Image\"></p>\n</li>\n<li>\n<p>通过 docker 拉取 greycodee/silkv3-decoder 镜像，将编码后的 amr 格式解码为 mp3</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">我将 voice 发送到了装有 docker 的linux，执行以下命令解码音频后再传回来</span></span><br><span class=\"line\">docker run --rm -v /root/voice2:/media  greycodee/silkv3-decoder</span><br></pre></td></tr></table></figure>\n<img data-src=\"/N1h1l157/Safe/image-115.png\" width=\"800\" alt=\"Image\">\n<hr>\n<h3 id=\"wechat-backup-导出-html\"><a class=\"markdownIt-Anchor\" href=\"#wechat-backup-导出-html\">#</a> wechat-backup 导出 html</h3>\n<p>源码位置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dyZXljb2RlZS93ZWNoYXQtYmFja3Vw\">https://github.com/greycodee/wechat-backup</span></p>\n<p><strong>修改代码中指向的数据库名和数据库索引表 -&gt; 本地 web 查看聊天记录</strong></p>\n<ol start=\"15\">\n<li>\n<p>wechat-backup 是用 go 写出来的，star*2.2k, 效果还是很不错的<br>\n<img data-src=\"/N1h1l157/Safe/image-116.png\" width=\"770\" alt=\"Image\"></p>\n</li>\n<li>\n<p>修改 db/wxdb.go 下的数据库名，改为刚才解码导出后的两个数据库<br>\n<img data-src=\"/N1h1l157/Safe/image-117.png\" width=\"770\" alt=\"Image\"></p>\n</li>\n<li>\n<p>指定数据运行程序  <code>go run main.go -f /Volumes/KINGSTON/微信数据库/230721_backup</code> <br>\n<img data-src=\"/N1h1l157/Safe/image-118.png\" width=\"770\" alt=\"Image\"></p>\n</li>\n<li>\n<p>查看聊天记录  <code>http://127.0.0.1:9999</code> <br>\n<img data-src=\"/N1h1l157/Safe/image-119.png\" width=\"770\" alt=\"Image\"></p>\n</li>\n</ol>\n<hr>\n<h3 id=\"wechat-dump-导出-html\"><a class=\"markdownIt-Anchor\" href=\"#wechat-dump-导出-html\">#</a> wechat-dump 导出 html</h3>\n<p>源码位置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bwd3d5eXh4L3dlY2hhdC1kdW1w\">https://github.com/ppwwyyxx/wechat-dump</span></p>\n<ol start=\"19\">\n<li>wechat-backup 是用 py 写出来的，star*1.5k, 效果我很喜欢</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-120.png\" width=\"770\" alt=\"Image\">\n<ol start=\"20\">\n<li>克隆项目  <code>git clone https://github.com/ppwwyyxx/wechat-dump.git</code></li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-121.png\" width=\"660\" alt=\"Image\">\n<ol start=\"21\">\n<li>列出联系人及其微信号<br>\n <code>python list-chats.py /Volumes/KINGSTON/微信数据库备份/220921_backup/EnMicroMsg_220921.db &gt; list_chats_22.txt</code></li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-122.png\" width=\"660\" alt=\"Image\">\n<ol start=\"22\">\n<li>导出数据库中的聊天记录<br>\n <code>python dump-msg.py /Volumes/KINGSTON/微信数据库备份/220921_backup/EnMicroMsg_220921.db res/msg</code></li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-123.png\" width=\"660\" alt=\"Image\">\n<p>如图，环境问题终于还是来了，不过这个脚本直接加个 try 就可以解决了</p>\n<ol start=\"23\">\n<li>加个捕获异常可以正常导出聊天的 msg 信息</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-124.png\" width=\"660\" alt=\"Image\">\n<ol start=\"24\">\n<li>可以看到每个人或者每个群的聊天记录的 msg 信息，可据此写写前端</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-126.png\" width=\"660\" alt=\"Image\">\n<p><strong>但是接下来将聊天记录导出为 html 的时候，碰到了很多奇怪的问题，自己索性修改了作者提供的源码</strong></p>\n<hr>\n<h3 id=\"修改-wechat-dump-源码\"><a class=\"markdownIt-Anchor\" href=\"#修改-wechat-dump-源码\">#</a> 修改 wechat-dump 源码</h3>\n<p>源码位置：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL24xaDFsMTU3L3dlY2hhdC1kdW1w\">https://github.com/n1h1l157/wechat-dump</span></p>\n<p><strong>或许在调试的时候还是会遇到些 bug，建议自己 fork 下来断点调试</strong></p>\n<ol start=\"25\">\n<li>导出为 html<br>\n <code>python dump-html.py --db /Volumes/KINGSTON/微信数据库备份/220921_backup/EnMicroMsg_220921.db --res /Volumes/KINGSTON/微信数据库备份/230721_backup --output result/Camile/Camile.html wxid_qxxxxxxx22</code></li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-128.png\" width=\"660\" alt=\"Image\">\n<ol start=\"26\">\n<li>导出后的文件如图，html 被分为若干个</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-129.png\" width=\"550\" alt=\"Image\">\n<ol start=\"27\">\n<li>可以本地预览这些 html 文件，表情包、图标、音频、视频等都是正常的，除非图片已经丢失</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-130.png\" width=\"550\" alt=\"Image\">\n<hr>\n<h3 id=\"导出聊天记录为-pdf\"><a class=\"markdownIt-Anchor\" href=\"#导出聊天记录为-pdf\">#</a> 导出聊天记录为 pdf</h3>\n<p><strong>后面做了自定义的一些设置，直接把脚本贴到 github 了，需要自行阅读源码理解</strong></p>\n<ol start=\"28\">\n<li>按自己喜欢的方式做了一些小改变，将 html 拼接为一个整体的大的 html 文件</li>\n</ol>\n<p><code>python merge_html.py -f /Users/chentuo/Personal/myself/微信数据库/wechat_dump/result/Camile -n Camile.html</code></p>\n<img data-src=\"/N1h1l157/Safe/image-131.png\" width=\"660\" alt=\"Image\">\n<ol start=\"29\">\n<li>对 html 做处理，使得拼接后的 html 文件只保留最顶部的滚动条</li>\n</ol>\n<p><code>python modify_html.py --nickname 'Camile' --input /Users/chentuo/Personal/myself/微信数据库/wechat_dump/result/Camile/Camile.html</code></p>\n<p>30）通过 js 加载 puppeteer，用一个谷歌浏览器的测试版将 html 转为多页的 pdf</p>\n<p>参考项目：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B1cHBldGVlci9wdXBwZXRlZXI=\">https://github.com/puppeteer/puppeteer</span></p>\n<p><code>node convert_html_to_pdf.js -f 'Camile' -n 20 -e '～/.cache/puppeteer/chrome/mac_arm-114.0.5735.133/chrome-mac-arm64/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing'</code></p>\n<img data-src=\"/N1h1l157/Safe/image-132.png\" width=\"660\" alt=\"Image\">\n<ol start=\"30\">\n<li>最后聊天记录保存成了本地的 pdf 文件</li>\n</ol>\n<img data-src=\"/N1h1l157/Safe/image-133.png\" width=\"660\" alt=\"Image\">\n<p>大功告成，结束。</p>\n",
            "tags": [
                "记忆"
            ]
        }
    ]
}